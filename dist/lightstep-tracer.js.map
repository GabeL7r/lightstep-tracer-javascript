{"version":3,"sources":["webpack://lightstep/webpack/universalModuleDefinition","webpack://lightstep/webpack/bootstrap","webpack://lightstep/./node_modules/@protobufjs/aspromise/index.js","webpack://lightstep/./node_modules/@protobufjs/base64/index.js","webpack://lightstep/./node_modules/@protobufjs/eventemitter/index.js","webpack://lightstep/./node_modules/@protobufjs/float/index.js","webpack://lightstep/./node_modules/@protobufjs/inquire/index.js","webpack://lightstep/./node_modules/@protobufjs/pool/index.js","webpack://lightstep/./node_modules/@protobufjs/utf8/index.js","webpack://lightstep/./node_modules/eventemitter3/index.js","webpack://lightstep/./node_modules/hex2dec/index.js","webpack://lightstep/./node_modules/opentracing/lib/binary_carrier.js","webpack://lightstep/./node_modules/opentracing/lib/constants.js","webpack://lightstep/./node_modules/opentracing/lib/ext/tags.js","webpack://lightstep/./node_modules/opentracing/lib/functions.js","webpack://lightstep/./node_modules/opentracing/lib/global_tracer.js","webpack://lightstep/./node_modules/opentracing/lib/index.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/index.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_context.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_report.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_span.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_tracer.js","webpack://lightstep/./node_modules/opentracing/lib/noop.js","webpack://lightstep/./node_modules/opentracing/lib/reference.js","webpack://lightstep/./node_modules/opentracing/lib/span.js","webpack://lightstep/./node_modules/opentracing/lib/span_context.js","webpack://lightstep/./node_modules/opentracing/lib/tracer.js","webpack://lightstep/./node_modules/protobufjs/minimal.js","webpack://lightstep/./node_modules/protobufjs/src/index-minimal.js","webpack://lightstep/./node_modules/protobufjs/src/reader.js","webpack://lightstep/./node_modules/protobufjs/src/reader_buffer.js","webpack://lightstep/./node_modules/protobufjs/src/roots.js","webpack://lightstep/./node_modules/protobufjs/src/rpc.js","webpack://lightstep/./node_modules/protobufjs/src/rpc/service.js","webpack://lightstep/./node_modules/protobufjs/src/util/longbits.js","webpack://lightstep/./node_modules/protobufjs/src/util/minimal.js","webpack://lightstep/./node_modules/protobufjs/src/writer.js","webpack://lightstep/./node_modules/protobufjs/src/writer_buffer.js","webpack://lightstep/(webpack)/buildin/global.js","webpack://lightstep/./src/_each.js","webpack://lightstep/./src/constants.js","webpack://lightstep/./src/imp/auth_imp.js","webpack://lightstep/./src/imp/coerce.js","webpack://lightstep/./src/imp/generated_proto.js","webpack://lightstep/./src/imp/globals.js","webpack://lightstep/./src/imp/log_builder.js","webpack://lightstep/./src/imp/log_record_imp.js","webpack://lightstep/./src/imp/platform/browser/crouton_thrift.js","webpack://lightstep/./src/imp/platform/browser/generated/thrift_all.js","webpack://lightstep/./src/imp/platform/browser/options_parser.js","webpack://lightstep/./src/imp/platform/browser/platform_browser.js","webpack://lightstep/./src/imp/platform/browser/thrift.js","webpack://lightstep/./src/imp/platform/browser/transport_httpproto.js","webpack://lightstep/./src/imp/platform/browser/transport_httpthrift.js","webpack://lightstep/./src/imp/platform/browser/util.js","webpack://lightstep/./src/imp/report_imp.js","webpack://lightstep/./src/imp/runtime_imp.js","webpack://lightstep/./src/imp/span_context_imp.js","webpack://lightstep/./src/imp/span_imp.js","webpack://lightstep/./src/imp/tracer_imp.js","webpack://lightstep/./src/imp/util/clock_state.js","webpack://lightstep/./src/imp/util/util.js","webpack://lightstep/./src/lib.js","webpack://lightstep/./src/platform_abstraction_layer.js","webpack://lightstep/./src/plugins/instrument_document_load.js","webpack://lightstep/./src/plugins/instrument_xhr.js","webpack://lightstep/./src/plugins/log_to_console.js"],"names":["_each","obj","cb","key","hasOwnProperty","call","LOG_INFO","LOG_WARN","LOG_ERROR","LOG_FATAL","LOG_LEVEL_TO_STRING","LOG_STRING_TO_LEVEL","I","W","E","F","CLOCK_STATE_REFRESH_INTERVAL_MS","LIGHTSTEP_APP_URL_PREFIX","JOIN_ID_PREFIX","proto","collector","AuthImp","accessToken","_accessToken","Auth","access_token","authProto","toString","toNumber","toBoolean","value","Number","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","lightstep","SpanContext","properties","baggage","keys","Object","i","length","prototype","traceId","Long","fromBits","spanId","emptyObject","create","encode","message","writer","uint32","uint64","fork","string","ldelim","encodeDelimited","decode","reader","end","undefined","len","pos","tag","skip","skipType","decodeDelimited","verify","isInteger","low","high","isObject","isString","fromObject","object","fromValue","unsigned","parseInt","LongBits","TypeError","String","toObject","options","objects","defaults","long","longs","keys2","j","toJSON","constructor","toJSONOptions","KeyValue","stringValue","intValue","doubleValue","boolValue","jsonValue","$oneOfFields","defineProperty","get","oneOfGetter","set","oneOfSetter","int64","double","bool","Boolean","oneofs","json","isFinite","Log","fields","timestamp","emptyArray","google","protobuf","Timestamp","push","error","Array","isArray","arrays","Reference","relationship","spanContext","int32","enums","Relationship","valuesById","values","Span","references","tags","logs","operationName","startTimestamp","durationMicros","Reporter","reporterId","MetricsSample","name","InternalMetrics","counts","gauges","ReportRequest","spans","reporter","auth","timestampOffsetMicros","internalMetrics","Command","disable","ReportResponse","commands","errors","warnings","infos","receiveTimestamp","transmitTimestamp","CollectorService","rpcImpl","requestDelimited","responseDelimited","rpc","Service","report","request","callback","rpcCall","seconds","nanos","FileDescriptorSet","file","FileDescriptorProto","dependency","publicDependency","weakDependency","messageType","enumType","service","extension","sourceCodeInfo","syntax","DescriptorProto","EnumDescriptorProto","ServiceDescriptorProto","FieldDescriptorProto","FileOptions","SourceCodeInfo","end2","field","nestedType","extensionRange","oneofDecl","reservedRange","reservedName","ExtensionRange","MessageOptions","OneofDescriptorProto","ReservedRange","start","number","label","type","typeName","extendee","defaultValue","oneofIndex","jsonName","FieldOptions","Label","Type","OneofOptions","EnumValueDescriptorProto","EnumOptions","EnumValueOptions","method","MethodDescriptorProto","ServiceOptions","inputType","outputType","clientStreaming","serverStreaming","MethodOptions","uninterpretedOption","javaPackage","javaOuterClassname","javaMultipleFiles","javaGenerateEqualsAndHash","javaStringCheckUtf8","optimizeFor","goPackage","ccGenericServices","javaGenericServices","pyGenericServices","deprecated","ccEnableArenas","objcClassPrefix","csharpNamespace","UninterpretedOption","OptimizeMode","messageSetWireFormat","noStandardDescriptorAccessor","mapEntry","ctype","packed","jstype","lazy","weak","CType","JSType","allowAlias","api","HttpRule","identifierValue","positiveIntValue","negativeIntValue","newBuffer","aggregateValue","NamePart","bytes","base64","slice","namePart","isExtension","ProtocolError","instance","location","Location","path","span","leadingDetachedComments","leadingComments","trailingComments","GeneratedCodeInfo","annotation","Annotation","sourceFile","begin","Http","rules","additionalBindings","put","post","patch","custom","selector","body","CustomHttpPattern","pattern","kind","default","PackageGlobals","opts","val","module","exports","constants","require","coerce","LogBuilder","runtime","_runtime","_record","LogRecord","timestamp_micros","_platform","nowMicros","runtime_guid","span_guid","stable_name","level","thread_id","filename","line_number","stack_frames","payload_json","error_flag","_addLogRecord","micros","msg","num","guid","stableName","flag","data","_encodePayload","payloadJSON","JSON","stringify","_ignored","googleProtobufTimestampPB","LogRecordImp","logFieldKeyHardLimit","logFieldValueHardLimit","timestampMicros","_logFieldKeyHardLimit","_logFieldValueHardLimit","_timestampMicros","_fields","_keysOverLimit","_valuesOverLimit","_clearOverLimits","thriftFields","keyStr","getFieldKey","valStr","getFieldValue","Key","Value","substr","e","log","ts","millis","Math","floor","secs","keyValues","keyValue","crouton_thrift","Thrift","args","TProtocolException","TProtocolExceptionType","UNKNOWN","read","write","NamedCounter","Name","Runtime","start_micros","group_name","attrs","TraceJoinId","TraceKey","SpanRecord","trace_guid","span_name","join_ids","oldest_micros","youngest_micros","attributes","log_records","Timing","receive_micros","transmit_micros","SampleCount","count","int64_value","double_value","Metrics","span_records","timestamp_offset_micros","counters","internal_logs","internal_metrics","timing","hostScriptElement","WorkerGlobalScope","self","scripts","document","getElementsByTagName","urlQueryParameters","vars","qi","window","href","indexOf","hashes","replace","split","hash","decodeURIComponent","parseScriptElementOptions","browserOpts","dataset","componentName","component_name","collectorHost","collector_host","collectorPort","collector_port","collectorPath","collector_path","collectorEncryption","collector_encryption","enable","verbosity","init","init_global_tracer","xhr_instrumentation","instrument_page_load","parseURLQueryOptions","params","lightstep_verbosity","lightstep_log_to_console","log_to_console","optionsParser","kRuntimeGUIDCookiePrefix","kSessionIDCookieKey","kCookieTimeToLiveSeconds","nowMicrosImp","performance","now","navigationStart","Date","PlatformBrowser","groupName","cookieKey","uuid","cookie","_generateLongUUID","sessionID","p0","abs","random","p1","addEventListener","imp","tracerOpts","Error","sessionStorage","parse","getItem","setItem","lib","initGlobalTracer","opentracing","Tracer","TransportBrowser","_host","_port","_path","_encryption","detached","done","_reportAJAX","reportProto","toProto","protocol","url","xhr","XMLHttpRequest","responseType","open","setRequestHeader","onreadystatechange","readyState","err","resp","jsonResp","status","response","Uint8Array","exception","serialized","finish","send","_reportAsyncScript","payload","toThrift","getAccessToken","responseText","authJSON","reportJSON","encodeURIComponent","elem","createElement","async","defer","src","hostElem","appendChild","ttl","domain","secure","arguments","newCookie","toUTCString","ReportImp","oldestMicros","youngestMicros","spanRecords","internalLogs","_oldestMicros","_youngestMicros","_spanRecords","_internalLogs","_counters","_timestampOffsetMicros","_runtimeGUID","thriftCounters","thriftSpanRecords","spanRecord","_toThrift","spansList","_toProto","countsList","metricSample","converter","packageObject","RuntimeImp","runtimeGUID","startMicros","_startMicros","_componentName","_attributes","thriftAttrs","tracerVersion","version","tracerPlatform","hexToDec","reporterProto","SpanContextImp","_baggage","f","spanGUID","traceGUID","_guid","_traceGUID","SpanImp","_tracerImp","_ctx","_operationName","keyValuePairs","_tags","argumentType","_error","tsMicros","record","getLogFieldKeyHardLimit","getLogFieldValueHardLimit","_log_records","emit","finishTime","tracer","console","assert","_ended","_beginMicros","_endMicros","_errorFlag","parent_span_guid","urlPrefix","_addSpanRecord","logRecord","logThrift","getNumKeysOverLimit","getNumValuesOverLimit","spanContextProto","spanProto","startMillis","startSeconds","startNanos","logProto","parentSpanGUID","strValue","strKey","ref","CHILD_OF","parentSpanContext","ClockState","globals","CARRIER_TRACER_STATE_PREFIX","CARRIER_BAGGAGE_PREFIX","DEFAULT_COLLECTOR_HOSTNAME","DEFAULT_COLLECTOR_PORT_TLS","DEFAULT_COLLECTOR_PORT_PLAIN","DEFAULT_COLLECTOR_PATH","MAX_INTERNAL_LOGS","_singleton","_delegateEventEmitterMethods","setOptions","override_runtime_guid","_plugins","_options","_optionDescs","_makeOptionsTable","_opentracing","opentracing_module","_auth","logger","warn","_warn","_transport","override_transport","transport","_reportingLoopActive","_reportYoungestMicros","_reportTimer","_reportErrorStreak","_lastVisibleErrorMillis","_skippedVisibleErrors","_activeRootSpanSet","_activeRootSpan","_flushIsActive","addPlugin","addPlatformPlugins","setPlatformOptions","_useClockState","disable_clock_skew_correction","_clockState","localStoreGet","localStoreSet","_setupReportOnExit","_info","startPlugins","_ee","methodName","apply","addOption","min","max","parentCtxImp","REFERENCE_CHILD_OF","REFERENCE_FOLLOWS_FROM","context","referencedContext","generateTraceGUIDForRootSpan","spanImp","generateUUID","addTags","default_span_tags","setBeginMicros","setParentGUID","format","carrier","FORMAT_HTTP_HEADERS","FORMAT_TEXT_MAP","_injectToTextMap","FORMAT_BINARY","forEachBaggageItem","_extractTextMap","foundFields","toLowerCase","suffix","setBaggageItem","disabled","_flushReport","v","userOptions","desc","modified","unchanged","_setOptionInternal","_initReportingDataIfNeeded","_startReportingLoop","optionsString","newValue","_debug","valueType","oldValue","platformTags","tracerTags","log_field_key_hard_limit","log_field_value_hard_limit","pluginSet","plugins","plugin","addOptions","_setActiveRootSpanToYoungest","jsonString","buffer","ArrayBuffer","view","code","charCodeAt","arr","fromCharCode","b","unused","countersAllZero","_internalAddSpanRecord","max_span_records","index","currentInternalLogs","toAdd","concat","_pushInternalLog","disable_report_on_exit","finalFlushOnce","finalFlush","unflushed_spans","buffer_youngest_micros","onBeforeExit","disable_reporting_loop","stopReportingOnce","stopReporting","_stopReportingLoop","loop","_enqueueNextReport","delay","delay_initial_report_millis","detachedTimeout","clearTimeout","reportInterval","max_reporting_interval_millis","isReady","backOff","basis","jitter","manual","clockReady","clockOffsetMicros","offsetMicros","offset_micros","active_samples","activeSampleCount","ready","_buffersAreEmpty","_clearBuffers","ensureConnection","timestampOffset","originMicros","res","destinationMicros","reportWindowSeconds","errString","last_report_seconds_ago","_restoreRecords","getSpanRecords","getInternalLogs","getCounters","streak","spans_reported","addSample","_printToConsole","nextVisible","error_throttle_millis","s","silent","kMaxOffsetAge","kStoredSamplesTTLMicros","_nowMicros","_localStoreGet","_localStoreSet","_samples","_currentOffsetMicros","_currentOffsetAge","storedData","samples","update","receiveMicros","transmitMicros","latestDelayMicros","MAX_VALUE","latestOffsetMicros","shift","delayMicros","minDelayMicros","bestOffsetMicros","sample","pow","sqrt","kSGATE","Util","timer","setTimeout","unref","library","initLibrary","Platform","ThriftTransport","ProtoTransport","thrift","InstrumentPageLoad","_inited","_span","tracerImp","currentOptions","_ensureSpanStarted","_handleReadyStateChange","bind","startSpan","addActiveRootSpan","state","_addTimingSpans","logEvent","removeActiveRootSpan","nav","dst","p","item","description","suffixes","parentImp","setTag","navigator","userAgent","_copyNavigatorProperties","chrome","loadTimes","chromeTimes","domComplete","childOf","requestStart","setEndMicros","responseStart","responseEnd","domLoading","domInteractive","proxied","getCookies","cookies","parts","getResponseHeaders","raw","getAllResponseHeaders","InstrumentXHR","_enabled","_isValidContext","_proxyInited","_internalExclusions","_tracer","_handleOptions","_addServiceHostToExclusions","on","current","serviceHost","_instrumentSetRequestHeader","_instrumentOpen","_instrumentSend","escapeRegExp","str","host","port","RegExp","header","__requestHeaders","asyncArg","user","password","_shouldTrace","__tracer_span","__tracer_url","url_pathname","openPayload","event","headers","statusText","result","lenStr","data_length","headersCarrier","inject","forEach","ex","test","include","xhr_url_inclusion_patterns","inc","xhr_url_exclusion_patterns","LogToConsole","_optionsCb","_logAddedCb","_handleLogAdded","removeListener","enabled"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFa;AACb;;AAEA;AACA,wBAAwB,qBAAqB;AAC7C;AACA,UAAU;AACV,WAAW,WAAW;AACtB,WAAW,KAAK;AAChB,aAAa;AACb;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,EAAE;AACb,WAAW,KAAK;AAChB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;ACnDa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB;;AAEA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,UAAU;AACV,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,8BAA8B,EAAE,mBAAmB,EAAE,iBAAiB,EAAE;AACxE;;;;;;;;;;;;;AC1Ia;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;;;;;;;;;;;;AC3Ea;;AAEb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,0CAA0C;AACvD;AACA;AACA,aAAa;AACb;AACA,oDAAoD;AACpD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ua;AACb;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,KAAK,aAAa;AAClB;AACA;;;;;;;;;;;;;AChBa;AACb;;AAEA;AACA,4BAA4B,gBAAgB;AAC5C;AACA,UAAU;AACV,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;;AAEA;AACA,wBAAwB,gBAAgB;AACxC;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ca;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,WAAW;AACX,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxGa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gDAAgD,YAAY;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;;;;;ACrQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnGa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AC9Da;AACb,8CAA8C,cAAcgC;;;;;;;;;;;;AC3Ga;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,gEAAa;AACrC,kBAAkB,mBAAO,CAAC,gEAAa;AACvC,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACnCa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACpEa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0EAAkB;AACjD;AACA,WAAW,mBAAO,CAAC,8DAAY;AAC/B;AACA,WAAW,mBAAO,CAAC,sDAAQ;AAC3B,kBAAkB,mBAAO,CAAC,gEAAa;AACvC;AACA,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA,qBAAqB,mBAAO,CAAC,sEAAgB;AAC7C;AACA,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA,oBAAoB,mBAAO,CAAC,0EAAe;AAC3C;AACA,SAAS,mBAAO,CAAC,wEAAiB;AAClC,SAAS,mBAAO,CAAC,gEAAa;AAC9B,SAAS,mBAAO,CAAC,gEAAa;AAC9B;AACA;AACA,iC;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C;AACA,kBAAkB,mBAAO,CAAC,4EAAa;AACvC;AACA,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C;AACA,iC;;;;;;;;;;;;ACRa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yDAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,wC;;;;;;;;;;;;ACjCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,uC;;;;;;;;;;;;AC5Ca;AACb;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yDAAU;AACpC,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,qC;;;;;;;;;;;;ACnGa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,yDAAU;AACpC,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C,kBAAkB,mBAAO,CAAC,4EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,uC;;;;;;;;;;;;AC3Ea;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B,qBAAqB,mBAAO,CAAC,sEAAgB;AAC7C,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,sDAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,IAAI;AACnB;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qCAAqC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gC;;;;;;;;;;;;AC9Ma;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,wC;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,gEAAa;AACrC,WAAW,mBAAO,CAAC,sDAAQ;AAC3B,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,eAAe,OAAO;AACtB,eAAe,YAAY;AAC3B,gBAAgB,KAAK;AACrB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,oBAAoB;AACzE;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kC;;;;;;;;;;;;AClJA;;AAEa;AACb,iBAAiB,mBAAO,CAAC,2EAAqB;;;;;;;;;;;;;ACHjC;AACb;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,wBAAwB,mBAAO,CAAC,yDAAU;AAC1C,wBAAwB,mBAAO,CAAC,uEAAiB;AACjD,wBAAwB,mBAAO,CAAC,yDAAU;AAC1C,wBAAwB,mBAAO,CAAC,uEAAiB;;AAEjD;AACA,wBAAwB,mBAAO,CAAC,qEAAgB;AAChD,wBAAwB,mBAAO,CAAC,mDAAO;AACvC,wBAAwB,mBAAO,CAAC,uDAAS;AACzC;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnCa;AACb;;AAEA,gBAAgB,mBAAO,CAAC,qEAAgB;;AAExC,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,oBAAoB,IAAI,mBAAmB,uCAAuC;AAC/F,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,2BAA2B;AAC3B;AACA,iEAAiE;AACjE,iEAAiE;AACjE,iEAAiE;AACjE,iEAAiE;AACjE,iEAAiE;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,KAAK;AACL;;;;;;;;;;;;;ACpZa;AACb;;AAEA;AACA,aAAa,mBAAO,CAAC,yDAAU;AAC/B;;AAEA,WAAW,mBAAO,CAAC,qEAAgB;;AAEnC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;;;;;;;;;;;;AC3Ca;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,qBAAqB;AACtD;AACA,UAAU;AACV,WAAW,mCAAmC,YAAY,GAAG;AAC7D,WAAW,WAAW;AACtB,WAAW,gBAAgB;AAC3B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,mCAAmC,cAAc;AACjD;AACA,UAAU;AACV,WAAW,WAAW;AACtB,WAAW,gBAAgB;AAC3B,aAAa;AACb;;AAEA,cAAc,mBAAO,CAAC,mEAAe;;;;;;;;;;;;;ACnCxB;AACb;;AAEA,WAAW,mBAAO,CAAC,sEAAiB;;AAEpC;AACA;;AAEA;AACA,yCAAyC,sCAAsC;AAC/E;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA,UAAU;AACV,WAAW,WAAW;AACtB,WAAW,KAAK;AAChB,aAAa;AACb;;AAEA;AACA,+BAA+B,kBAAkB,gBAAgB,qBAAqB;AACtF;AACA;AACA;AACA,UAAU;AACV,WAAW,sBAAsB;AACjC,WAAW,gCAAgC;AAC3C,aAAa,uBAAuB;AACpC;;AAEA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,mCAAmC,kCAAkC;AACrE,WAAW,oCAAoC;AAC/C,WAAW,kBAAkB;AAC7B,WAAW,kBAAkB;AAC7B,WAAW,sBAAsB;AACjC,WAAW,gCAAgC;AAC3C,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B,kCAAkC,EAAE;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,+BAA+B,eAAe,EAAE;AAChD;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ia;AACb;;AAEA,WAAW,mBAAO,CAAC,sEAAiB;;AAEpC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,4BAA4B,UAAU;AACtC,4CAA4C,aAAa;AACzD,0BAA0B,UAAU;;AAEpC;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvMA,8CAAa;AACb;;AAEA;AACA,iBAAiB,mBAAO,CAAC,4EAAuB;;AAEhD;AACA,cAAc,mBAAO,CAAC,sEAAoB;;AAE1C;AACA,oBAAoB,mBAAO,CAAC,kFAA0B;;AAEtD;AACA,aAAa,mBAAO,CAAC,oEAAmB;;AAExC;AACA,eAAe,mBAAO,CAAC,wEAAqB;;AAE5C;AACA,YAAY,mBAAO,CAAC,kEAAkB;;AAEtC;AACA,YAAY,mBAAO,CAAC,kEAAkB;;AAEtC;AACA,gBAAgB,mBAAO,CAAC,kEAAY;;AAEpC;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,oFAAoF;;AAEpF;AACA;AACA,UAAU;AACV;AACA;AACA,mDAAmD,kCAAkC;;AAErF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,kCAAkC,EAAE;;AAEpC;AACA;AACA,WAAW,YAAY;AACvB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa,kBAAkB;AAC/B;AACA,oCAAoC;AACpC,4CAA4C,iBAAiB;AAC7D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,mBAAmB;AAChC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,gDAAgD,kBAAkB,gBAAgB,EAAE,EAAE;;AAEtF;AACA;AACA;AACA;AACA,kDAAkD,mCAAmC;;AAErF;AACA;AACA;;AAEA;;AAEA,0DAA0D,kBAAkB,aAAa,EAAE,EAAE;;AAE7F;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B;AACA;AACA,oCAAoC;AACpC,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA,kCAAkC,uBAAuB;AACzD;AACA,UAAU;AACV,aAAa,iBAAiB;AAC9B;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,YAAY;AACzB;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,uBAAuB;AACvB,+DAA+D,QAAQ;AACvE;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,uBAAuB;AACzD;AACA,UAAU;AACV,WAAW,iBAAiB;AAC5B,aAAa;AACb;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,YAAY;AACzB;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7Za;AACb;;AAEA,gBAAgB,mBAAO,CAAC,qEAAgB;;AAExC,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,mBAAmB;AACnB;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,oBAAoB,IAAI,mBAAmB,0CAA0C;AAClG;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB,KAAK,2BAA2B;AACrE,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1ca;AACb;;AAEA;AACA,aAAa,mBAAO,CAAC,yDAAU;AAC/B;;AAEA,WAAW,mBAAO,CAAC,qEAAgB;;AAEnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;;;;;;;;;;;AChFA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBCfwBA,K;AAJxB;AACA;AACA;AACA;AACe,SAASA,KAAT,CAAeC,GAAf,EAAoBC,EAApB,EAAwB;AACnC,QAAI,CAACD,GAAL,EAAU;AACN;AACH;AACD,SAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AACjB,YAAIG,eAAeC,IAAf,CAAoBJ,GAApB,EAAyBE,GAAzB,CAAJ,EAAmC;AAC/BD,eAAGD,IAAIE,GAAJ,CAAH,EAAaA,GAAb;AACH;AACJ;AACJ;;;;;;;;;;;;;;;;;;ACZM,IAAMG,8BAAW,CAAjB;AACA,IAAMC,8BAAW,CAAjB;AACA,IAAMC,gCAAY,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","file":"lightstep-tracer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lightstep\"] = factory();\n\telse\n\t\troot[\"lightstep\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/lib.js\");\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","'use strict';\n\n//\n// We store our EE objects in a plain object whose properties are event names.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// `~` to make sure that the built-in object properties are not overridden or\n// used as an attack vector.\n// We also assume that `Object.create(null)` is available when the event name\n// is an ES6 Symbol.\n//\nvar prefix = typeof Object.create !== 'function' ? '~' : false;\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @param {Boolean} exists We only need to know if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events && this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Mixed} context Only remove listeners matching this context.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return this;\n\n  var listeners = this._events[evt]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn) {\n      if (\n           listeners.fn !== fn\n        || (once && !listeners.once)\n        || (context && listeners.context !== context)\n      ) {\n        events.push(listeners);\n      }\n    } else {\n      for (var i = 0, length = listeners.length; i < length; i++) {\n        if (\n             listeners[i].fn !== fn\n          || (once && !listeners[i].once)\n          || (context && listeners[i].context !== context)\n        ) {\n          events.push(listeners[i]);\n        }\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[evt] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[prefix ? prefix + event : event];\n  else this._events = prefix ? {} : Object.create(null);\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * A function for converting hex <-> dec w/o loss of precision.\n *\n * The problem is that parseInt(\"0x12345...\") isn't precise enough to convert\n * 64-bit integers correctly.\n *\n * Internally, this uses arrays to encode decimal digits starting with the least\n * significant:\n * 8 = [8]\n * 16 = [6, 1]\n * 1024 = [4, 2, 0, 1]\n *\n * Source: http://www.danvk.org/hex2dec.html\n */\n\n// Adds two arrays for the given base (10 or 16), returning the result.\n// This turns out to be the only \"primitive\" operation we need.\nfunction add(x, y, base) {\n  var z = [];\n  var n = Math.max(x.length, y.length);\n  var carry = 0;\n  var i = 0;\n  while (i < n || carry) {\n    var xi = i < x.length ? x[i] : 0;\n    var yi = i < y.length ? y[i] : 0;\n    var zi = carry + xi + yi;\n    z.push(zi % base);\n    carry = Math.floor(zi / base);\n    i++;\n  }\n  return z;\n}\n\n// Returns a*x, where x is an array of decimal digits and a is an ordinary\n// JavaScript number. base is the number base of the array x.\nfunction multiplyByNumber(num, x, base) {\n  if (num < 0) return null;\n  if (num == 0) return [];\n\n  var result = [];\n  var power = x;\n  while (true) {\n    if (num & 1) {\n      result = add(result, power, base);\n    }\n    num = num >> 1;\n    if (num === 0) break;\n    power = add(power, power, base);\n  }\n\n  return result;\n}\n\nfunction parseToDigitsArray(str, base) {\n  var digits = str.split('');\n  var ary = [];\n  for (var i = digits.length - 1; i >= 0; i--) {\n    var n = parseInt(digits[i], base);\n    if (isNaN(n)) return null;\n    ary.push(n);\n  }\n  return ary;\n}\n\nfunction convertBase(str, fromBase, toBase) {\n  var digits = parseToDigitsArray(str, fromBase);\n  if (digits === null) return null;\n\n  var outArray = [];\n  var power = [1];\n  for (var i = 0; i < digits.length; i++) {\n    // invariant: at this point, fromBase^i = power\n    if (digits[i]) {\n      outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);\n    }\n    power = multiplyByNumber(fromBase, power, toBase);\n  }\n\n  var out = '';\n  for (var i = outArray.length - 1; i >= 0; i--) {\n    out += outArray[i].toString(toBase);\n  }\n  return out;\n}\n\nfunction decToHex(decStr) {\n  var hex = convertBase(decStr, 10, 16);\n  return hex ? '0x' + hex : null;\n}\n\nfunction hexToDec(hexStr) {\n  if (hexStr.substring(0, 2) === '0x') hexStr = hexStr.substring(2);\n  hexStr = hexStr.toLowerCase();\n  return convertBase(hexStr, 16, 10);\n}\n\nmodule.exports = {\n  hexToDec: hexToDec,\n  decToHex: decToHex\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Convenience class to use as a binary carrier.\n *\n * Any valid Object with a field named `buffer` may be used as a binary carrier;\n * this class is only one such type of object that can be used.\n */\nvar BinaryCarrier = /** @class */ (function () {\n    function BinaryCarrier(buffer) {\n        this.buffer = buffer;\n    }\n    return BinaryCarrier;\n}());\nexports.default = BinaryCarrier;\n//# sourceMappingURL=binary_carrier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The FORMAT_BINARY format represents SpanContexts in an opaque binary\n * carrier.\n *\n * Tracer.inject() will set the buffer field to an Array-like (Array,\n * ArrayBuffer, or TypedBuffer) object containing the injected binary data.\n * Any valid Object can be used as long as the buffer field of the object\n * can be set.\n *\n * Tracer.extract() will look for `carrier.buffer`, and that field is\n * expected to be an Array-like object (Array, ArrayBuffer, or\n * TypedBuffer).\n */\nexports.FORMAT_BINARY = 'binary';\n/**\n * The FORMAT_TEXT_MAP format represents SpanContexts using a\n * string->string map (backed by a Javascript Object) as a carrier.\n *\n * NOTE: Unlike FORMAT_HTTP_HEADERS, FORMAT_TEXT_MAP places no restrictions\n * on the characters used in either the keys or the values of the map\n * entries.\n *\n * The FORMAT_TEXT_MAP carrier map may contain unrelated data (e.g.,\n * arbitrary gRPC metadata); as such, the Tracer implementation should use\n * a prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_TEXT_MAP = 'text_map';\n/**\n * The FORMAT_HTTP_HEADERS format represents SpanContexts using a\n * character-restricted string->string map (backed by a Javascript Object)\n * as a carrier.\n *\n * Keys and values in the FORMAT_HTTP_HEADERS carrier must be suitable for\n * use as HTTP headers (without modification or further escaping). That is,\n * the keys have a greatly restricted character set, casing for the keys\n * may not be preserved by various intermediaries, and the values should be\n * URL-escaped.\n *\n * The FORMAT_HTTP_HEADERS carrier map may contain unrelated data (e.g.,\n * arbitrary HTTP headers); as such, the Tracer implementation should use a\n * prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_HTTP_HEADERS = 'http_headers';\n/**\n * A Span may be the \"child of\" a parent Span. In a “child of” reference,\n * the parent Span depends on the child Span in some capacity.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_CHILD_OF = 'child_of';\n/**\n * Some parent Spans do not depend in any way on the result of their child\n * Spans. In these cases, we say merely that the child Span “follows from”\n * the parent Span in a causal sense.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_FOLLOWS_FROM = 'follows_from';\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** SPAN_KIND hints at relationship between spans, e.g. client/server */\nexports.SPAN_KIND = 'span.kind';\n/** Marks a span representing the client-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_CLIENT = 'client';\n/** Marks a span representing the server-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_SERVER = 'server';\n/** Marks a span representing the producing-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_PRODUCER = 'producer';\n/** Marks a span representing the consuming-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_CONSUMER = 'consumer';\n/**\n * ERROR (boolean) true if and only if the application considers the operation\n * represented by the Span to have failed\n */\nexports.ERROR = 'error';\n/**\n * COMPONENT (string) ia s low-cardinality identifier of the module, library,\n * or package that is generating a span.\n */\nexports.COMPONENT = 'component';\n/**\n * SAMPLING_PRIORITY (number) determines the priority of sampling this Span.\n * If greater than 0, a hint to the Tracer to do its best to capture the trace.\n * If 0, a hint to the trace to not-capture the trace. If absent, the Tracer\n * should use its default sampling mechanism.\n */\nexports.SAMPLING_PRIORITY = 'sampling.priority';\n// ---------------------------------------------------------------------------\n// PEER_* tags can be emitted by either client-side of server-side to describe\n// the other side/service in a peer-to-peer communications, like an RPC call.\n// ---------------------------------------------------------------------------\n/**\n * PEER_SERVICE (string) Remote service name (for some unspecified\n * definition of \"service\"). E.g., \"elasticsearch\", \"a_custom_microservice\", \"memcache\"\n */\nexports.PEER_SERVICE = 'peer.service';\n/** PEER_HOSTNAME (string) Remote hostname. E.g., \"opentracing.io\", \"internal.dns.name\" */\nexports.PEER_HOSTNAME = 'peer.hostname';\n/**\n * PEER_ADDRESS (string) Remote \"address\", suitable for use in a\n * networking client library. This may be a \"ip:port\", a bare\n * \"hostname\", a FQDN, or even a JDBC substring like \"mysql://prod-db:3306\"\n */\nexports.PEER_ADDRESS = 'peer.address';\n/**\n * PEER_HOST_IPV4 (number) Remote IPv4 address as a .-separated tuple.\n * E.g., \"127.0.0.1\"\n */\nexports.PEER_HOST_IPV4 = 'peer.ipv4';\n// PEER_HOST_IPV6 (string) Remote IPv6 address as a string of\n// colon-separated 4-char hex tuples. E.g., \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"\nexports.PEER_HOST_IPV6 = 'peer.ipv6';\n// PEER_PORT (number) Remote port. E.g., 80\nexports.PEER_PORT = 'peer.port';\n// ---------------------------------------------------------------------------\n// HTTP tags\n// ---------------------------------------------------------------------------\n/**\n * HTTP_URL (string) URL of the request being handled in this segment of the\n * trace, in standard URI format. E.g., \"https://domain.net/path/to?resource=here\"\n */\nexports.HTTP_URL = 'http.url';\n/**\n * HTTP_METHOD (string) HTTP method of the request for the associated Span. E.g.,\n * \"GET\", \"POST\"\n */\nexports.HTTP_METHOD = 'http.method';\n/**\n * HTTP_STATUS_CODE (number) HTTP response status code for the associated Span.\n * E.g., 200, 503, 404\n */\nexports.HTTP_STATUS_CODE = 'http.status_code';\n// -------------------------------------------------------------------------\n// Messaging tags\n// -------------------------------------------------------------------------\n/**\n * MESSAGE_BUS_DESTINATION (string) An address at which messages can be exchanged.\n * E.g. A Kafka record has an associated \"topic name\" that can be extracted\n * by the instrumented producer or consumer and stored using this tag.\n */\nexports.MESSAGE_BUS_DESTINATION = 'message_bus.destination';\n// --------------------------------------------------------------------------\n// Database tags\n// --------------------------------------------------------------------------\n/**\n * DB_INSTANCE (string) Database instance name. E.g., In java, if the\n * jdbc.url=\"jdbc:mysql://127.0.0.1:3306/customers\", the instance name is \"customers\".\n */\nexports.DB_INSTANCE = 'db.instance';\n/**\n * DB_STATEMENT (string) A database statement for the given database type.\n * E.g., for db.type=\"SQL\", \"SELECT * FROM wuser_table\";\n * for db.type=\"redis\", \"SET mykey 'WuValue'\".\n */\nexports.DB_STATEMENT = 'db.statement';\n/**\n * DB_TYPE (string) Database type. For any SQL database, \"sql\". For others,\n * the lower-case database category, e.g. \"cassandra\", \"hbase\", or \"redis\".\n */\nexports.DB_TYPE = 'db.type';\n/**\n * DB_USER (string) Username for accessing database. E.g., \"readonly_user\"\n * or \"reporting_user\"\n */\nexports.DB_USER = 'db.user';\n//# sourceMappingURL=tags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants = require(\"./constants\");\nvar reference_1 = require(\"./reference\");\nvar span_1 = require(\"./span\");\n/**\n * Return a new REFERENCE_CHILD_OF reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_CHILD_OF reference pointing to `spanContext`\n */\nfunction childOf(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_CHILD_OF, spanContext);\n}\nexports.childOf = childOf;\n/**\n * Return a new REFERENCE_FOLLOWS_FROM reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_FOLLOWS_FROM reference pointing to `spanContext`\n */\nfunction followsFrom(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_FOLLOWS_FROM, spanContext);\n}\nexports.followsFrom = followsFrom;\n//# sourceMappingURL=functions.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tracer_1 = require(\"./tracer\");\nvar noopTracer = new tracer_1.default();\nvar _globalTracer = null;\n// Allows direct importing/requiring of the global tracer:\n//\n// let globalTracer = require('opentracing/global');\n//      OR\n// import globalTracer from 'opentracing/global';\n//\n// Acts a bridge to the global tracer that can be safely called before the\n// global tracer is initialized. The purpose of the delegation is to avoid the\n// sometimes nearly intractible initialization order problems that can arise in\n// applications with a complex set of dependencies, while also avoiding the\n// case where\nvar GlobalTracerDelegate = /** @class */ (function (_super) {\n    __extends(GlobalTracerDelegate, _super);\n    function GlobalTracerDelegate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalTracerDelegate.prototype.startSpan = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.startSpan.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.inject = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.inject.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.extract = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.extract.apply(tracer, arguments);\n    };\n    return GlobalTracerDelegate;\n}(tracer_1.default));\nvar globalTracerDelegate = new GlobalTracerDelegate();\n/**\n * Set the global Tracer.\n *\n * The behavior is undefined if this function is called more than once.\n *\n * @param {Tracer} tracer - the Tracer implementation\n */\nfunction initGlobalTracer(tracer) {\n    _globalTracer = tracer;\n}\nexports.initGlobalTracer = initGlobalTracer;\n/**\n * Returns the global tracer.\n */\nfunction globalTracer() {\n    // Return the delegate.  Since the global tracer is largely a convenience\n    // (the user can always create their own tracers), the delegate is used to\n    // give the added convenience of not needing to worry about initialization\n    // order.\n    return globalTracerDelegate;\n}\nexports.globalTracer = globalTracer;\n//# sourceMappingURL=global_tracer.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_carrier_1 = require(\"./binary_carrier\");\nexports.BinaryCarrier = binary_carrier_1.default;\nvar Tags = require(\"./ext/tags\");\nexports.Tags = Tags;\nvar Noop = require(\"./noop\");\nvar reference_1 = require(\"./reference\");\nexports.Reference = reference_1.default;\nvar span_1 = require(\"./span\");\nexports.Span = span_1.default;\nvar span_context_1 = require(\"./span_context\");\nexports.SpanContext = span_context_1.default;\nvar tracer_1 = require(\"./tracer\");\nexports.Tracer = tracer_1.Tracer;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.MockTracer;\n__export(require(\"./global_tracer\"));\n__export(require(\"./constants\"));\n__export(require(\"./functions\"));\n// Initialize the noops last to avoid a dependecy cycle between the classes.\nNoop.initialize();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mock_context_1 = require(\"./mock_context\");\nexports.MockContext = mock_context_1.default;\nvar mock_span_1 = require(\"./mock_span\");\nexports.MockSpan = mock_span_1.default;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\n/**\n * OpenTracing Context implementation designed for use in\n * unit tests.\n */\nvar MockContext = /** @class */ (function (_super) {\n    __extends(MockContext, _super);\n    function MockContext(span) {\n        var _this = _super.call(this) || this;\n        // Store a reference to the span itself since this is a mock tracer\n        // intended to make debugging and unit testing easier.\n        _this._span = span;\n        return _this;\n    }\n    MockContext.prototype.span = function () {\n        return this._span;\n    };\n    return MockContext;\n}(opentracing.SpanContext));\nexports.MockContext = MockContext;\nexports.default = MockContext;\n//# sourceMappingURL=mock_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Index a collection of reported MockSpans in a way that's easy to run unit\n * test assertions against.\n */\nvar MockReport = /** @class */ (function () {\n    function MockReport(spans) {\n        var _this = this;\n        this.spans = spans;\n        this.spansByUUID = {};\n        this.spansByTag = {};\n        this.debugSpans = [];\n        this.unfinishedSpans = [];\n        spans.forEach(function (span) {\n            if (span._finishMs === 0) {\n                _this.unfinishedSpans.push(span);\n            }\n            _this.spansByUUID[span.uuid()] = span;\n            _this.debugSpans.push(span.debug());\n            var tags = span.tags();\n            Object.keys(tags).forEach(function (key) {\n                var val = tags[key];\n                _this.spansByTag[key] = _this.spansByTag[key] || {};\n                _this.spansByTag[key][val] = _this.spansByTag[key][val] || [];\n                _this.spansByTag[key][val].push(span);\n            });\n        });\n    }\n    MockReport.prototype.firstSpanWithTagValue = function (key, val) {\n        var m = this.spansByTag[key];\n        if (!m) {\n            return null;\n        }\n        var n = m[val];\n        if (!n) {\n            return null;\n        }\n        return n[0];\n    };\n    return MockReport;\n}());\nexports.MockReport = MockReport;\nexports.default = MockReport;\n//# sourceMappingURL=mock_report.js.map","\"use strict\";\n/* eslint-disable import/no-extraneous-dependencies */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\nvar mock_context_1 = require(\"./mock_context\");\n/**\n * OpenTracing Span implementation designed for use in unit tests.\n */\nvar MockSpan = /** @class */ (function (_super) {\n    __extends(MockSpan, _super);\n    //------------------------------------------------------------------------//\n    // MockSpan-specific\n    //------------------------------------------------------------------------//\n    function MockSpan(tracer) {\n        var _this = _super.call(this) || this;\n        _this._mockTracer = tracer;\n        _this._uuid = _this._generateUUID();\n        _this._startMs = Date.now();\n        _this._finishMs = 0;\n        _this._operationName = '';\n        _this._tags = {};\n        _this._logs = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockSpan.prototype._context = function () {\n        return new mock_context_1.default(this);\n    };\n    MockSpan.prototype._setOperationName = function (name) {\n        this._operationName = name;\n    };\n    MockSpan.prototype._addTags = function (set) {\n        var keys = Object.keys(set);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this._tags[key] = set[key];\n        }\n    };\n    MockSpan.prototype._log = function (fields, timestamp) {\n        this._logs.push({\n            fields: fields,\n            timestamp: timestamp\n        });\n    };\n    MockSpan.prototype._finish = function (finishTime) {\n        this._finishMs = finishTime || Date.now();\n    };\n    MockSpan.prototype.uuid = function () {\n        return this._uuid;\n    };\n    MockSpan.prototype.operationName = function () {\n        return this._operationName;\n    };\n    MockSpan.prototype.durationMs = function () {\n        return this._finishMs - this._startMs;\n    };\n    MockSpan.prototype.tags = function () {\n        return this._tags;\n    };\n    MockSpan.prototype.tracer = function () {\n        return this._mockTracer;\n    };\n    MockSpan.prototype._generateUUID = function () {\n        var p0 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        var p1 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        return \"\" + p0 + p1;\n    };\n    MockSpan.prototype.addReference = function (ref) {\n    };\n    /**\n     * Returns a simplified object better for console.log()'ing.\n     */\n    MockSpan.prototype.debug = function () {\n        var obj = {\n            uuid: this._uuid,\n            operation: this._operationName,\n            millis: [this._finishMs - this._startMs, this._startMs, this._finishMs]\n        };\n        if (Object.keys(this._tags).length) {\n            obj.tags = this._tags;\n        }\n        return obj;\n    };\n    return MockSpan;\n}(opentracing.Span));\nexports.MockSpan = MockSpan;\nexports.default = MockSpan;\n//# sourceMappingURL=mock_span.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: Move mock-tracer to its own NPM package once it is complete and tested.\nvar opentracing = require(\"../index\");\nvar mock_report_1 = require(\"./mock_report\");\nvar mock_span_1 = require(\"./mock_span\");\n/**\n * OpenTracing Tracer implementation designed for use in unit tests.\n */\nvar MockTracer = /** @class */ (function (_super) {\n    __extends(MockTracer, _super);\n    //------------------------------------------------------------------------//\n    // MockTracer-specific\n    //------------------------------------------------------------------------//\n    function MockTracer() {\n        var _this = _super.call(this) || this;\n        _this._spans = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockTracer.prototype._startSpan = function (name, fields) {\n        // _allocSpan is given it's own method so that derived classes can\n        // allocate any type of object they want, but not have to duplicate\n        // the other common logic in startSpan().\n        var span = this._allocSpan();\n        span.setOperationName(name);\n        this._spans.push(span);\n        if (fields.references) {\n            for (var _i = 0, _a = fields.references; _i < _a.length; _i++) {\n                var ref = _a[_i];\n                span.addReference(ref);\n            }\n        }\n        // Capture the stack at the time the span started\n        span._startStack = new Error().stack;\n        return span;\n    };\n    MockTracer.prototype._inject = function (span, format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._extract = function (format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._allocSpan = function () {\n        return new mock_span_1.default(this);\n    };\n    /**\n     * Discard any buffered data.\n     */\n    MockTracer.prototype.clear = function () {\n        this._spans = [];\n    };\n    /**\n     * Return the buffered data in a format convenient for making unit test\n     * assertions.\n     */\n    MockTracer.prototype.report = function () {\n        return new mock_report_1.default(this._spans);\n    };\n    return MockTracer;\n}(opentracing.Tracer));\nexports.MockTracer = MockTracer;\nexports.default = MockTracer;\n//# sourceMappingURL=mock_tracer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\nvar span_context_1 = require(\"./span_context\");\nvar tracer_1 = require(\"./tracer\");\nexports.tracer = null;\nexports.spanContext = null;\nexports.span = null;\n// Deferred initialization to avoid a dependency cycle where Tracer depends on\n// Span which depends on the noop tracer.\nfunction initialize() {\n    exports.tracer = new tracer_1.default();\n    exports.span = new span_1.default();\n    exports.spanContext = new span_context_1.default();\n}\nexports.initialize = initialize;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\n/**\n * Reference pairs a reference type constant (e.g., REFERENCE_CHILD_OF or\n * REFERENCE_FOLLOWS_FROM) with the SpanContext it points to.\n *\n * See the exported childOf() and followsFrom() functions at the package level.\n */\nvar Reference = /** @class */ (function () {\n    /**\n     * Initialize a new Reference instance.\n     *\n     * @param {string} type - the Reference type constant (e.g.,\n     *        REFERENCE_CHILD_OF or REFERENCE_FOLLOWS_FROM).\n     * @param {SpanContext} referencedContext - the SpanContext being referred\n     *        to. As a convenience, a Span instance may be passed in instead\n     *        (in which case its .context() is used here).\n     */\n    function Reference(type, referencedContext) {\n        this._type = type;\n        this._referencedContext = (referencedContext instanceof span_1.default ?\n            referencedContext.context() :\n            referencedContext);\n    }\n    /**\n     * @return {string} The Reference type (e.g., REFERENCE_CHILD_OF or\n     *         REFERENCE_FOLLOWS_FROM).\n     */\n    Reference.prototype.type = function () {\n        return this._type;\n    };\n    /**\n     * @return {SpanContext} The SpanContext being referred to (e.g., the\n     *         parent in a REFERENCE_CHILD_OF Reference).\n     */\n    Reference.prototype.referencedContext = function () {\n        return this._referencedContext;\n    };\n    return Reference;\n}());\nexports.default = Reference;\n//# sourceMappingURL=reference.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar noop = require(\"./noop\");\n/**\n * Span represents a logical unit of work as part of a broader Trace. Examples\n * of span might include remote procedure calls or a in-process function calls\n * to sub-components. A Trace has a single, top-level \"root\" Span that in turn\n * may have zero or more child Spans, which in turn may have children.\n */\nvar Span = /** @class */ (function () {\n    function Span() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Returns the SpanContext object associated with this Span.\n     *\n     * @return {SpanContext}\n     */\n    Span.prototype.context = function () {\n        return this._context();\n    };\n    /**\n     * Returns the Tracer object used to create this Span.\n     *\n     * @return {Tracer}\n     */\n    Span.prototype.tracer = function () {\n        return this._tracer();\n    };\n    /**\n     * Sets the string name for the logical operation this span represents.\n     *\n     * @param {string} name\n     */\n    Span.prototype.setOperationName = function (name) {\n        this._setOperationName(name);\n        return this;\n    };\n    /**\n     * Sets a key:value pair on this Span that also propagates to future\n     * children of the associated Span.\n     *\n     * setBaggageItem() enables powerful functionality given a full-stack\n     * opentracing integration (e.g., arbitrary application data from a web\n     * client can make it, transparently, all the way into the depths of a\n     * storage system), and with it some powerful costs: use this feature with\n     * care.\n     *\n     * IMPORTANT NOTE #1: setBaggageItem() will only propagate baggage items to\n     * *future* causal descendants of the associated Span.\n     *\n     * IMPORTANT NOTE #2: Use this thoughtfully and with care. Every key and\n     * value is copied into every local *and remote* child of the associated\n     * Span, and that can add up to a lot of network and cpu overhead.\n     *\n     * @param {string} key\n     * @param {string} value\n     */\n    Span.prototype.setBaggageItem = function (key, value) {\n        this._setBaggageItem(key, value);\n        return this;\n    };\n    /**\n     * Returns the value for a baggage item given its key.\n     *\n     * @param  {string} key\n     *         The key for the given trace attribute.\n     * @return {string}\n     *         String value for the given key, or undefined if the key does not\n     *         correspond to a set trace attribute.\n     */\n    Span.prototype.getBaggageItem = function (key) {\n        return this._getBaggageItem(key);\n    };\n    /**\n     * Adds a single tag to the span.  See `addTags()` for details.\n     *\n     * @param {string} key\n     * @param {any} value\n     */\n    Span.prototype.setTag = function (key, value) {\n        // NOTE: the call is normalized to a call to _addTags()\n        this._addTags((_a = {}, _a[key] = value, _a));\n        return this;\n        var _a;\n    };\n    /**\n     * Adds the given key value pairs to the set of span tags.\n     *\n     * Multiple calls to addTags() results in the tags being the superset of\n     * all calls.\n     *\n     * The behavior of setting the same key multiple times on the same span\n     * is undefined.\n     *\n     * The supported type of the values is implementation-dependent.\n     * Implementations are expected to safely handle all types of values but\n     * may choose to ignore unrecognized / unhandle-able values (e.g. objects\n     * with cyclic references, function objects).\n     *\n     * @return {[type]} [description]\n     */\n    Span.prototype.addTags = function (keyValueMap) {\n        this._addTags(keyValueMap);\n        return this;\n    };\n    /**\n     * Add a log record to this Span, optionally at a user-provided timestamp.\n     *\n     * For example:\n     *\n     *     span.log({\n     *         size: rpc.size(),  // numeric value\n     *         URI: rpc.URI(),  // string value\n     *         payload: rpc.payload(),  // Object value\n     *         \"keys can be arbitrary strings\": rpc.foo(),\n     *     });\n     *\n     *     span.log({\n     *         \"error.description\": someError.description(),\n     *     }, someError.timestampMillis());\n     *\n     * @param {object} keyValuePairs\n     *        An object mapping string keys to arbitrary value types. All\n     *        Tracer implementations should support bool, string, and numeric\n     *        value types, and some may also support Object values.\n     * @param {number} timestamp\n     *        An optional parameter specifying the timestamp in milliseconds\n     *        since the Unix epoch. Fractional values are allowed so that\n     *        timestamps with sub-millisecond accuracy can be represented. If\n     *        not specified, the implementation is expected to use its notion\n     *        of the current time of the call.\n     */\n    Span.prototype.log = function (keyValuePairs, timestamp) {\n        this._log(keyValuePairs, timestamp);\n        return this;\n    };\n    /**\n     * DEPRECATED\n     */\n    Span.prototype.logEvent = function (eventName, payload) {\n        return this._log({ event: eventName, payload: payload });\n    };\n    /**\n     * Sets the end timestamp and finalizes Span state.\n     *\n     * With the exception of calls to Span.context() (which are always allowed),\n     * finish() must be the last call made to any span instance, and to do\n     * otherwise leads to undefined behavior.\n     *\n     * @param  {number} finishTime\n     *         Optional finish time in milliseconds as a Unix timestamp. Decimal\n     *         values are supported for timestamps with sub-millisecond accuracy.\n     *         If not specified, the current time (as defined by the\n     *         implementation) will be used.\n     */\n    Span.prototype.finish = function (finishTime) {\n        this._finish(finishTime);\n        // Do not return `this`. The Span generally should not be used after it\n        // is finished so chaining is not desired in this context.\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // By default returns a no-op SpanContext.\n    Span.prototype._context = function () {\n        return noop.spanContext;\n    };\n    // By default returns a no-op tracer.\n    //\n    // The base class could store the tracer that created it, but it does not\n    // in order to ensure the no-op span implementation has zero members,\n    // which allows V8 to aggressively optimize calls to such objects.\n    Span.prototype._tracer = function () {\n        return noop.tracer;\n    };\n    // By default does nothing\n    Span.prototype._setOperationName = function (name) {\n    };\n    // By default does nothing\n    Span.prototype._setBaggageItem = function (key, value) {\n    };\n    // By default does nothing\n    Span.prototype._getBaggageItem = function (key) {\n        return undefined;\n    };\n    // By default does nothing\n    //\n    // NOTE: both setTag() and addTags() map to this function. keyValuePairs\n    // will always be an associative array.\n    Span.prototype._addTags = function (keyValuePairs) {\n    };\n    // By default does nothing\n    Span.prototype._log = function (keyValuePairs, timestamp) {\n    };\n    // By default does nothing\n    //\n    // finishTime is expected to be either a number or undefined.\n    Span.prototype._finish = function (finishTime) {\n    };\n    return Span;\n}());\nexports.Span = Span;\nexports.default = Span;\n//# sourceMappingURL=span.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * SpanContext represents Span state that must propagate to descendant Spans\n * and across process boundaries.\n *\n * SpanContext is logically divided into two pieces: the user-level \"Baggage\"\n * (see setBaggageItem and getBaggageItem) that propagates across Span\n * boundaries and any Tracer-implementation-specific fields that are needed to\n * identify or otherwise contextualize the associated Span instance (e.g., a\n * <trace_id, span_id, sampled> tuple).\n */\nvar SpanContext = /** @class */ (function () {\n    function SpanContext() {\n    }\n    return SpanContext;\n}());\nexports.SpanContext = SpanContext;\nexports.default = SpanContext;\n//# sourceMappingURL=span_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Functions = require(\"./functions\");\nvar Noop = require(\"./noop\");\nvar span_1 = require(\"./span\");\n/**\n * Tracer is the entry-point between the instrumentation API and the tracing\n * implementation.\n *\n * The default object acts as a no-op implementation.\n *\n * Note to implementators: derived classes can choose to directly implement the\n * methods in the \"OpenTracing API methods\" section, or optionally the subset of\n * underscore-prefixed methods to pick up the argument checking and handling\n * automatically from the base class.\n */\nvar Tracer = /** @class */ (function () {\n    function Tracer() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Starts and returns a new Span representing a logical unit of work.\n     *\n     * For example:\n     *\n     *     // Start a new (parentless) root Span:\n     *     var parent = Tracer.startSpan('DoWork');\n     *\n     *     // Start a new (child) Span:\n     *     var child = Tracer.startSpan('load-from-db', {\n     *         childOf: parent.context(),\n     *     });\n     *\n     *     // Start a new async (FollowsFrom) Span:\n     *     var child = Tracer.startSpan('async-cache-write', {\n     *         references: [\n     *             opentracing.followsFrom(parent.context())\n     *         ],\n     *     });\n     *\n     * @param {string} name - the name of the operation (REQUIRED).\n     * @param {SpanOptions} [options] - options for the newly created span.\n     * @return {Span} - a new Span object.\n     */\n    Tracer.prototype.startSpan = function (name, options) {\n        if (options === void 0) { options = {}; }\n        // Convert options.childOf to fields.references as needed.\n        if (options.childOf) {\n            // Convert from a Span or a SpanContext into a Reference.\n            var childOf = Functions.childOf(options.childOf);\n            if (options.references) {\n                options.references.push(childOf);\n            }\n            else {\n                options.references = [childOf];\n            }\n            delete (options.childOf);\n        }\n        return this._startSpan(name, options);\n    };\n    /**\n     * Injects the given SpanContext instance for cross-process propagation\n     * within `carrier`. The expected type of `carrier` depends on the value of\n     * `format.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     var clientSpan = ...;\n     *     ...\n     *     // Inject clientSpan into a text carrier.\n     *     var headersCarrier = {};\n     *     Tracer.inject(clientSpan.context(), Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     // Incorporate the textCarrier into the outbound HTTP request header\n     *     // map.\n     *     Object.assign(outboundHTTPReq.headers, headersCarrier);\n     *     // ... send the httpReq\n     *\n     * @param  {SpanContext} spanContext - the SpanContext to inject into the\n     *         carrier object. As a convenience, a Span instance may be passed\n     *         in instead (in which case its .context() is used for the\n     *         inject()).\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - see the documentation for the chosen `format`\n     *         for a description of the carrier object.\n     */\n    Tracer.prototype.inject = function (spanContext, format, carrier) {\n        // Allow the user to pass a Span instead of a SpanContext\n        if (spanContext instanceof span_1.default) {\n            spanContext = spanContext.context();\n        }\n        return this._inject(spanContext, format, carrier);\n    };\n    /**\n     * Returns a SpanContext instance extracted from `carrier` in the given\n     * `format`.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     // Use the inbound HTTP request's headers as a text map carrier.\n     *     var headersCarrier = inboundHTTPReq.headers;\n     *     var wireCtx = Tracer.extract(Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     var serverSpan = Tracer.startSpan('...', { childOf : wireCtx });\n     *\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - the type of the carrier object is determined by\n     *         the format.\n     * @return {SpanContext}\n     *         The extracted SpanContext, or null if no such SpanContext could\n     *         be found in `carrier`\n     */\n    Tracer.prototype.extract = function (format, carrier) {\n        return this._extract(format, carrier);\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // NOTE: the input to this method is *always* an associative array. The\n    // public-facing startSpan() method normalizes the arguments so that\n    // all N implementations do not need to worry about variations in the call\n    // signature.\n    //\n    // The default behavior returns a no-op span.\n    Tracer.prototype._startSpan = function (name, fields) {\n        return Noop.span;\n    };\n    // The default behavior is a no-op.\n    Tracer.prototype._inject = function (spanContext, format, carrier) {\n    };\n    // The default behavior is to return a no-op SpanContext.\n    Tracer.prototype._extract = function (format, carrier) {\n        return Noop.spanContext;\n    };\n    return Tracer;\n}());\nexports.Tracer = Tracer;\nexports.default = Tracer;\n//# sourceMappingURL=tracer.js.map","// minimal library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index-minimal\");\r\n","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Set up buffer utility according to the environment\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n","\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n// global object reference\r\nutil.global = typeof window !== \"undefined\" && window\r\n           || typeof global !== \"undefined\" && global\r\n           || typeof self   !== \"undefined\" && self\r\n           || this; // eslint-disable-line no-invalid-this\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\r\n         || /* istanbul ignore next */ util.global.Long\r\n         || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\n// Sets up buffer utility according to the environment (called in index-minimal)\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Underscore.js-like wrapper to iterate object key-values. Note that even for completely\n// internal objects, packages may modify default Object prototypes and properties\n// (e.g. Ember.js) so it's almost never safe to assume a particular object can\n// iterated with for-in.\nexport default function _each(obj, cb) {\n    if (!obj) {\n        return;\n    }\n    for (let key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            cb(obj[key], key);\n        }\n    }\n}\n","\nexport const LOG_INFO = 0;\nexport const LOG_WARN = 1;\nexport const LOG_ERROR = 2;\nexport const LOG_FATAL = 3;\n\nexport const LOG_LEVEL_TO_STRING = {\n    LOG_INFO  : 'I',\n    LOG_WARN  : 'W',\n    LOG_ERROR : 'E',\n    LOG_FATAL : 'F',\n};\nexport const LOG_STRING_TO_LEVEL = {\n    I : LOG_INFO,\n    W : LOG_WARN,\n    E : LOG_ERROR,\n    F : LOG_FATAL,\n};\n\n// The report interval for empty reports used to sample the clock skew\nexport const CLOCK_STATE_REFRESH_INTERVAL_MS = 350;\n\nexport const LIGHTSTEP_APP_URL_PREFIX = 'https://app.lightstep.com';\n\nexport const JOIN_ID_PREFIX = 'join:';\n","import { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport { lightstep } from './generated_proto';\nlet proto = lightstep.collector;\n\nexport default class AuthImp {\n    constructor(accessToken) {\n        this._accessToken = accessToken;\n    }\n\n    getAccessToken() {\n        return this._accessToken;\n    }\n\n    toThrift() {\n        return new crouton_thrift.Auth({\n            access_token : this._accessToken,\n        });\n    }\n\n    toProto() {\n        let authProto = new proto.Auth();\n        authProto.accessToken = this._accessToken;\n        return authProto;\n    }\n}\n","\nexport function toString(value) {\n    return '' + value;  // eslint-disable-line prefer-template\n}\n\nexport function toNumber(value) {\n    return Number(value);\n}\n\nexport function toBoolean(value) {\n    return !!value;\n}\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\nimport * as $protobuf from 'protobufjs/minimal';\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots['default'] || ($protobuf.roots['default'] = {});\n\nexport const lightstep = $root.lightstep = (() => {\n\n    /**\n     * Namespace lightstep.\n     * @exports lightstep\n     * @namespace\n     */\n    const lightstep = {};\n\n    lightstep.collector = (function () {\n\n        /**\n         * Namespace collector.\n         * @memberof lightstep\n         * @namespace\n         */\n        const collector = {};\n\n        collector.SpanContext = (function () {\n\n            /**\n             * Properties of a SpanContext.\n             * @memberof lightstep.collector\n             * @interface ISpanContext\n             * @property {number|Long|null} [traceId] SpanContext traceId\n             * @property {number|Long|null} [spanId] SpanContext spanId\n             * @property {Object.<string,string>|null} [baggage] SpanContext baggage\n             */\n\n            /**\n             * Constructs a new SpanContext.\n             * @memberof lightstep.collector\n             * @classdesc Represents a SpanContext.\n             * @implements ISpanContext\n             * @constructor\n             * @param {lightstep.collector.ISpanContext=} [properties] Properties to set\n             */\n            function SpanContext(properties) {\n                this.baggage = {};\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SpanContext traceId.\n             * @member {number|Long} traceId\n             * @memberof lightstep.collector.SpanContext\n             * @instance\n             */\n            SpanContext.prototype.traceId = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n\n            /**\n             * SpanContext spanId.\n             * @member {number|Long} spanId\n             * @memberof lightstep.collector.SpanContext\n             * @instance\n             */\n            SpanContext.prototype.spanId = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n\n            /**\n             * SpanContext baggage.\n             * @member {Object.<string,string>} baggage\n             * @memberof lightstep.collector.SpanContext\n             * @instance\n             */\n            SpanContext.prototype.baggage = $util.emptyObject;\n\n            /**\n             * Creates a new SpanContext instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.SpanContext\n             * @static\n             * @param {lightstep.collector.ISpanContext=} [properties] Properties to set\n             * @returns {lightstep.collector.SpanContext} SpanContext instance\n             */\n            SpanContext.create = function create(properties) {\n                return new SpanContext(properties);\n            };\n\n            /**\n             * Encodes the specified SpanContext message. Does not implicitly {@link lightstep.collector.SpanContext.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.SpanContext\n             * @static\n             * @param {lightstep.collector.ISpanContext} message SpanContext message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SpanContext.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.traceId != null && message.hasOwnProperty('traceId'))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.traceId);\n                if (message.spanId != null && message.hasOwnProperty('spanId'))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.spanId);\n                if (message.baggage != null && message.hasOwnProperty('baggage'))\n                    for (let keys = Object.keys(message.baggage), i = 0; i < keys.length; ++i)\n                        writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.baggage[keys[i]]).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SpanContext message, length delimited. Does not implicitly {@link lightstep.collector.SpanContext.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.SpanContext\n             * @static\n             * @param {lightstep.collector.ISpanContext} message SpanContext message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SpanContext.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SpanContext message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.SpanContext\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.SpanContext} SpanContext\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SpanContext.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.SpanContext(), key;\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.traceId = reader.uint64();\n                        break;\n                    case 2:\n                        message.spanId = reader.uint64();\n                        break;\n                    case 3:\n                        reader.skip().pos++;\n                        if (message.baggage === $util.emptyObject)\n                            message.baggage = {};\n                        key = reader.string();\n                        reader.pos++;\n                        message.baggage[key] = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SpanContext message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.SpanContext\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.SpanContext} SpanContext\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SpanContext.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SpanContext message.\n             * @function verify\n             * @memberof lightstep.collector.SpanContext\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SpanContext.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.traceId != null && message.hasOwnProperty('traceId'))\n                    if (!$util.isInteger(message.traceId) && !(message.traceId && $util.isInteger(message.traceId.low) && $util.isInteger(message.traceId.high)))\n                        return 'traceId: integer|Long expected';\n                if (message.spanId != null && message.hasOwnProperty('spanId'))\n                    if (!$util.isInteger(message.spanId) && !(message.spanId && $util.isInteger(message.spanId.low) && $util.isInteger(message.spanId.high)))\n                        return 'spanId: integer|Long expected';\n                if (message.baggage != null && message.hasOwnProperty('baggage')) {\n                    if (!$util.isObject(message.baggage))\n                        return 'baggage: object expected';\n                    let key = Object.keys(message.baggage);\n                    for (let i = 0; i < key.length; ++i)\n                        if (!$util.isString(message.baggage[key[i]]))\n                            return 'baggage: string{k:string} expected';\n                }\n                return null;\n            };\n\n            /**\n             * Creates a SpanContext message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.SpanContext\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.SpanContext} SpanContext\n             */\n            SpanContext.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.SpanContext)\n                    return object;\n                let message = new $root.lightstep.collector.SpanContext();\n                if (object.traceId != null)\n                    if ($util.Long)\n                        (message.traceId = $util.Long.fromValue(object.traceId)).unsigned = true;\n                    else if (typeof object.traceId === 'string')\n                        message.traceId = parseInt(object.traceId, 10);\n                    else if (typeof object.traceId === 'number')\n                        message.traceId = object.traceId;\n                    else if (typeof object.traceId === 'object')\n                        message.traceId = new $util.LongBits(object.traceId.low >>> 0, object.traceId.high >>> 0).toNumber(true);\n                if (object.spanId != null)\n                    if ($util.Long)\n                        (message.spanId = $util.Long.fromValue(object.spanId)).unsigned = true;\n                    else if (typeof object.spanId === 'string')\n                        message.spanId = parseInt(object.spanId, 10);\n                    else if (typeof object.spanId === 'number')\n                        message.spanId = object.spanId;\n                    else if (typeof object.spanId === 'object')\n                        message.spanId = new $util.LongBits(object.spanId.low >>> 0, object.spanId.high >>> 0).toNumber(true);\n                if (object.baggage) {\n                    if (typeof object.baggage !== 'object')\n                        throw TypeError('.lightstep.collector.SpanContext.baggage: object expected');\n                    message.baggage = {};\n                    for (let keys = Object.keys(object.baggage), i = 0; i < keys.length; ++i)\n                        message.baggage[keys[i]] = String(object.baggage[keys[i]]);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a SpanContext message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.SpanContext\n             * @static\n             * @param {lightstep.collector.SpanContext} message SpanContext\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SpanContext.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.objects || options.defaults)\n                    object.baggage = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        let long = new $util.Long(0, 0, true);\n                        object.traceId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.traceId = options.longs === String ? '0' : 0;\n                    if ($util.Long) {\n                        let long = new $util.Long(0, 0, true);\n                        object.spanId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.spanId = options.longs === String ? '0' : 0;\n                }\n                if (message.traceId != null && message.hasOwnProperty('traceId'))\n                    if (typeof message.traceId === 'number')\n                        object.traceId = options.longs === String ? String(message.traceId) : message.traceId;\n                    else\n                        object.traceId = options.longs === String ? $util.Long.prototype.toString.call(message.traceId) : options.longs === Number ? new $util.LongBits(message.traceId.low >>> 0, message.traceId.high >>> 0).toNumber(true) : message.traceId;\n                if (message.spanId != null && message.hasOwnProperty('spanId'))\n                    if (typeof message.spanId === 'number')\n                        object.spanId = options.longs === String ? String(message.spanId) : message.spanId;\n                    else\n                        object.spanId = options.longs === String ? $util.Long.prototype.toString.call(message.spanId) : options.longs === Number ? new $util.LongBits(message.spanId.low >>> 0, message.spanId.high >>> 0).toNumber(true) : message.spanId;\n                let keys2;\n                if (message.baggage && (keys2 = Object.keys(message.baggage)).length) {\n                    object.baggage = {};\n                    for (let j = 0; j < keys2.length; ++j)\n                        object.baggage[keys2[j]] = message.baggage[keys2[j]];\n                }\n                return object;\n            };\n\n            /**\n             * Converts this SpanContext to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.SpanContext\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SpanContext.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return SpanContext;\n        })();\n\n        collector.KeyValue = (function () {\n\n            /**\n             * Properties of a KeyValue.\n             * @memberof lightstep.collector\n             * @interface IKeyValue\n             * @property {string|null} [key] KeyValue key\n             * @property {string|null} [stringValue] KeyValue stringValue\n             * @property {number|Long|null} [intValue] KeyValue intValue\n             * @property {number|null} [doubleValue] KeyValue doubleValue\n             * @property {boolean|null} [boolValue] KeyValue boolValue\n             * @property {string|null} [jsonValue] KeyValue jsonValue\n             */\n\n            /**\n             * Constructs a new KeyValue.\n             * @memberof lightstep.collector\n             * @classdesc Represents a KeyValue.\n             * @implements IKeyValue\n             * @constructor\n             * @param {lightstep.collector.IKeyValue=} [properties] Properties to set\n             */\n            function KeyValue(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * KeyValue key.\n             * @member {string} key\n             * @memberof lightstep.collector.KeyValue\n             * @instance\n             */\n            KeyValue.prototype.key = '';\n\n            /**\n             * KeyValue stringValue.\n             * @member {string} stringValue\n             * @memberof lightstep.collector.KeyValue\n             * @instance\n             */\n            KeyValue.prototype.stringValue = '';\n\n            /**\n             * KeyValue intValue.\n             * @member {number|Long} intValue\n             * @memberof lightstep.collector.KeyValue\n             * @instance\n             */\n            KeyValue.prototype.intValue = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n            /**\n             * KeyValue doubleValue.\n             * @member {number} doubleValue\n             * @memberof lightstep.collector.KeyValue\n             * @instance\n             */\n            KeyValue.prototype.doubleValue = 0;\n\n            /**\n             * KeyValue boolValue.\n             * @member {boolean} boolValue\n             * @memberof lightstep.collector.KeyValue\n             * @instance\n             */\n            KeyValue.prototype.boolValue = false;\n\n            /**\n             * KeyValue jsonValue.\n             * @member {string} jsonValue\n             * @memberof lightstep.collector.KeyValue\n             * @instance\n             */\n            KeyValue.prototype.jsonValue = '';\n\n            // OneOf field names bound to virtual getters and setters\n            let $oneOfFields;\n\n            /**\n             * KeyValue value.\n             * @member {\"stringValue\"|\"intValue\"|\"doubleValue\"|\"boolValue\"|\"jsonValue\"|undefined} value\n             * @memberof lightstep.collector.KeyValue\n             * @instance\n             */\n            Object.defineProperty(KeyValue.prototype, 'value', {\n                get: $util.oneOfGetter($oneOfFields = ['stringValue', 'intValue', 'doubleValue', 'boolValue', 'jsonValue']),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new KeyValue instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.KeyValue\n             * @static\n             * @param {lightstep.collector.IKeyValue=} [properties] Properties to set\n             * @returns {lightstep.collector.KeyValue} KeyValue instance\n             */\n            KeyValue.create = function create(properties) {\n                return new KeyValue(properties);\n            };\n\n            /**\n             * Encodes the specified KeyValue message. Does not implicitly {@link lightstep.collector.KeyValue.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.KeyValue\n             * @static\n             * @param {lightstep.collector.IKeyValue} message KeyValue message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            KeyValue.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.key != null && message.hasOwnProperty('key'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n                if (message.stringValue != null && message.hasOwnProperty('stringValue'))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.stringValue);\n                if (message.intValue != null && message.hasOwnProperty('intValue'))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.intValue);\n                if (message.doubleValue != null && message.hasOwnProperty('doubleValue'))\n                    writer.uint32(/* id 4, wireType 1 =*/33).double(message.doubleValue);\n                if (message.boolValue != null && message.hasOwnProperty('boolValue'))\n                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.boolValue);\n                if (message.jsonValue != null && message.hasOwnProperty('jsonValue'))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.jsonValue);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified KeyValue message, length delimited. Does not implicitly {@link lightstep.collector.KeyValue.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.KeyValue\n             * @static\n             * @param {lightstep.collector.IKeyValue} message KeyValue message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            KeyValue.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a KeyValue message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.KeyValue\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.KeyValue} KeyValue\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            KeyValue.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.KeyValue();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.key = reader.string();\n                        break;\n                    case 2:\n                        message.stringValue = reader.string();\n                        break;\n                    case 3:\n                        message.intValue = reader.int64();\n                        break;\n                    case 4:\n                        message.doubleValue = reader.double();\n                        break;\n                    case 5:\n                        message.boolValue = reader.bool();\n                        break;\n                    case 6:\n                        message.jsonValue = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a KeyValue message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.KeyValue\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.KeyValue} KeyValue\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            KeyValue.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a KeyValue message.\n             * @function verify\n             * @memberof lightstep.collector.KeyValue\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            KeyValue.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                let properties = {};\n                if (message.key != null && message.hasOwnProperty('key'))\n                    if (!$util.isString(message.key))\n                        return 'key: string expected';\n                if (message.stringValue != null && message.hasOwnProperty('stringValue')) {\n                    properties.value = 1;\n                    if (!$util.isString(message.stringValue))\n                        return 'stringValue: string expected';\n                }\n                if (message.intValue != null && message.hasOwnProperty('intValue')) {\n                    if (properties.value === 1)\n                        return 'value: multiple values';\n                    properties.value = 1;\n                    if (!$util.isInteger(message.intValue) && !(message.intValue && $util.isInteger(message.intValue.low) && $util.isInteger(message.intValue.high)))\n                        return 'intValue: integer|Long expected';\n                }\n                if (message.doubleValue != null && message.hasOwnProperty('doubleValue')) {\n                    if (properties.value === 1)\n                        return 'value: multiple values';\n                    properties.value = 1;\n                    if (typeof message.doubleValue !== 'number')\n                        return 'doubleValue: number expected';\n                }\n                if (message.boolValue != null && message.hasOwnProperty('boolValue')) {\n                    if (properties.value === 1)\n                        return 'value: multiple values';\n                    properties.value = 1;\n                    if (typeof message.boolValue !== 'boolean')\n                        return 'boolValue: boolean expected';\n                }\n                if (message.jsonValue != null && message.hasOwnProperty('jsonValue')) {\n                    if (properties.value === 1)\n                        return 'value: multiple values';\n                    properties.value = 1;\n                    if (!$util.isString(message.jsonValue))\n                        return 'jsonValue: string expected';\n                }\n                return null;\n            };\n\n            /**\n             * Creates a KeyValue message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.KeyValue\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.KeyValue} KeyValue\n             */\n            KeyValue.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.KeyValue)\n                    return object;\n                let message = new $root.lightstep.collector.KeyValue();\n                if (object.key != null)\n                    message.key = String(object.key);\n                if (object.stringValue != null)\n                    message.stringValue = String(object.stringValue);\n                if (object.intValue != null)\n                    if ($util.Long)\n                        (message.intValue = $util.Long.fromValue(object.intValue)).unsigned = false;\n                    else if (typeof object.intValue === 'string')\n                        message.intValue = parseInt(object.intValue, 10);\n                    else if (typeof object.intValue === 'number')\n                        message.intValue = object.intValue;\n                    else if (typeof object.intValue === 'object')\n                        message.intValue = new $util.LongBits(object.intValue.low >>> 0, object.intValue.high >>> 0).toNumber();\n                if (object.doubleValue != null)\n                    message.doubleValue = Number(object.doubleValue);\n                if (object.boolValue != null)\n                    message.boolValue = Boolean(object.boolValue);\n                if (object.jsonValue != null)\n                    message.jsonValue = String(object.jsonValue);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a KeyValue message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.KeyValue\n             * @static\n             * @param {lightstep.collector.KeyValue} message KeyValue\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            KeyValue.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults)\n                    object.key = '';\n                if (message.key != null && message.hasOwnProperty('key'))\n                    object.key = message.key;\n                if (message.stringValue != null && message.hasOwnProperty('stringValue')) {\n                    object.stringValue = message.stringValue;\n                    if (options.oneofs)\n                        object.value = 'stringValue';\n                }\n                if (message.intValue != null && message.hasOwnProperty('intValue')) {\n                    if (typeof message.intValue === 'number')\n                        object.intValue = options.longs === String ? String(message.intValue) : message.intValue;\n                    else\n                        object.intValue = options.longs === String ? $util.Long.prototype.toString.call(message.intValue) : options.longs === Number ? new $util.LongBits(message.intValue.low >>> 0, message.intValue.high >>> 0).toNumber() : message.intValue;\n                    if (options.oneofs)\n                        object.value = 'intValue';\n                }\n                if (message.doubleValue != null && message.hasOwnProperty('doubleValue')) {\n                    object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                    if (options.oneofs)\n                        object.value = 'doubleValue';\n                }\n                if (message.boolValue != null && message.hasOwnProperty('boolValue')) {\n                    object.boolValue = message.boolValue;\n                    if (options.oneofs)\n                        object.value = 'boolValue';\n                }\n                if (message.jsonValue != null && message.hasOwnProperty('jsonValue')) {\n                    object.jsonValue = message.jsonValue;\n                    if (options.oneofs)\n                        object.value = 'jsonValue';\n                }\n                return object;\n            };\n\n            /**\n             * Converts this KeyValue to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.KeyValue\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            KeyValue.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return KeyValue;\n        })();\n\n        collector.Log = (function () {\n\n            /**\n             * Properties of a Log.\n             * @memberof lightstep.collector\n             * @interface ILog\n             * @property {google.protobuf.ITimestamp|null} [timestamp] Log timestamp\n             * @property {Array.<lightstep.collector.IKeyValue>|null} [fields] Log fields\n             */\n\n            /**\n             * Constructs a new Log.\n             * @memberof lightstep.collector\n             * @classdesc Represents a Log.\n             * @implements ILog\n             * @constructor\n             * @param {lightstep.collector.ILog=} [properties] Properties to set\n             */\n            function Log(properties) {\n                this.fields = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Log timestamp.\n             * @member {google.protobuf.ITimestamp|null|undefined} timestamp\n             * @memberof lightstep.collector.Log\n             * @instance\n             */\n            Log.prototype.timestamp = null;\n\n            /**\n             * Log fields.\n             * @member {Array.<lightstep.collector.IKeyValue>} fields\n             * @memberof lightstep.collector.Log\n             * @instance\n             */\n            Log.prototype.fields = $util.emptyArray;\n\n            /**\n             * Creates a new Log instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.Log\n             * @static\n             * @param {lightstep.collector.ILog=} [properties] Properties to set\n             * @returns {lightstep.collector.Log} Log instance\n             */\n            Log.create = function create(properties) {\n                return new Log(properties);\n            };\n\n            /**\n             * Encodes the specified Log message. Does not implicitly {@link lightstep.collector.Log.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.Log\n             * @static\n             * @param {lightstep.collector.ILog} message Log message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Log.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.timestamp != null && message.hasOwnProperty('timestamp'))\n                    $root.google.protobuf.Timestamp.encode(message.timestamp, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.fields != null && message.fields.length)\n                    for (let i = 0; i < message.fields.length; ++i)\n                        $root.lightstep.collector.KeyValue.encode(message.fields[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Log message, length delimited. Does not implicitly {@link lightstep.collector.Log.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.Log\n             * @static\n             * @param {lightstep.collector.ILog} message Log message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Log.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Log message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.Log\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.Log} Log\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Log.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.Log();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.timestamp = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        if (!(message.fields && message.fields.length))\n                            message.fields = [];\n                        message.fields.push($root.lightstep.collector.KeyValue.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Log message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.Log\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.Log} Log\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Log.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Log message.\n             * @function verify\n             * @memberof lightstep.collector.Log\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Log.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.timestamp != null && message.hasOwnProperty('timestamp')) {\n                    let error = $root.google.protobuf.Timestamp.verify(message.timestamp);\n                    if (error)\n                        return 'timestamp.' + error;\n                }\n                if (message.fields != null && message.hasOwnProperty('fields')) {\n                    if (!Array.isArray(message.fields))\n                        return 'fields: array expected';\n                    for (let i = 0; i < message.fields.length; ++i) {\n                        let error = $root.lightstep.collector.KeyValue.verify(message.fields[i]);\n                        if (error)\n                            return 'fields.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Log message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.Log\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.Log} Log\n             */\n            Log.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.Log)\n                    return object;\n                let message = new $root.lightstep.collector.Log();\n                if (object.timestamp != null) {\n                    if (typeof object.timestamp !== 'object')\n                        throw TypeError('.lightstep.collector.Log.timestamp: object expected');\n                    message.timestamp = $root.google.protobuf.Timestamp.fromObject(object.timestamp);\n                }\n                if (object.fields) {\n                    if (!Array.isArray(object.fields))\n                        throw TypeError('.lightstep.collector.Log.fields: array expected');\n                    message.fields = [];\n                    for (let i = 0; i < object.fields.length; ++i) {\n                        if (typeof object.fields[i] !== 'object')\n                            throw TypeError('.lightstep.collector.Log.fields: object expected');\n                        message.fields[i] = $root.lightstep.collector.KeyValue.fromObject(object.fields[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Log message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.Log\n             * @static\n             * @param {lightstep.collector.Log} message Log\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Log.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.fields = [];\n                if (options.defaults)\n                    object.timestamp = null;\n                if (message.timestamp != null && message.hasOwnProperty('timestamp'))\n                    object.timestamp = $root.google.protobuf.Timestamp.toObject(message.timestamp, options);\n                if (message.fields && message.fields.length) {\n                    object.fields = [];\n                    for (let j = 0; j < message.fields.length; ++j)\n                        object.fields[j] = $root.lightstep.collector.KeyValue.toObject(message.fields[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this Log to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.Log\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Log.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Log;\n        })();\n\n        collector.Reference = (function () {\n\n            /**\n             * Properties of a Reference.\n             * @memberof lightstep.collector\n             * @interface IReference\n             * @property {lightstep.collector.Reference.Relationship|null} [relationship] Reference relationship\n             * @property {lightstep.collector.ISpanContext|null} [spanContext] Reference spanContext\n             */\n\n            /**\n             * Constructs a new Reference.\n             * @memberof lightstep.collector\n             * @classdesc Represents a Reference.\n             * @implements IReference\n             * @constructor\n             * @param {lightstep.collector.IReference=} [properties] Properties to set\n             */\n            function Reference(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Reference relationship.\n             * @member {lightstep.collector.Reference.Relationship} relationship\n             * @memberof lightstep.collector.Reference\n             * @instance\n             */\n            Reference.prototype.relationship = 0;\n\n            /**\n             * Reference spanContext.\n             * @member {lightstep.collector.ISpanContext|null|undefined} spanContext\n             * @memberof lightstep.collector.Reference\n             * @instance\n             */\n            Reference.prototype.spanContext = null;\n\n            /**\n             * Creates a new Reference instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.Reference\n             * @static\n             * @param {lightstep.collector.IReference=} [properties] Properties to set\n             * @returns {lightstep.collector.Reference} Reference instance\n             */\n            Reference.create = function create(properties) {\n                return new Reference(properties);\n            };\n\n            /**\n             * Encodes the specified Reference message. Does not implicitly {@link lightstep.collector.Reference.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.Reference\n             * @static\n             * @param {lightstep.collector.IReference} message Reference message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Reference.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.relationship != null && message.hasOwnProperty('relationship'))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.relationship);\n                if (message.spanContext != null && message.hasOwnProperty('spanContext'))\n                    $root.lightstep.collector.SpanContext.encode(message.spanContext, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Reference message, length delimited. Does not implicitly {@link lightstep.collector.Reference.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.Reference\n             * @static\n             * @param {lightstep.collector.IReference} message Reference message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Reference.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Reference message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.Reference\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.Reference} Reference\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Reference.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.Reference();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.relationship = reader.int32();\n                        break;\n                    case 2:\n                        message.spanContext = $root.lightstep.collector.SpanContext.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Reference message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.Reference\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.Reference} Reference\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Reference.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Reference message.\n             * @function verify\n             * @memberof lightstep.collector.Reference\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Reference.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.relationship != null && message.hasOwnProperty('relationship'))\n                    switch (message.relationship) {\n                    default:\n                        return 'relationship: enum value expected';\n                    case 0:\n                    case 1:\n                        break;\n                    }\n                if (message.spanContext != null && message.hasOwnProperty('spanContext')) {\n                    let error = $root.lightstep.collector.SpanContext.verify(message.spanContext);\n                    if (error)\n                        return 'spanContext.' + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Reference message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.Reference\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.Reference} Reference\n             */\n            Reference.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.Reference)\n                    return object;\n                let message = new $root.lightstep.collector.Reference();\n                switch (object.relationship) {\n                case 'CHILD_OF':\n                case 0:\n                    message.relationship = 0;\n                    break;\n                case 'FOLLOWS_FROM':\n                case 1:\n                    message.relationship = 1;\n                    break;\n                }\n                if (object.spanContext != null) {\n                    if (typeof object.spanContext !== 'object')\n                        throw TypeError('.lightstep.collector.Reference.spanContext: object expected');\n                    message.spanContext = $root.lightstep.collector.SpanContext.fromObject(object.spanContext);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Reference message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.Reference\n             * @static\n             * @param {lightstep.collector.Reference} message Reference\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Reference.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.relationship = options.enums === String ? 'CHILD_OF' : 0;\n                    object.spanContext = null;\n                }\n                if (message.relationship != null && message.hasOwnProperty('relationship'))\n                    object.relationship = options.enums === String ? $root.lightstep.collector.Reference.Relationship[message.relationship] : message.relationship;\n                if (message.spanContext != null && message.hasOwnProperty('spanContext'))\n                    object.spanContext = $root.lightstep.collector.SpanContext.toObject(message.spanContext, options);\n                return object;\n            };\n\n            /**\n             * Converts this Reference to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.Reference\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Reference.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Relationship enum.\n             * @name lightstep.collector.Reference.Relationship\n             * @enum {string}\n             * @property {number} CHILD_OF=0 CHILD_OF value\n             * @property {number} FOLLOWS_FROM=1 FOLLOWS_FROM value\n             */\n            Reference.Relationship = (function () {\n                const valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[0] = 'CHILD_OF'] = 0;\n                values[valuesById[1] = 'FOLLOWS_FROM'] = 1;\n                return values;\n            })();\n\n            return Reference;\n        })();\n\n        collector.Span = (function () {\n\n            /**\n             * Properties of a Span.\n             * @memberof lightstep.collector\n             * @interface ISpan\n             * @property {lightstep.collector.ISpanContext|null} [spanContext] Span spanContext\n             * @property {string|null} [operationName] Span operationName\n             * @property {Array.<lightstep.collector.IReference>|null} [references] Span references\n             * @property {google.protobuf.ITimestamp|null} [startTimestamp] Span startTimestamp\n             * @property {number|Long|null} [durationMicros] Span durationMicros\n             * @property {Array.<lightstep.collector.IKeyValue>|null} [tags] Span tags\n             * @property {Array.<lightstep.collector.ILog>|null} [logs] Span logs\n             */\n\n            /**\n             * Constructs a new Span.\n             * @memberof lightstep.collector\n             * @classdesc Represents a Span.\n             * @implements ISpan\n             * @constructor\n             * @param {lightstep.collector.ISpan=} [properties] Properties to set\n             */\n            function Span(properties) {\n                this.references = [];\n                this.tags = [];\n                this.logs = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Span spanContext.\n             * @member {lightstep.collector.ISpanContext|null|undefined} spanContext\n             * @memberof lightstep.collector.Span\n             * @instance\n             */\n            Span.prototype.spanContext = null;\n\n            /**\n             * Span operationName.\n             * @member {string} operationName\n             * @memberof lightstep.collector.Span\n             * @instance\n             */\n            Span.prototype.operationName = '';\n\n            /**\n             * Span references.\n             * @member {Array.<lightstep.collector.IReference>} references\n             * @memberof lightstep.collector.Span\n             * @instance\n             */\n            Span.prototype.references = $util.emptyArray;\n\n            /**\n             * Span startTimestamp.\n             * @member {google.protobuf.ITimestamp|null|undefined} startTimestamp\n             * @memberof lightstep.collector.Span\n             * @instance\n             */\n            Span.prototype.startTimestamp = null;\n\n            /**\n             * Span durationMicros.\n             * @member {number|Long} durationMicros\n             * @memberof lightstep.collector.Span\n             * @instance\n             */\n            Span.prototype.durationMicros = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n\n            /**\n             * Span tags.\n             * @member {Array.<lightstep.collector.IKeyValue>} tags\n             * @memberof lightstep.collector.Span\n             * @instance\n             */\n            Span.prototype.tags = $util.emptyArray;\n\n            /**\n             * Span logs.\n             * @member {Array.<lightstep.collector.ILog>} logs\n             * @memberof lightstep.collector.Span\n             * @instance\n             */\n            Span.prototype.logs = $util.emptyArray;\n\n            /**\n             * Creates a new Span instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.Span\n             * @static\n             * @param {lightstep.collector.ISpan=} [properties] Properties to set\n             * @returns {lightstep.collector.Span} Span instance\n             */\n            Span.create = function create(properties) {\n                return new Span(properties);\n            };\n\n            /**\n             * Encodes the specified Span message. Does not implicitly {@link lightstep.collector.Span.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.Span\n             * @static\n             * @param {lightstep.collector.ISpan} message Span message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Span.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.spanContext != null && message.hasOwnProperty('spanContext'))\n                    $root.lightstep.collector.SpanContext.encode(message.spanContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.operationName != null && message.hasOwnProperty('operationName'))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.operationName);\n                if (message.references != null && message.references.length)\n                    for (let i = 0; i < message.references.length; ++i)\n                        $root.lightstep.collector.Reference.encode(message.references[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.startTimestamp != null && message.hasOwnProperty('startTimestamp'))\n                    $root.google.protobuf.Timestamp.encode(message.startTimestamp, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.durationMicros != null && message.hasOwnProperty('durationMicros'))\n                    writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.durationMicros);\n                if (message.tags != null && message.tags.length)\n                    for (let i = 0; i < message.tags.length; ++i)\n                        $root.lightstep.collector.KeyValue.encode(message.tags[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.logs != null && message.logs.length)\n                    for (let i = 0; i < message.logs.length; ++i)\n                        $root.lightstep.collector.Log.encode(message.logs[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Span message, length delimited. Does not implicitly {@link lightstep.collector.Span.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.Span\n             * @static\n             * @param {lightstep.collector.ISpan} message Span message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Span.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Span message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.Span\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.Span} Span\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Span.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.Span();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.spanContext = $root.lightstep.collector.SpanContext.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.operationName = reader.string();\n                        break;\n                    case 3:\n                        if (!(message.references && message.references.length))\n                            message.references = [];\n                        message.references.push($root.lightstep.collector.Reference.decode(reader, reader.uint32()));\n                        break;\n                    case 4:\n                        message.startTimestamp = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                        break;\n                    case 5:\n                        message.durationMicros = reader.uint64();\n                        break;\n                    case 6:\n                        if (!(message.tags && message.tags.length))\n                            message.tags = [];\n                        message.tags.push($root.lightstep.collector.KeyValue.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        if (!(message.logs && message.logs.length))\n                            message.logs = [];\n                        message.logs.push($root.lightstep.collector.Log.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Span message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.Span\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.Span} Span\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Span.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Span message.\n             * @function verify\n             * @memberof lightstep.collector.Span\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Span.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.spanContext != null && message.hasOwnProperty('spanContext')) {\n                    let error = $root.lightstep.collector.SpanContext.verify(message.spanContext);\n                    if (error)\n                        return 'spanContext.' + error;\n                }\n                if (message.operationName != null && message.hasOwnProperty('operationName'))\n                    if (!$util.isString(message.operationName))\n                        return 'operationName: string expected';\n                if (message.references != null && message.hasOwnProperty('references')) {\n                    if (!Array.isArray(message.references))\n                        return 'references: array expected';\n                    for (let i = 0; i < message.references.length; ++i) {\n                        let error = $root.lightstep.collector.Reference.verify(message.references[i]);\n                        if (error)\n                            return 'references.' + error;\n                    }\n                }\n                if (message.startTimestamp != null && message.hasOwnProperty('startTimestamp')) {\n                    let error = $root.google.protobuf.Timestamp.verify(message.startTimestamp);\n                    if (error)\n                        return 'startTimestamp.' + error;\n                }\n                if (message.durationMicros != null && message.hasOwnProperty('durationMicros'))\n                    if (!$util.isInteger(message.durationMicros) && !(message.durationMicros && $util.isInteger(message.durationMicros.low) && $util.isInteger(message.durationMicros.high)))\n                        return 'durationMicros: integer|Long expected';\n                if (message.tags != null && message.hasOwnProperty('tags')) {\n                    if (!Array.isArray(message.tags))\n                        return 'tags: array expected';\n                    for (let i = 0; i < message.tags.length; ++i) {\n                        let error = $root.lightstep.collector.KeyValue.verify(message.tags[i]);\n                        if (error)\n                            return 'tags.' + error;\n                    }\n                }\n                if (message.logs != null && message.hasOwnProperty('logs')) {\n                    if (!Array.isArray(message.logs))\n                        return 'logs: array expected';\n                    for (let i = 0; i < message.logs.length; ++i) {\n                        let error = $root.lightstep.collector.Log.verify(message.logs[i]);\n                        if (error)\n                            return 'logs.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Span message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.Span\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.Span} Span\n             */\n            Span.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.Span)\n                    return object;\n                let message = new $root.lightstep.collector.Span();\n                if (object.spanContext != null) {\n                    if (typeof object.spanContext !== 'object')\n                        throw TypeError('.lightstep.collector.Span.spanContext: object expected');\n                    message.spanContext = $root.lightstep.collector.SpanContext.fromObject(object.spanContext);\n                }\n                if (object.operationName != null)\n                    message.operationName = String(object.operationName);\n                if (object.references) {\n                    if (!Array.isArray(object.references))\n                        throw TypeError('.lightstep.collector.Span.references: array expected');\n                    message.references = [];\n                    for (let i = 0; i < object.references.length; ++i) {\n                        if (typeof object.references[i] !== 'object')\n                            throw TypeError('.lightstep.collector.Span.references: object expected');\n                        message.references[i] = $root.lightstep.collector.Reference.fromObject(object.references[i]);\n                    }\n                }\n                if (object.startTimestamp != null) {\n                    if (typeof object.startTimestamp !== 'object')\n                        throw TypeError('.lightstep.collector.Span.startTimestamp: object expected');\n                    message.startTimestamp = $root.google.protobuf.Timestamp.fromObject(object.startTimestamp);\n                }\n                if (object.durationMicros != null)\n                    if ($util.Long)\n                        (message.durationMicros = $util.Long.fromValue(object.durationMicros)).unsigned = true;\n                    else if (typeof object.durationMicros === 'string')\n                        message.durationMicros = parseInt(object.durationMicros, 10);\n                    else if (typeof object.durationMicros === 'number')\n                        message.durationMicros = object.durationMicros;\n                    else if (typeof object.durationMicros === 'object')\n                        message.durationMicros = new $util.LongBits(object.durationMicros.low >>> 0, object.durationMicros.high >>> 0).toNumber(true);\n                if (object.tags) {\n                    if (!Array.isArray(object.tags))\n                        throw TypeError('.lightstep.collector.Span.tags: array expected');\n                    message.tags = [];\n                    for (let i = 0; i < object.tags.length; ++i) {\n                        if (typeof object.tags[i] !== 'object')\n                            throw TypeError('.lightstep.collector.Span.tags: object expected');\n                        message.tags[i] = $root.lightstep.collector.KeyValue.fromObject(object.tags[i]);\n                    }\n                }\n                if (object.logs) {\n                    if (!Array.isArray(object.logs))\n                        throw TypeError('.lightstep.collector.Span.logs: array expected');\n                    message.logs = [];\n                    for (let i = 0; i < object.logs.length; ++i) {\n                        if (typeof object.logs[i] !== 'object')\n                            throw TypeError('.lightstep.collector.Span.logs: object expected');\n                        message.logs[i] = $root.lightstep.collector.Log.fromObject(object.logs[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Span message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.Span\n             * @static\n             * @param {lightstep.collector.Span} message Span\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Span.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults) {\n                    object.references = [];\n                    object.tags = [];\n                    object.logs = [];\n                }\n                if (options.defaults) {\n                    object.spanContext = null;\n                    object.operationName = '';\n                    object.startTimestamp = null;\n                    if ($util.Long) {\n                        let long = new $util.Long(0, 0, true);\n                        object.durationMicros = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.durationMicros = options.longs === String ? '0' : 0;\n                }\n                if (message.spanContext != null && message.hasOwnProperty('spanContext'))\n                    object.spanContext = $root.lightstep.collector.SpanContext.toObject(message.spanContext, options);\n                if (message.operationName != null && message.hasOwnProperty('operationName'))\n                    object.operationName = message.operationName;\n                if (message.references && message.references.length) {\n                    object.references = [];\n                    for (let j = 0; j < message.references.length; ++j)\n                        object.references[j] = $root.lightstep.collector.Reference.toObject(message.references[j], options);\n                }\n                if (message.startTimestamp != null && message.hasOwnProperty('startTimestamp'))\n                    object.startTimestamp = $root.google.protobuf.Timestamp.toObject(message.startTimestamp, options);\n                if (message.durationMicros != null && message.hasOwnProperty('durationMicros'))\n                    if (typeof message.durationMicros === 'number')\n                        object.durationMicros = options.longs === String ? String(message.durationMicros) : message.durationMicros;\n                    else\n                        object.durationMicros = options.longs === String ? $util.Long.prototype.toString.call(message.durationMicros) : options.longs === Number ? new $util.LongBits(message.durationMicros.low >>> 0, message.durationMicros.high >>> 0).toNumber(true) : message.durationMicros;\n                if (message.tags && message.tags.length) {\n                    object.tags = [];\n                    for (let j = 0; j < message.tags.length; ++j)\n                        object.tags[j] = $root.lightstep.collector.KeyValue.toObject(message.tags[j], options);\n                }\n                if (message.logs && message.logs.length) {\n                    object.logs = [];\n                    for (let j = 0; j < message.logs.length; ++j)\n                        object.logs[j] = $root.lightstep.collector.Log.toObject(message.logs[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this Span to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.Span\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Span.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Span;\n        })();\n\n        collector.Reporter = (function () {\n\n            /**\n             * Properties of a Reporter.\n             * @memberof lightstep.collector\n             * @interface IReporter\n             * @property {number|Long|null} [reporterId] Reporter reporterId\n             * @property {Array.<lightstep.collector.IKeyValue>|null} [tags] Reporter tags\n             */\n\n            /**\n             * Constructs a new Reporter.\n             * @memberof lightstep.collector\n             * @classdesc Represents a Reporter.\n             * @implements IReporter\n             * @constructor\n             * @param {lightstep.collector.IReporter=} [properties] Properties to set\n             */\n            function Reporter(properties) {\n                this.tags = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Reporter reporterId.\n             * @member {number|Long} reporterId\n             * @memberof lightstep.collector.Reporter\n             * @instance\n             */\n            Reporter.prototype.reporterId = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n\n            /**\n             * Reporter tags.\n             * @member {Array.<lightstep.collector.IKeyValue>} tags\n             * @memberof lightstep.collector.Reporter\n             * @instance\n             */\n            Reporter.prototype.tags = $util.emptyArray;\n\n            /**\n             * Creates a new Reporter instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.Reporter\n             * @static\n             * @param {lightstep.collector.IReporter=} [properties] Properties to set\n             * @returns {lightstep.collector.Reporter} Reporter instance\n             */\n            Reporter.create = function create(properties) {\n                return new Reporter(properties);\n            };\n\n            /**\n             * Encodes the specified Reporter message. Does not implicitly {@link lightstep.collector.Reporter.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.Reporter\n             * @static\n             * @param {lightstep.collector.IReporter} message Reporter message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Reporter.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.reporterId != null && message.hasOwnProperty('reporterId'))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.reporterId);\n                if (message.tags != null && message.tags.length)\n                    for (let i = 0; i < message.tags.length; ++i)\n                        $root.lightstep.collector.KeyValue.encode(message.tags[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Reporter message, length delimited. Does not implicitly {@link lightstep.collector.Reporter.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.Reporter\n             * @static\n             * @param {lightstep.collector.IReporter} message Reporter message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Reporter.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Reporter message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.Reporter\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.Reporter} Reporter\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Reporter.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.Reporter();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.reporterId = reader.uint64();\n                        break;\n                    case 4:\n                        if (!(message.tags && message.tags.length))\n                            message.tags = [];\n                        message.tags.push($root.lightstep.collector.KeyValue.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Reporter message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.Reporter\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.Reporter} Reporter\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Reporter.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Reporter message.\n             * @function verify\n             * @memberof lightstep.collector.Reporter\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Reporter.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.reporterId != null && message.hasOwnProperty('reporterId'))\n                    if (!$util.isInteger(message.reporterId) && !(message.reporterId && $util.isInteger(message.reporterId.low) && $util.isInteger(message.reporterId.high)))\n                        return 'reporterId: integer|Long expected';\n                if (message.tags != null && message.hasOwnProperty('tags')) {\n                    if (!Array.isArray(message.tags))\n                        return 'tags: array expected';\n                    for (let i = 0; i < message.tags.length; ++i) {\n                        let error = $root.lightstep.collector.KeyValue.verify(message.tags[i]);\n                        if (error)\n                            return 'tags.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Reporter message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.Reporter\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.Reporter} Reporter\n             */\n            Reporter.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.Reporter)\n                    return object;\n                let message = new $root.lightstep.collector.Reporter();\n                if (object.reporterId != null)\n                    if ($util.Long)\n                        (message.reporterId = $util.Long.fromValue(object.reporterId)).unsigned = true;\n                    else if (typeof object.reporterId === 'string')\n                        message.reporterId = parseInt(object.reporterId, 10);\n                    else if (typeof object.reporterId === 'number')\n                        message.reporterId = object.reporterId;\n                    else if (typeof object.reporterId === 'object')\n                        message.reporterId = new $util.LongBits(object.reporterId.low >>> 0, object.reporterId.high >>> 0).toNumber(true);\n                if (object.tags) {\n                    if (!Array.isArray(object.tags))\n                        throw TypeError('.lightstep.collector.Reporter.tags: array expected');\n                    message.tags = [];\n                    for (let i = 0; i < object.tags.length; ++i) {\n                        if (typeof object.tags[i] !== 'object')\n                            throw TypeError('.lightstep.collector.Reporter.tags: object expected');\n                        message.tags[i] = $root.lightstep.collector.KeyValue.fromObject(object.tags[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Reporter message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.Reporter\n             * @static\n             * @param {lightstep.collector.Reporter} message Reporter\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Reporter.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.tags = [];\n                if (options.defaults)\n                    if ($util.Long) {\n                        let long = new $util.Long(0, 0, true);\n                        object.reporterId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.reporterId = options.longs === String ? '0' : 0;\n                if (message.reporterId != null && message.hasOwnProperty('reporterId'))\n                    if (typeof message.reporterId === 'number')\n                        object.reporterId = options.longs === String ? String(message.reporterId) : message.reporterId;\n                    else\n                        object.reporterId = options.longs === String ? $util.Long.prototype.toString.call(message.reporterId) : options.longs === Number ? new $util.LongBits(message.reporterId.low >>> 0, message.reporterId.high >>> 0).toNumber(true) : message.reporterId;\n                if (message.tags && message.tags.length) {\n                    object.tags = [];\n                    for (let j = 0; j < message.tags.length; ++j)\n                        object.tags[j] = $root.lightstep.collector.KeyValue.toObject(message.tags[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this Reporter to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.Reporter\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Reporter.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Reporter;\n        })();\n\n        collector.MetricsSample = (function () {\n\n            /**\n             * Properties of a MetricsSample.\n             * @memberof lightstep.collector\n             * @interface IMetricsSample\n             * @property {string|null} [name] MetricsSample name\n             * @property {number|Long|null} [intValue] MetricsSample intValue\n             * @property {number|null} [doubleValue] MetricsSample doubleValue\n             */\n\n            /**\n             * Constructs a new MetricsSample.\n             * @memberof lightstep.collector\n             * @classdesc Represents a MetricsSample.\n             * @implements IMetricsSample\n             * @constructor\n             * @param {lightstep.collector.IMetricsSample=} [properties] Properties to set\n             */\n            function MetricsSample(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * MetricsSample name.\n             * @member {string} name\n             * @memberof lightstep.collector.MetricsSample\n             * @instance\n             */\n            MetricsSample.prototype.name = '';\n\n            /**\n             * MetricsSample intValue.\n             * @member {number|Long} intValue\n             * @memberof lightstep.collector.MetricsSample\n             * @instance\n             */\n            MetricsSample.prototype.intValue = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n            /**\n             * MetricsSample doubleValue.\n             * @member {number} doubleValue\n             * @memberof lightstep.collector.MetricsSample\n             * @instance\n             */\n            MetricsSample.prototype.doubleValue = 0;\n\n            // OneOf field names bound to virtual getters and setters\n            let $oneOfFields;\n\n            /**\n             * MetricsSample value.\n             * @member {\"intValue\"|\"doubleValue\"|undefined} value\n             * @memberof lightstep.collector.MetricsSample\n             * @instance\n             */\n            Object.defineProperty(MetricsSample.prototype, 'value', {\n                get: $util.oneOfGetter($oneOfFields = ['intValue', 'doubleValue']),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new MetricsSample instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.MetricsSample\n             * @static\n             * @param {lightstep.collector.IMetricsSample=} [properties] Properties to set\n             * @returns {lightstep.collector.MetricsSample} MetricsSample instance\n             */\n            MetricsSample.create = function create(properties) {\n                return new MetricsSample(properties);\n            };\n\n            /**\n             * Encodes the specified MetricsSample message. Does not implicitly {@link lightstep.collector.MetricsSample.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.MetricsSample\n             * @static\n             * @param {lightstep.collector.IMetricsSample} message MetricsSample message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MetricsSample.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty('name'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.intValue != null && message.hasOwnProperty('intValue'))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.intValue);\n                if (message.doubleValue != null && message.hasOwnProperty('doubleValue'))\n                    writer.uint32(/* id 3, wireType 1 =*/25).double(message.doubleValue);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified MetricsSample message, length delimited. Does not implicitly {@link lightstep.collector.MetricsSample.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.MetricsSample\n             * @static\n             * @param {lightstep.collector.IMetricsSample} message MetricsSample message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MetricsSample.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a MetricsSample message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.MetricsSample\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.MetricsSample} MetricsSample\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MetricsSample.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.MetricsSample();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        message.intValue = reader.int64();\n                        break;\n                    case 3:\n                        message.doubleValue = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a MetricsSample message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.MetricsSample\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.MetricsSample} MetricsSample\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MetricsSample.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a MetricsSample message.\n             * @function verify\n             * @memberof lightstep.collector.MetricsSample\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MetricsSample.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                let properties = {};\n                if (message.name != null && message.hasOwnProperty('name'))\n                    if (!$util.isString(message.name))\n                        return 'name: string expected';\n                if (message.intValue != null && message.hasOwnProperty('intValue')) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.intValue) && !(message.intValue && $util.isInteger(message.intValue.low) && $util.isInteger(message.intValue.high)))\n                        return 'intValue: integer|Long expected';\n                }\n                if (message.doubleValue != null && message.hasOwnProperty('doubleValue')) {\n                    if (properties.value === 1)\n                        return 'value: multiple values';\n                    properties.value = 1;\n                    if (typeof message.doubleValue !== 'number')\n                        return 'doubleValue: number expected';\n                }\n                return null;\n            };\n\n            /**\n             * Creates a MetricsSample message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.MetricsSample\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.MetricsSample} MetricsSample\n             */\n            MetricsSample.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.MetricsSample)\n                    return object;\n                let message = new $root.lightstep.collector.MetricsSample();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.intValue != null)\n                    if ($util.Long)\n                        (message.intValue = $util.Long.fromValue(object.intValue)).unsigned = false;\n                    else if (typeof object.intValue === 'string')\n                        message.intValue = parseInt(object.intValue, 10);\n                    else if (typeof object.intValue === 'number')\n                        message.intValue = object.intValue;\n                    else if (typeof object.intValue === 'object')\n                        message.intValue = new $util.LongBits(object.intValue.low >>> 0, object.intValue.high >>> 0).toNumber();\n                if (object.doubleValue != null)\n                    message.doubleValue = Number(object.doubleValue);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a MetricsSample message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.MetricsSample\n             * @static\n             * @param {lightstep.collector.MetricsSample} message MetricsSample\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MetricsSample.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults)\n                    object.name = '';\n                if (message.name != null && message.hasOwnProperty('name'))\n                    object.name = message.name;\n                if (message.intValue != null && message.hasOwnProperty('intValue')) {\n                    if (typeof message.intValue === 'number')\n                        object.intValue = options.longs === String ? String(message.intValue) : message.intValue;\n                    else\n                        object.intValue = options.longs === String ? $util.Long.prototype.toString.call(message.intValue) : options.longs === Number ? new $util.LongBits(message.intValue.low >>> 0, message.intValue.high >>> 0).toNumber() : message.intValue;\n                    if (options.oneofs)\n                        object.value = 'intValue';\n                }\n                if (message.doubleValue != null && message.hasOwnProperty('doubleValue')) {\n                    object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                    if (options.oneofs)\n                        object.value = 'doubleValue';\n                }\n                return object;\n            };\n\n            /**\n             * Converts this MetricsSample to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.MetricsSample\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MetricsSample.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return MetricsSample;\n        })();\n\n        collector.InternalMetrics = (function () {\n\n            /**\n             * Properties of an InternalMetrics.\n             * @memberof lightstep.collector\n             * @interface IInternalMetrics\n             * @property {google.protobuf.ITimestamp|null} [startTimestamp] InternalMetrics startTimestamp\n             * @property {number|Long|null} [durationMicros] InternalMetrics durationMicros\n             * @property {Array.<lightstep.collector.ILog>|null} [logs] InternalMetrics logs\n             * @property {Array.<lightstep.collector.IMetricsSample>|null} [counts] InternalMetrics counts\n             * @property {Array.<lightstep.collector.IMetricsSample>|null} [gauges] InternalMetrics gauges\n             */\n\n            /**\n             * Constructs a new InternalMetrics.\n             * @memberof lightstep.collector\n             * @classdesc Represents an InternalMetrics.\n             * @implements IInternalMetrics\n             * @constructor\n             * @param {lightstep.collector.IInternalMetrics=} [properties] Properties to set\n             */\n            function InternalMetrics(properties) {\n                this.logs = [];\n                this.counts = [];\n                this.gauges = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * InternalMetrics startTimestamp.\n             * @member {google.protobuf.ITimestamp|null|undefined} startTimestamp\n             * @memberof lightstep.collector.InternalMetrics\n             * @instance\n             */\n            InternalMetrics.prototype.startTimestamp = null;\n\n            /**\n             * InternalMetrics durationMicros.\n             * @member {number|Long} durationMicros\n             * @memberof lightstep.collector.InternalMetrics\n             * @instance\n             */\n            InternalMetrics.prototype.durationMicros = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n\n            /**\n             * InternalMetrics logs.\n             * @member {Array.<lightstep.collector.ILog>} logs\n             * @memberof lightstep.collector.InternalMetrics\n             * @instance\n             */\n            InternalMetrics.prototype.logs = $util.emptyArray;\n\n            /**\n             * InternalMetrics counts.\n             * @member {Array.<lightstep.collector.IMetricsSample>} counts\n             * @memberof lightstep.collector.InternalMetrics\n             * @instance\n             */\n            InternalMetrics.prototype.counts = $util.emptyArray;\n\n            /**\n             * InternalMetrics gauges.\n             * @member {Array.<lightstep.collector.IMetricsSample>} gauges\n             * @memberof lightstep.collector.InternalMetrics\n             * @instance\n             */\n            InternalMetrics.prototype.gauges = $util.emptyArray;\n\n            /**\n             * Creates a new InternalMetrics instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.InternalMetrics\n             * @static\n             * @param {lightstep.collector.IInternalMetrics=} [properties] Properties to set\n             * @returns {lightstep.collector.InternalMetrics} InternalMetrics instance\n             */\n            InternalMetrics.create = function create(properties) {\n                return new InternalMetrics(properties);\n            };\n\n            /**\n             * Encodes the specified InternalMetrics message. Does not implicitly {@link lightstep.collector.InternalMetrics.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.InternalMetrics\n             * @static\n             * @param {lightstep.collector.IInternalMetrics} message InternalMetrics message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            InternalMetrics.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.startTimestamp != null && message.hasOwnProperty('startTimestamp'))\n                    $root.google.protobuf.Timestamp.encode(message.startTimestamp, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.durationMicros != null && message.hasOwnProperty('durationMicros'))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.durationMicros);\n                if (message.logs != null && message.logs.length)\n                    for (let i = 0; i < message.logs.length; ++i)\n                        $root.lightstep.collector.Log.encode(message.logs[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.counts != null && message.counts.length)\n                    for (let i = 0; i < message.counts.length; ++i)\n                        $root.lightstep.collector.MetricsSample.encode(message.counts[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.gauges != null && message.gauges.length)\n                    for (let i = 0; i < message.gauges.length; ++i)\n                        $root.lightstep.collector.MetricsSample.encode(message.gauges[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified InternalMetrics message, length delimited. Does not implicitly {@link lightstep.collector.InternalMetrics.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.InternalMetrics\n             * @static\n             * @param {lightstep.collector.IInternalMetrics} message InternalMetrics message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            InternalMetrics.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an InternalMetrics message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.InternalMetrics\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.InternalMetrics} InternalMetrics\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            InternalMetrics.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.InternalMetrics();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.startTimestamp = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.durationMicros = reader.uint64();\n                        break;\n                    case 3:\n                        if (!(message.logs && message.logs.length))\n                            message.logs = [];\n                        message.logs.push($root.lightstep.collector.Log.decode(reader, reader.uint32()));\n                        break;\n                    case 4:\n                        if (!(message.counts && message.counts.length))\n                            message.counts = [];\n                        message.counts.push($root.lightstep.collector.MetricsSample.decode(reader, reader.uint32()));\n                        break;\n                    case 5:\n                        if (!(message.gauges && message.gauges.length))\n                            message.gauges = [];\n                        message.gauges.push($root.lightstep.collector.MetricsSample.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an InternalMetrics message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.InternalMetrics\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.InternalMetrics} InternalMetrics\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            InternalMetrics.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an InternalMetrics message.\n             * @function verify\n             * @memberof lightstep.collector.InternalMetrics\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            InternalMetrics.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.startTimestamp != null && message.hasOwnProperty('startTimestamp')) {\n                    let error = $root.google.protobuf.Timestamp.verify(message.startTimestamp);\n                    if (error)\n                        return 'startTimestamp.' + error;\n                }\n                if (message.durationMicros != null && message.hasOwnProperty('durationMicros'))\n                    if (!$util.isInteger(message.durationMicros) && !(message.durationMicros && $util.isInteger(message.durationMicros.low) && $util.isInteger(message.durationMicros.high)))\n                        return 'durationMicros: integer|Long expected';\n                if (message.logs != null && message.hasOwnProperty('logs')) {\n                    if (!Array.isArray(message.logs))\n                        return 'logs: array expected';\n                    for (let i = 0; i < message.logs.length; ++i) {\n                        let error = $root.lightstep.collector.Log.verify(message.logs[i]);\n                        if (error)\n                            return 'logs.' + error;\n                    }\n                }\n                if (message.counts != null && message.hasOwnProperty('counts')) {\n                    if (!Array.isArray(message.counts))\n                        return 'counts: array expected';\n                    for (let i = 0; i < message.counts.length; ++i) {\n                        let error = $root.lightstep.collector.MetricsSample.verify(message.counts[i]);\n                        if (error)\n                            return 'counts.' + error;\n                    }\n                }\n                if (message.gauges != null && message.hasOwnProperty('gauges')) {\n                    if (!Array.isArray(message.gauges))\n                        return 'gauges: array expected';\n                    for (let i = 0; i < message.gauges.length; ++i) {\n                        let error = $root.lightstep.collector.MetricsSample.verify(message.gauges[i]);\n                        if (error)\n                            return 'gauges.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates an InternalMetrics message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.InternalMetrics\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.InternalMetrics} InternalMetrics\n             */\n            InternalMetrics.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.InternalMetrics)\n                    return object;\n                let message = new $root.lightstep.collector.InternalMetrics();\n                if (object.startTimestamp != null) {\n                    if (typeof object.startTimestamp !== 'object')\n                        throw TypeError('.lightstep.collector.InternalMetrics.startTimestamp: object expected');\n                    message.startTimestamp = $root.google.protobuf.Timestamp.fromObject(object.startTimestamp);\n                }\n                if (object.durationMicros != null)\n                    if ($util.Long)\n                        (message.durationMicros = $util.Long.fromValue(object.durationMicros)).unsigned = true;\n                    else if (typeof object.durationMicros === 'string')\n                        message.durationMicros = parseInt(object.durationMicros, 10);\n                    else if (typeof object.durationMicros === 'number')\n                        message.durationMicros = object.durationMicros;\n                    else if (typeof object.durationMicros === 'object')\n                        message.durationMicros = new $util.LongBits(object.durationMicros.low >>> 0, object.durationMicros.high >>> 0).toNumber(true);\n                if (object.logs) {\n                    if (!Array.isArray(object.logs))\n                        throw TypeError('.lightstep.collector.InternalMetrics.logs: array expected');\n                    message.logs = [];\n                    for (let i = 0; i < object.logs.length; ++i) {\n                        if (typeof object.logs[i] !== 'object')\n                            throw TypeError('.lightstep.collector.InternalMetrics.logs: object expected');\n                        message.logs[i] = $root.lightstep.collector.Log.fromObject(object.logs[i]);\n                    }\n                }\n                if (object.counts) {\n                    if (!Array.isArray(object.counts))\n                        throw TypeError('.lightstep.collector.InternalMetrics.counts: array expected');\n                    message.counts = [];\n                    for (let i = 0; i < object.counts.length; ++i) {\n                        if (typeof object.counts[i] !== 'object')\n                            throw TypeError('.lightstep.collector.InternalMetrics.counts: object expected');\n                        message.counts[i] = $root.lightstep.collector.MetricsSample.fromObject(object.counts[i]);\n                    }\n                }\n                if (object.gauges) {\n                    if (!Array.isArray(object.gauges))\n                        throw TypeError('.lightstep.collector.InternalMetrics.gauges: array expected');\n                    message.gauges = [];\n                    for (let i = 0; i < object.gauges.length; ++i) {\n                        if (typeof object.gauges[i] !== 'object')\n                            throw TypeError('.lightstep.collector.InternalMetrics.gauges: object expected');\n                        message.gauges[i] = $root.lightstep.collector.MetricsSample.fromObject(object.gauges[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an InternalMetrics message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.InternalMetrics\n             * @static\n             * @param {lightstep.collector.InternalMetrics} message InternalMetrics\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            InternalMetrics.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults) {\n                    object.logs = [];\n                    object.counts = [];\n                    object.gauges = [];\n                }\n                if (options.defaults) {\n                    object.startTimestamp = null;\n                    if ($util.Long) {\n                        let long = new $util.Long(0, 0, true);\n                        object.durationMicros = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.durationMicros = options.longs === String ? '0' : 0;\n                }\n                if (message.startTimestamp != null && message.hasOwnProperty('startTimestamp'))\n                    object.startTimestamp = $root.google.protobuf.Timestamp.toObject(message.startTimestamp, options);\n                if (message.durationMicros != null && message.hasOwnProperty('durationMicros'))\n                    if (typeof message.durationMicros === 'number')\n                        object.durationMicros = options.longs === String ? String(message.durationMicros) : message.durationMicros;\n                    else\n                        object.durationMicros = options.longs === String ? $util.Long.prototype.toString.call(message.durationMicros) : options.longs === Number ? new $util.LongBits(message.durationMicros.low >>> 0, message.durationMicros.high >>> 0).toNumber(true) : message.durationMicros;\n                if (message.logs && message.logs.length) {\n                    object.logs = [];\n                    for (let j = 0; j < message.logs.length; ++j)\n                        object.logs[j] = $root.lightstep.collector.Log.toObject(message.logs[j], options);\n                }\n                if (message.counts && message.counts.length) {\n                    object.counts = [];\n                    for (let j = 0; j < message.counts.length; ++j)\n                        object.counts[j] = $root.lightstep.collector.MetricsSample.toObject(message.counts[j], options);\n                }\n                if (message.gauges && message.gauges.length) {\n                    object.gauges = [];\n                    for (let j = 0; j < message.gauges.length; ++j)\n                        object.gauges[j] = $root.lightstep.collector.MetricsSample.toObject(message.gauges[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this InternalMetrics to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.InternalMetrics\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            InternalMetrics.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return InternalMetrics;\n        })();\n\n        collector.Auth = (function () {\n\n            /**\n             * Properties of an Auth.\n             * @memberof lightstep.collector\n             * @interface IAuth\n             * @property {string|null} [accessToken] Auth accessToken\n             */\n\n            /**\n             * Constructs a new Auth.\n             * @memberof lightstep.collector\n             * @classdesc Represents an Auth.\n             * @implements IAuth\n             * @constructor\n             * @param {lightstep.collector.IAuth=} [properties] Properties to set\n             */\n            function Auth(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Auth accessToken.\n             * @member {string} accessToken\n             * @memberof lightstep.collector.Auth\n             * @instance\n             */\n            Auth.prototype.accessToken = '';\n\n            /**\n             * Creates a new Auth instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.Auth\n             * @static\n             * @param {lightstep.collector.IAuth=} [properties] Properties to set\n             * @returns {lightstep.collector.Auth} Auth instance\n             */\n            Auth.create = function create(properties) {\n                return new Auth(properties);\n            };\n\n            /**\n             * Encodes the specified Auth message. Does not implicitly {@link lightstep.collector.Auth.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.Auth\n             * @static\n             * @param {lightstep.collector.IAuth} message Auth message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Auth.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.accessToken != null && message.hasOwnProperty('accessToken'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.accessToken);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Auth message, length delimited. Does not implicitly {@link lightstep.collector.Auth.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.Auth\n             * @static\n             * @param {lightstep.collector.IAuth} message Auth message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Auth.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an Auth message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.Auth\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.Auth} Auth\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Auth.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.Auth();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.accessToken = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an Auth message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.Auth\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.Auth} Auth\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Auth.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an Auth message.\n             * @function verify\n             * @memberof lightstep.collector.Auth\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Auth.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.accessToken != null && message.hasOwnProperty('accessToken'))\n                    if (!$util.isString(message.accessToken))\n                        return 'accessToken: string expected';\n                return null;\n            };\n\n            /**\n             * Creates an Auth message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.Auth\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.Auth} Auth\n             */\n            Auth.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.Auth)\n                    return object;\n                let message = new $root.lightstep.collector.Auth();\n                if (object.accessToken != null)\n                    message.accessToken = String(object.accessToken);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an Auth message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.Auth\n             * @static\n             * @param {lightstep.collector.Auth} message Auth\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Auth.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults)\n                    object.accessToken = '';\n                if (message.accessToken != null && message.hasOwnProperty('accessToken'))\n                    object.accessToken = message.accessToken;\n                return object;\n            };\n\n            /**\n             * Converts this Auth to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.Auth\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Auth.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Auth;\n        })();\n\n        collector.ReportRequest = (function () {\n\n            /**\n             * Properties of a ReportRequest.\n             * @memberof lightstep.collector\n             * @interface IReportRequest\n             * @property {lightstep.collector.IReporter|null} [reporter] ReportRequest reporter\n             * @property {lightstep.collector.IAuth|null} [auth] ReportRequest auth\n             * @property {Array.<lightstep.collector.ISpan>|null} [spans] ReportRequest spans\n             * @property {number|Long|null} [timestampOffsetMicros] ReportRequest timestampOffsetMicros\n             * @property {lightstep.collector.IInternalMetrics|null} [internalMetrics] ReportRequest internalMetrics\n             */\n\n            /**\n             * Constructs a new ReportRequest.\n             * @memberof lightstep.collector\n             * @classdesc Represents a ReportRequest.\n             * @implements IReportRequest\n             * @constructor\n             * @param {lightstep.collector.IReportRequest=} [properties] Properties to set\n             */\n            function ReportRequest(properties) {\n                this.spans = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ReportRequest reporter.\n             * @member {lightstep.collector.IReporter|null|undefined} reporter\n             * @memberof lightstep.collector.ReportRequest\n             * @instance\n             */\n            ReportRequest.prototype.reporter = null;\n\n            /**\n             * ReportRequest auth.\n             * @member {lightstep.collector.IAuth|null|undefined} auth\n             * @memberof lightstep.collector.ReportRequest\n             * @instance\n             */\n            ReportRequest.prototype.auth = null;\n\n            /**\n             * ReportRequest spans.\n             * @member {Array.<lightstep.collector.ISpan>} spans\n             * @memberof lightstep.collector.ReportRequest\n             * @instance\n             */\n            ReportRequest.prototype.spans = $util.emptyArray;\n\n            /**\n             * ReportRequest timestampOffsetMicros.\n             * @member {number|Long} timestampOffsetMicros\n             * @memberof lightstep.collector.ReportRequest\n             * @instance\n             */\n            ReportRequest.prototype.timestampOffsetMicros = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n            /**\n             * ReportRequest internalMetrics.\n             * @member {lightstep.collector.IInternalMetrics|null|undefined} internalMetrics\n             * @memberof lightstep.collector.ReportRequest\n             * @instance\n             */\n            ReportRequest.prototype.internalMetrics = null;\n\n            /**\n             * Creates a new ReportRequest instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.ReportRequest\n             * @static\n             * @param {lightstep.collector.IReportRequest=} [properties] Properties to set\n             * @returns {lightstep.collector.ReportRequest} ReportRequest instance\n             */\n            ReportRequest.create = function create(properties) {\n                return new ReportRequest(properties);\n            };\n\n            /**\n             * Encodes the specified ReportRequest message. Does not implicitly {@link lightstep.collector.ReportRequest.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.ReportRequest\n             * @static\n             * @param {lightstep.collector.IReportRequest} message ReportRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ReportRequest.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.reporter != null && message.hasOwnProperty('reporter'))\n                    $root.lightstep.collector.Reporter.encode(message.reporter, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.auth != null && message.hasOwnProperty('auth'))\n                    $root.lightstep.collector.Auth.encode(message.auth, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.spans != null && message.spans.length)\n                    for (let i = 0; i < message.spans.length; ++i)\n                        $root.lightstep.collector.Span.encode(message.spans[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.timestampOffsetMicros != null && message.hasOwnProperty('timestampOffsetMicros'))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.timestampOffsetMicros);\n                if (message.internalMetrics != null && message.hasOwnProperty('internalMetrics'))\n                    $root.lightstep.collector.InternalMetrics.encode(message.internalMetrics, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ReportRequest message, length delimited. Does not implicitly {@link lightstep.collector.ReportRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.ReportRequest\n             * @static\n             * @param {lightstep.collector.IReportRequest} message ReportRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ReportRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ReportRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.ReportRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.ReportRequest} ReportRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ReportRequest.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.ReportRequest();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.reporter = $root.lightstep.collector.Reporter.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.auth = $root.lightstep.collector.Auth.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        if (!(message.spans && message.spans.length))\n                            message.spans = [];\n                        message.spans.push($root.lightstep.collector.Span.decode(reader, reader.uint32()));\n                        break;\n                    case 5:\n                        message.timestampOffsetMicros = reader.int64();\n                        break;\n                    case 6:\n                        message.internalMetrics = $root.lightstep.collector.InternalMetrics.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ReportRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.ReportRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.ReportRequest} ReportRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ReportRequest.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ReportRequest message.\n             * @function verify\n             * @memberof lightstep.collector.ReportRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ReportRequest.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.reporter != null && message.hasOwnProperty('reporter')) {\n                    let error = $root.lightstep.collector.Reporter.verify(message.reporter);\n                    if (error)\n                        return 'reporter.' + error;\n                }\n                if (message.auth != null && message.hasOwnProperty('auth')) {\n                    let error = $root.lightstep.collector.Auth.verify(message.auth);\n                    if (error)\n                        return 'auth.' + error;\n                }\n                if (message.spans != null && message.hasOwnProperty('spans')) {\n                    if (!Array.isArray(message.spans))\n                        return 'spans: array expected';\n                    for (let i = 0; i < message.spans.length; ++i) {\n                        let error = $root.lightstep.collector.Span.verify(message.spans[i]);\n                        if (error)\n                            return 'spans.' + error;\n                    }\n                }\n                if (message.timestampOffsetMicros != null && message.hasOwnProperty('timestampOffsetMicros'))\n                    if (!$util.isInteger(message.timestampOffsetMicros) && !(message.timestampOffsetMicros && $util.isInteger(message.timestampOffsetMicros.low) && $util.isInteger(message.timestampOffsetMicros.high)))\n                        return 'timestampOffsetMicros: integer|Long expected';\n                if (message.internalMetrics != null && message.hasOwnProperty('internalMetrics')) {\n                    let error = $root.lightstep.collector.InternalMetrics.verify(message.internalMetrics);\n                    if (error)\n                        return 'internalMetrics.' + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a ReportRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.ReportRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.ReportRequest} ReportRequest\n             */\n            ReportRequest.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.ReportRequest)\n                    return object;\n                let message = new $root.lightstep.collector.ReportRequest();\n                if (object.reporter != null) {\n                    if (typeof object.reporter !== 'object')\n                        throw TypeError('.lightstep.collector.ReportRequest.reporter: object expected');\n                    message.reporter = $root.lightstep.collector.Reporter.fromObject(object.reporter);\n                }\n                if (object.auth != null) {\n                    if (typeof object.auth !== 'object')\n                        throw TypeError('.lightstep.collector.ReportRequest.auth: object expected');\n                    message.auth = $root.lightstep.collector.Auth.fromObject(object.auth);\n                }\n                if (object.spans) {\n                    if (!Array.isArray(object.spans))\n                        throw TypeError('.lightstep.collector.ReportRequest.spans: array expected');\n                    message.spans = [];\n                    for (let i = 0; i < object.spans.length; ++i) {\n                        if (typeof object.spans[i] !== 'object')\n                            throw TypeError('.lightstep.collector.ReportRequest.spans: object expected');\n                        message.spans[i] = $root.lightstep.collector.Span.fromObject(object.spans[i]);\n                    }\n                }\n                if (object.timestampOffsetMicros != null)\n                    if ($util.Long)\n                        (message.timestampOffsetMicros = $util.Long.fromValue(object.timestampOffsetMicros)).unsigned = false;\n                    else if (typeof object.timestampOffsetMicros === 'string')\n                        message.timestampOffsetMicros = parseInt(object.timestampOffsetMicros, 10);\n                    else if (typeof object.timestampOffsetMicros === 'number')\n                        message.timestampOffsetMicros = object.timestampOffsetMicros;\n                    else if (typeof object.timestampOffsetMicros === 'object')\n                        message.timestampOffsetMicros = new $util.LongBits(object.timestampOffsetMicros.low >>> 0, object.timestampOffsetMicros.high >>> 0).toNumber();\n                if (object.internalMetrics != null) {\n                    if (typeof object.internalMetrics !== 'object')\n                        throw TypeError('.lightstep.collector.ReportRequest.internalMetrics: object expected');\n                    message.internalMetrics = $root.lightstep.collector.InternalMetrics.fromObject(object.internalMetrics);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ReportRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.ReportRequest\n             * @static\n             * @param {lightstep.collector.ReportRequest} message ReportRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ReportRequest.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.spans = [];\n                if (options.defaults) {\n                    object.reporter = null;\n                    object.auth = null;\n                    if ($util.Long) {\n                        let long = new $util.Long(0, 0, false);\n                        object.timestampOffsetMicros = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.timestampOffsetMicros = options.longs === String ? '0' : 0;\n                    object.internalMetrics = null;\n                }\n                if (message.reporter != null && message.hasOwnProperty('reporter'))\n                    object.reporter = $root.lightstep.collector.Reporter.toObject(message.reporter, options);\n                if (message.auth != null && message.hasOwnProperty('auth'))\n                    object.auth = $root.lightstep.collector.Auth.toObject(message.auth, options);\n                if (message.spans && message.spans.length) {\n                    object.spans = [];\n                    for (let j = 0; j < message.spans.length; ++j)\n                        object.spans[j] = $root.lightstep.collector.Span.toObject(message.spans[j], options);\n                }\n                if (message.timestampOffsetMicros != null && message.hasOwnProperty('timestampOffsetMicros'))\n                    if (typeof message.timestampOffsetMicros === 'number')\n                        object.timestampOffsetMicros = options.longs === String ? String(message.timestampOffsetMicros) : message.timestampOffsetMicros;\n                    else\n                        object.timestampOffsetMicros = options.longs === String ? $util.Long.prototype.toString.call(message.timestampOffsetMicros) : options.longs === Number ? new $util.LongBits(message.timestampOffsetMicros.low >>> 0, message.timestampOffsetMicros.high >>> 0).toNumber() : message.timestampOffsetMicros;\n                if (message.internalMetrics != null && message.hasOwnProperty('internalMetrics'))\n                    object.internalMetrics = $root.lightstep.collector.InternalMetrics.toObject(message.internalMetrics, options);\n                return object;\n            };\n\n            /**\n             * Converts this ReportRequest to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.ReportRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ReportRequest.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ReportRequest;\n        })();\n\n        collector.Command = (function () {\n\n            /**\n             * Properties of a Command.\n             * @memberof lightstep.collector\n             * @interface ICommand\n             * @property {boolean|null} [disable] Command disable\n             */\n\n            /**\n             * Constructs a new Command.\n             * @memberof lightstep.collector\n             * @classdesc Represents a Command.\n             * @implements ICommand\n             * @constructor\n             * @param {lightstep.collector.ICommand=} [properties] Properties to set\n             */\n            function Command(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Command disable.\n             * @member {boolean} disable\n             * @memberof lightstep.collector.Command\n             * @instance\n             */\n            Command.prototype.disable = false;\n\n            /**\n             * Creates a new Command instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.Command\n             * @static\n             * @param {lightstep.collector.ICommand=} [properties] Properties to set\n             * @returns {lightstep.collector.Command} Command instance\n             */\n            Command.create = function create(properties) {\n                return new Command(properties);\n            };\n\n            /**\n             * Encodes the specified Command message. Does not implicitly {@link lightstep.collector.Command.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.Command\n             * @static\n             * @param {lightstep.collector.ICommand} message Command message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Command.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.disable != null && message.hasOwnProperty('disable'))\n                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.disable);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Command message, length delimited. Does not implicitly {@link lightstep.collector.Command.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.Command\n             * @static\n             * @param {lightstep.collector.ICommand} message Command message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Command.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Command message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.Command\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.Command} Command\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Command.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.Command();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.disable = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Command message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.Command\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.Command} Command\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Command.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Command message.\n             * @function verify\n             * @memberof lightstep.collector.Command\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Command.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.disable != null && message.hasOwnProperty('disable'))\n                    if (typeof message.disable !== 'boolean')\n                        return 'disable: boolean expected';\n                return null;\n            };\n\n            /**\n             * Creates a Command message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.Command\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.Command} Command\n             */\n            Command.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.Command)\n                    return object;\n                let message = new $root.lightstep.collector.Command();\n                if (object.disable != null)\n                    message.disable = Boolean(object.disable);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Command message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.Command\n             * @static\n             * @param {lightstep.collector.Command} message Command\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Command.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults)\n                    object.disable = false;\n                if (message.disable != null && message.hasOwnProperty('disable'))\n                    object.disable = message.disable;\n                return object;\n            };\n\n            /**\n             * Converts this Command to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.Command\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Command.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Command;\n        })();\n\n        collector.ReportResponse = (function () {\n\n            /**\n             * Properties of a ReportResponse.\n             * @memberof lightstep.collector\n             * @interface IReportResponse\n             * @property {Array.<lightstep.collector.ICommand>|null} [commands] ReportResponse commands\n             * @property {google.protobuf.ITimestamp|null} [receiveTimestamp] ReportResponse receiveTimestamp\n             * @property {google.protobuf.ITimestamp|null} [transmitTimestamp] ReportResponse transmitTimestamp\n             * @property {Array.<string>|null} [errors] ReportResponse errors\n             * @property {Array.<string>|null} [warnings] ReportResponse warnings\n             * @property {Array.<string>|null} [infos] ReportResponse infos\n             */\n\n            /**\n             * Constructs a new ReportResponse.\n             * @memberof lightstep.collector\n             * @classdesc Represents a ReportResponse.\n             * @implements IReportResponse\n             * @constructor\n             * @param {lightstep.collector.IReportResponse=} [properties] Properties to set\n             */\n            function ReportResponse(properties) {\n                this.commands = [];\n                this.errors = [];\n                this.warnings = [];\n                this.infos = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ReportResponse commands.\n             * @member {Array.<lightstep.collector.ICommand>} commands\n             * @memberof lightstep.collector.ReportResponse\n             * @instance\n             */\n            ReportResponse.prototype.commands = $util.emptyArray;\n\n            /**\n             * ReportResponse receiveTimestamp.\n             * @member {google.protobuf.ITimestamp|null|undefined} receiveTimestamp\n             * @memberof lightstep.collector.ReportResponse\n             * @instance\n             */\n            ReportResponse.prototype.receiveTimestamp = null;\n\n            /**\n             * ReportResponse transmitTimestamp.\n             * @member {google.protobuf.ITimestamp|null|undefined} transmitTimestamp\n             * @memberof lightstep.collector.ReportResponse\n             * @instance\n             */\n            ReportResponse.prototype.transmitTimestamp = null;\n\n            /**\n             * ReportResponse errors.\n             * @member {Array.<string>} errors\n             * @memberof lightstep.collector.ReportResponse\n             * @instance\n             */\n            ReportResponse.prototype.errors = $util.emptyArray;\n\n            /**\n             * ReportResponse warnings.\n             * @member {Array.<string>} warnings\n             * @memberof lightstep.collector.ReportResponse\n             * @instance\n             */\n            ReportResponse.prototype.warnings = $util.emptyArray;\n\n            /**\n             * ReportResponse infos.\n             * @member {Array.<string>} infos\n             * @memberof lightstep.collector.ReportResponse\n             * @instance\n             */\n            ReportResponse.prototype.infos = $util.emptyArray;\n\n            /**\n             * Creates a new ReportResponse instance using the specified properties.\n             * @function create\n             * @memberof lightstep.collector.ReportResponse\n             * @static\n             * @param {lightstep.collector.IReportResponse=} [properties] Properties to set\n             * @returns {lightstep.collector.ReportResponse} ReportResponse instance\n             */\n            ReportResponse.create = function create(properties) {\n                return new ReportResponse(properties);\n            };\n\n            /**\n             * Encodes the specified ReportResponse message. Does not implicitly {@link lightstep.collector.ReportResponse.verify|verify} messages.\n             * @function encode\n             * @memberof lightstep.collector.ReportResponse\n             * @static\n             * @param {lightstep.collector.IReportResponse} message ReportResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ReportResponse.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.commands != null && message.commands.length)\n                    for (let i = 0; i < message.commands.length; ++i)\n                        $root.lightstep.collector.Command.encode(message.commands[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.receiveTimestamp != null && message.hasOwnProperty('receiveTimestamp'))\n                    $root.google.protobuf.Timestamp.encode(message.receiveTimestamp, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.transmitTimestamp != null && message.hasOwnProperty('transmitTimestamp'))\n                    $root.google.protobuf.Timestamp.encode(message.transmitTimestamp, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.errors != null && message.errors.length)\n                    for (let i = 0; i < message.errors.length; ++i)\n                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.errors[i]);\n                if (message.warnings != null && message.warnings.length)\n                    for (let i = 0; i < message.warnings.length; ++i)\n                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.warnings[i]);\n                if (message.infos != null && message.infos.length)\n                    for (let i = 0; i < message.infos.length; ++i)\n                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.infos[i]);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ReportResponse message, length delimited. Does not implicitly {@link lightstep.collector.ReportResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof lightstep.collector.ReportResponse\n             * @static\n             * @param {lightstep.collector.IReportResponse} message ReportResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ReportResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ReportResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof lightstep.collector.ReportResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {lightstep.collector.ReportResponse} ReportResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ReportResponse.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.lightstep.collector.ReportResponse();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.commands && message.commands.length))\n                            message.commands = [];\n                        message.commands.push($root.lightstep.collector.Command.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.receiveTimestamp = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.transmitTimestamp = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        if (!(message.errors && message.errors.length))\n                            message.errors = [];\n                        message.errors.push(reader.string());\n                        break;\n                    case 5:\n                        if (!(message.warnings && message.warnings.length))\n                            message.warnings = [];\n                        message.warnings.push(reader.string());\n                        break;\n                    case 6:\n                        if (!(message.infos && message.infos.length))\n                            message.infos = [];\n                        message.infos.push(reader.string());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ReportResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof lightstep.collector.ReportResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {lightstep.collector.ReportResponse} ReportResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ReportResponse.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ReportResponse message.\n             * @function verify\n             * @memberof lightstep.collector.ReportResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ReportResponse.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.commands != null && message.hasOwnProperty('commands')) {\n                    if (!Array.isArray(message.commands))\n                        return 'commands: array expected';\n                    for (let i = 0; i < message.commands.length; ++i) {\n                        let error = $root.lightstep.collector.Command.verify(message.commands[i]);\n                        if (error)\n                            return 'commands.' + error;\n                    }\n                }\n                if (message.receiveTimestamp != null && message.hasOwnProperty('receiveTimestamp')) {\n                    let error = $root.google.protobuf.Timestamp.verify(message.receiveTimestamp);\n                    if (error)\n                        return 'receiveTimestamp.' + error;\n                }\n                if (message.transmitTimestamp != null && message.hasOwnProperty('transmitTimestamp')) {\n                    let error = $root.google.protobuf.Timestamp.verify(message.transmitTimestamp);\n                    if (error)\n                        return 'transmitTimestamp.' + error;\n                }\n                if (message.errors != null && message.hasOwnProperty('errors')) {\n                    if (!Array.isArray(message.errors))\n                        return 'errors: array expected';\n                    for (let i = 0; i < message.errors.length; ++i)\n                        if (!$util.isString(message.errors[i]))\n                            return 'errors: string[] expected';\n                }\n                if (message.warnings != null && message.hasOwnProperty('warnings')) {\n                    if (!Array.isArray(message.warnings))\n                        return 'warnings: array expected';\n                    for (let i = 0; i < message.warnings.length; ++i)\n                        if (!$util.isString(message.warnings[i]))\n                            return 'warnings: string[] expected';\n                }\n                if (message.infos != null && message.hasOwnProperty('infos')) {\n                    if (!Array.isArray(message.infos))\n                        return 'infos: array expected';\n                    for (let i = 0; i < message.infos.length; ++i)\n                        if (!$util.isString(message.infos[i]))\n                            return 'infos: string[] expected';\n                }\n                return null;\n            };\n\n            /**\n             * Creates a ReportResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof lightstep.collector.ReportResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {lightstep.collector.ReportResponse} ReportResponse\n             */\n            ReportResponse.fromObject = function fromObject(object) {\n                if (object instanceof $root.lightstep.collector.ReportResponse)\n                    return object;\n                let message = new $root.lightstep.collector.ReportResponse();\n                if (object.commands) {\n                    if (!Array.isArray(object.commands))\n                        throw TypeError('.lightstep.collector.ReportResponse.commands: array expected');\n                    message.commands = [];\n                    for (let i = 0; i < object.commands.length; ++i) {\n                        if (typeof object.commands[i] !== 'object')\n                            throw TypeError('.lightstep.collector.ReportResponse.commands: object expected');\n                        message.commands[i] = $root.lightstep.collector.Command.fromObject(object.commands[i]);\n                    }\n                }\n                if (object.receiveTimestamp != null) {\n                    if (typeof object.receiveTimestamp !== 'object')\n                        throw TypeError('.lightstep.collector.ReportResponse.receiveTimestamp: object expected');\n                    message.receiveTimestamp = $root.google.protobuf.Timestamp.fromObject(object.receiveTimestamp);\n                }\n                if (object.transmitTimestamp != null) {\n                    if (typeof object.transmitTimestamp !== 'object')\n                        throw TypeError('.lightstep.collector.ReportResponse.transmitTimestamp: object expected');\n                    message.transmitTimestamp = $root.google.protobuf.Timestamp.fromObject(object.transmitTimestamp);\n                }\n                if (object.errors) {\n                    if (!Array.isArray(object.errors))\n                        throw TypeError('.lightstep.collector.ReportResponse.errors: array expected');\n                    message.errors = [];\n                    for (let i = 0; i < object.errors.length; ++i)\n                        message.errors[i] = String(object.errors[i]);\n                }\n                if (object.warnings) {\n                    if (!Array.isArray(object.warnings))\n                        throw TypeError('.lightstep.collector.ReportResponse.warnings: array expected');\n                    message.warnings = [];\n                    for (let i = 0; i < object.warnings.length; ++i)\n                        message.warnings[i] = String(object.warnings[i]);\n                }\n                if (object.infos) {\n                    if (!Array.isArray(object.infos))\n                        throw TypeError('.lightstep.collector.ReportResponse.infos: array expected');\n                    message.infos = [];\n                    for (let i = 0; i < object.infos.length; ++i)\n                        message.infos[i] = String(object.infos[i]);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ReportResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof lightstep.collector.ReportResponse\n             * @static\n             * @param {lightstep.collector.ReportResponse} message ReportResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ReportResponse.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults) {\n                    object.commands = [];\n                    object.errors = [];\n                    object.warnings = [];\n                    object.infos = [];\n                }\n                if (options.defaults) {\n                    object.receiveTimestamp = null;\n                    object.transmitTimestamp = null;\n                }\n                if (message.commands && message.commands.length) {\n                    object.commands = [];\n                    for (let j = 0; j < message.commands.length; ++j)\n                        object.commands[j] = $root.lightstep.collector.Command.toObject(message.commands[j], options);\n                }\n                if (message.receiveTimestamp != null && message.hasOwnProperty('receiveTimestamp'))\n                    object.receiveTimestamp = $root.google.protobuf.Timestamp.toObject(message.receiveTimestamp, options);\n                if (message.transmitTimestamp != null && message.hasOwnProperty('transmitTimestamp'))\n                    object.transmitTimestamp = $root.google.protobuf.Timestamp.toObject(message.transmitTimestamp, options);\n                if (message.errors && message.errors.length) {\n                    object.errors = [];\n                    for (let j = 0; j < message.errors.length; ++j)\n                        object.errors[j] = message.errors[j];\n                }\n                if (message.warnings && message.warnings.length) {\n                    object.warnings = [];\n                    for (let j = 0; j < message.warnings.length; ++j)\n                        object.warnings[j] = message.warnings[j];\n                }\n                if (message.infos && message.infos.length) {\n                    object.infos = [];\n                    for (let j = 0; j < message.infos.length; ++j)\n                        object.infos[j] = message.infos[j];\n                }\n                return object;\n            };\n\n            /**\n             * Converts this ReportResponse to JSON.\n             * @function toJSON\n             * @memberof lightstep.collector.ReportResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ReportResponse.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ReportResponse;\n        })();\n\n        collector.CollectorService = (function () {\n\n            /**\n             * Constructs a new CollectorService service.\n             * @memberof lightstep.collector\n             * @classdesc Represents a CollectorService\n             * @extends $protobuf.rpc.Service\n             * @constructor\n             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n             */\n            function CollectorService(rpcImpl, requestDelimited, responseDelimited) {\n                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);\n            }\n\n            (CollectorService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CollectorService;\n\n            /**\n             * Creates new CollectorService service using the specified rpc implementation.\n             * @function create\n             * @memberof lightstep.collector.CollectorService\n             * @static\n             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n             * @returns {CollectorService} RPC service. Useful where requests and/or responses are streamed.\n             */\n            CollectorService.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n                return new this(rpcImpl, requestDelimited, responseDelimited);\n            };\n\n            /**\n             * Callback as used by {@link lightstep.collector.CollectorService#report}.\n             * @memberof lightstep.collector.CollectorService\n             * @typedef ReportCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {lightstep.collector.ReportResponse} [response] ReportResponse\n             */\n\n            /**\n             * Calls Report.\n             * @function report\n             * @memberof lightstep.collector.CollectorService\n             * @instance\n             * @param {lightstep.collector.IReportRequest} request ReportRequest message or plain object\n             * @param {lightstep.collector.CollectorService.ReportCallback} callback Node-style callback called with the error, if any, and ReportResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n            Object.defineProperty(CollectorService.prototype.report = function report(request, callback) {\n                return this.rpcCall(report, $root.lightstep.collector.ReportRequest, $root.lightstep.collector.ReportResponse, request, callback);\n            }, 'name', { value: 'Report' });\n\n            /**\n             * Calls Report.\n             * @function report\n             * @memberof lightstep.collector.CollectorService\n             * @instance\n             * @param {lightstep.collector.IReportRequest} request ReportRequest message or plain object\n             * @returns {Promise<lightstep.collector.ReportResponse>} Promise\n             * @variation 2\n             */\n\n            return CollectorService;\n        })();\n\n        return collector;\n    })();\n\n    return lightstep;\n})();\n\nexport const google = $root.google = (() => {\n\n    /**\n     * Namespace google.\n     * @exports google\n     * @namespace\n     */\n    const google = {};\n\n    google.protobuf = (function () {\n\n        /**\n         * Namespace protobuf.\n         * @memberof google\n         * @namespace\n         */\n        const protobuf = {};\n\n        protobuf.Timestamp = (function () {\n\n            /**\n             * Properties of a Timestamp.\n             * @memberof google.protobuf\n             * @interface ITimestamp\n             * @property {number|Long|null} [seconds] Timestamp seconds\n             * @property {number|null} [nanos] Timestamp nanos\n             */\n\n            /**\n             * Constructs a new Timestamp.\n             * @memberof google.protobuf\n             * @classdesc Represents a Timestamp.\n             * @implements ITimestamp\n             * @constructor\n             * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n             */\n            function Timestamp(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Timestamp seconds.\n             * @member {number|Long} seconds\n             * @memberof google.protobuf.Timestamp\n             * @instance\n             */\n            Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n            /**\n             * Timestamp nanos.\n             * @member {number} nanos\n             * @memberof google.protobuf.Timestamp\n             * @instance\n             */\n            Timestamp.prototype.nanos = 0;\n\n            /**\n             * Creates a new Timestamp instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n             * @returns {google.protobuf.Timestamp} Timestamp instance\n             */\n            Timestamp.create = function create(properties) {\n                return new Timestamp(properties);\n            };\n\n            /**\n             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Timestamp.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.seconds != null && message.hasOwnProperty('seconds'))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);\n                if (message.nanos != null && message.hasOwnProperty('nanos'))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Timestamp.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Timestamp message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.Timestamp} Timestamp\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Timestamp.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.seconds = reader.int64();\n                        break;\n                    case 2:\n                        message.nanos = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Timestamp message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.Timestamp} Timestamp\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Timestamp.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Timestamp message.\n             * @function verify\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Timestamp.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.seconds != null && message.hasOwnProperty('seconds'))\n                    if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))\n                        return 'seconds: integer|Long expected';\n                if (message.nanos != null && message.hasOwnProperty('nanos'))\n                    if (!$util.isInteger(message.nanos))\n                        return 'nanos: integer expected';\n                return null;\n            };\n\n            /**\n             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.Timestamp} Timestamp\n             */\n            Timestamp.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.Timestamp)\n                    return object;\n                let message = new $root.google.protobuf.Timestamp();\n                if (object.seconds != null)\n                    if ($util.Long)\n                        (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;\n                    else if (typeof object.seconds === 'string')\n                        message.seconds = parseInt(object.seconds, 10);\n                    else if (typeof object.seconds === 'number')\n                        message.seconds = object.seconds;\n                    else if (typeof object.seconds === 'object')\n                        message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();\n                if (object.nanos != null)\n                    message.nanos = object.nanos | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.Timestamp} message Timestamp\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Timestamp.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        let long = new $util.Long(0, 0, false);\n                        object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.seconds = options.longs === String ? '0' : 0;\n                    object.nanos = 0;\n                }\n                if (message.seconds != null && message.hasOwnProperty('seconds'))\n                    if (typeof message.seconds === 'number')\n                        object.seconds = options.longs === String ? String(message.seconds) : message.seconds;\n                    else\n                        object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;\n                if (message.nanos != null && message.hasOwnProperty('nanos'))\n                    object.nanos = message.nanos;\n                return object;\n            };\n\n            /**\n             * Converts this Timestamp to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.Timestamp\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Timestamp.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Timestamp;\n        })();\n\n        protobuf.FileDescriptorSet = (function () {\n\n            /**\n             * Properties of a FileDescriptorSet.\n             * @memberof google.protobuf\n             * @interface IFileDescriptorSet\n             * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file\n             */\n\n            /**\n             * Constructs a new FileDescriptorSet.\n             * @memberof google.protobuf\n             * @classdesc Represents a FileDescriptorSet.\n             * @implements IFileDescriptorSet\n             * @constructor\n             * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set\n             */\n            function FileDescriptorSet(properties) {\n                this.file = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FileDescriptorSet file.\n             * @member {Array.<google.protobuf.IFileDescriptorProto>} file\n             * @memberof google.protobuf.FileDescriptorSet\n             * @instance\n             */\n            FileDescriptorSet.prototype.file = $util.emptyArray;\n\n            /**\n             * Creates a new FileDescriptorSet instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.FileDescriptorSet\n             * @static\n             * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set\n             * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance\n             */\n            FileDescriptorSet.create = function create(properties) {\n                return new FileDescriptorSet(properties);\n            };\n\n            /**\n             * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.FileDescriptorSet\n             * @static\n             * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FileDescriptorSet.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.file != null && message.file.length)\n                    for (let i = 0; i < message.file.length; ++i)\n                        $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.FileDescriptorSet\n             * @static\n             * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FileDescriptorSet message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.FileDescriptorSet\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FileDescriptorSet.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.file && message.file.length))\n                            message.file = [];\n                        message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.FileDescriptorSet\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FileDescriptorSet message.\n             * @function verify\n             * @memberof google.protobuf.FileDescriptorSet\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FileDescriptorSet.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.file != null && message.hasOwnProperty('file')) {\n                    if (!Array.isArray(message.file))\n                        return 'file: array expected';\n                    for (let i = 0; i < message.file.length; ++i) {\n                        let error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);\n                        if (error)\n                            return 'file.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.FileDescriptorSet\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet\n             */\n            FileDescriptorSet.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.FileDescriptorSet)\n                    return object;\n                let message = new $root.google.protobuf.FileDescriptorSet();\n                if (object.file) {\n                    if (!Array.isArray(object.file))\n                        throw TypeError('.google.protobuf.FileDescriptorSet.file: array expected');\n                    message.file = [];\n                    for (let i = 0; i < object.file.length; ++i) {\n                        if (typeof object.file[i] !== 'object')\n                            throw TypeError('.google.protobuf.FileDescriptorSet.file: object expected');\n                        message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.FileDescriptorSet\n             * @static\n             * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FileDescriptorSet.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.file = [];\n                if (message.file && message.file.length) {\n                    object.file = [];\n                    for (let j = 0; j < message.file.length; ++j)\n                        object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this FileDescriptorSet to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.FileDescriptorSet\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FileDescriptorSet.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return FileDescriptorSet;\n        })();\n\n        protobuf.FileDescriptorProto = (function () {\n\n            /**\n             * Properties of a FileDescriptorProto.\n             * @memberof google.protobuf\n             * @interface IFileDescriptorProto\n             * @property {string|null} [name] FileDescriptorProto name\n             * @property {string|null} [\"package\"] FileDescriptorProto package\n             * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency\n             * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency\n             * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency\n             * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType\n             * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType\n             * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service\n             * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension\n             * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options\n             * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo\n             * @property {string|null} [syntax] FileDescriptorProto syntax\n             */\n\n            /**\n             * Constructs a new FileDescriptorProto.\n             * @memberof google.protobuf\n             * @classdesc Represents a FileDescriptorProto.\n             * @implements IFileDescriptorProto\n             * @constructor\n             * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set\n             */\n            function FileDescriptorProto(properties) {\n                this.dependency = [];\n                this.publicDependency = [];\n                this.weakDependency = [];\n                this.messageType = [];\n                this.enumType = [];\n                this.service = [];\n                this.extension = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FileDescriptorProto name.\n             * @member {string} name\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.name = '';\n\n            /**\n             * FileDescriptorProto package.\n             * @member {string} package\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype['package'] = '';\n\n            /**\n             * FileDescriptorProto dependency.\n             * @member {Array.<string>} dependency\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.dependency = $util.emptyArray;\n\n            /**\n             * FileDescriptorProto publicDependency.\n             * @member {Array.<number>} publicDependency\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.publicDependency = $util.emptyArray;\n\n            /**\n             * FileDescriptorProto weakDependency.\n             * @member {Array.<number>} weakDependency\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.weakDependency = $util.emptyArray;\n\n            /**\n             * FileDescriptorProto messageType.\n             * @member {Array.<google.protobuf.IDescriptorProto>} messageType\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.messageType = $util.emptyArray;\n\n            /**\n             * FileDescriptorProto enumType.\n             * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.enumType = $util.emptyArray;\n\n            /**\n             * FileDescriptorProto service.\n             * @member {Array.<google.protobuf.IServiceDescriptorProto>} service\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.service = $util.emptyArray;\n\n            /**\n             * FileDescriptorProto extension.\n             * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.extension = $util.emptyArray;\n\n            /**\n             * FileDescriptorProto options.\n             * @member {google.protobuf.IFileOptions|null|undefined} options\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.options = null;\n\n            /**\n             * FileDescriptorProto sourceCodeInfo.\n             * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.sourceCodeInfo = null;\n\n            /**\n             * FileDescriptorProto syntax.\n             * @member {string} syntax\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             */\n            FileDescriptorProto.prototype.syntax = '';\n\n            /**\n             * Creates a new FileDescriptorProto instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.FileDescriptorProto\n             * @static\n             * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set\n             * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance\n             */\n            FileDescriptorProto.create = function create(properties) {\n                return new FileDescriptorProto(properties);\n            };\n\n            /**\n             * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.FileDescriptorProto\n             * @static\n             * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FileDescriptorProto.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty('name'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message['package'] != null && message.hasOwnProperty('package'))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message['package']);\n                if (message.dependency != null && message.dependency.length)\n                    for (let i = 0; i < message.dependency.length; ++i)\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);\n                if (message.messageType != null && message.messageType.length)\n                    for (let i = 0; i < message.messageType.length; ++i)\n                        $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.enumType != null && message.enumType.length)\n                    for (let i = 0; i < message.enumType.length; ++i)\n                        $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.service != null && message.service.length)\n                    for (let i = 0; i < message.service.length; ++i)\n                        $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.extension != null && message.extension.length)\n                    for (let i = 0; i < message.extension.length; ++i)\n                        $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.options != null && message.hasOwnProperty('options'))\n                    $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.sourceCodeInfo != null && message.hasOwnProperty('sourceCodeInfo'))\n                    $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.publicDependency != null && message.publicDependency.length)\n                    for (let i = 0; i < message.publicDependency.length; ++i)\n                        writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);\n                if (message.weakDependency != null && message.weakDependency.length)\n                    for (let i = 0; i < message.weakDependency.length; ++i)\n                        writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);\n                if (message.syntax != null && message.hasOwnProperty('syntax'))\n                    writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.FileDescriptorProto\n             * @static\n             * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FileDescriptorProto message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.FileDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FileDescriptorProto.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        message['package'] = reader.string();\n                        break;\n                    case 3:\n                        if (!(message.dependency && message.dependency.length))\n                            message.dependency = [];\n                        message.dependency.push(reader.string());\n                        break;\n                    case 10:\n                        if (!(message.publicDependency && message.publicDependency.length))\n                            message.publicDependency = [];\n                        if ((tag & 7) === 2) {\n                            let end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.publicDependency.push(reader.int32());\n                        } else\n                            message.publicDependency.push(reader.int32());\n                        break;\n                    case 11:\n                        if (!(message.weakDependency && message.weakDependency.length))\n                            message.weakDependency = [];\n                        if ((tag & 7) === 2) {\n                            let end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.weakDependency.push(reader.int32());\n                        } else\n                            message.weakDependency.push(reader.int32());\n                        break;\n                    case 4:\n                        if (!(message.messageType && message.messageType.length))\n                            message.messageType = [];\n                        message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 5:\n                        if (!(message.enumType && message.enumType.length))\n                            message.enumType = [];\n                        message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 6:\n                        if (!(message.service && message.service.length))\n                            message.service = [];\n                        message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        if (!(message.extension && message.extension.length))\n                            message.extension = [];\n                        message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 8:\n                        message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());\n                        break;\n                    case 9:\n                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());\n                        break;\n                    case 12:\n                        message.syntax = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.FileDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FileDescriptorProto message.\n             * @function verify\n             * @memberof google.protobuf.FileDescriptorProto\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FileDescriptorProto.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.name != null && message.hasOwnProperty('name'))\n                    if (!$util.isString(message.name))\n                        return 'name: string expected';\n                if (message['package'] != null && message.hasOwnProperty('package'))\n                    if (!$util.isString(message['package']))\n                        return 'package: string expected';\n                if (message.dependency != null && message.hasOwnProperty('dependency')) {\n                    if (!Array.isArray(message.dependency))\n                        return 'dependency: array expected';\n                    for (let i = 0; i < message.dependency.length; ++i)\n                        if (!$util.isString(message.dependency[i]))\n                            return 'dependency: string[] expected';\n                }\n                if (message.publicDependency != null && message.hasOwnProperty('publicDependency')) {\n                    if (!Array.isArray(message.publicDependency))\n                        return 'publicDependency: array expected';\n                    for (let i = 0; i < message.publicDependency.length; ++i)\n                        if (!$util.isInteger(message.publicDependency[i]))\n                            return 'publicDependency: integer[] expected';\n                }\n                if (message.weakDependency != null && message.hasOwnProperty('weakDependency')) {\n                    if (!Array.isArray(message.weakDependency))\n                        return 'weakDependency: array expected';\n                    for (let i = 0; i < message.weakDependency.length; ++i)\n                        if (!$util.isInteger(message.weakDependency[i]))\n                            return 'weakDependency: integer[] expected';\n                }\n                if (message.messageType != null && message.hasOwnProperty('messageType')) {\n                    if (!Array.isArray(message.messageType))\n                        return 'messageType: array expected';\n                    for (let i = 0; i < message.messageType.length; ++i) {\n                        let error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);\n                        if (error)\n                            return 'messageType.' + error;\n                    }\n                }\n                if (message.enumType != null && message.hasOwnProperty('enumType')) {\n                    if (!Array.isArray(message.enumType))\n                        return 'enumType: array expected';\n                    for (let i = 0; i < message.enumType.length; ++i) {\n                        let error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);\n                        if (error)\n                            return 'enumType.' + error;\n                    }\n                }\n                if (message.service != null && message.hasOwnProperty('service')) {\n                    if (!Array.isArray(message.service))\n                        return 'service: array expected';\n                    for (let i = 0; i < message.service.length; ++i) {\n                        let error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);\n                        if (error)\n                            return 'service.' + error;\n                    }\n                }\n                if (message.extension != null && message.hasOwnProperty('extension')) {\n                    if (!Array.isArray(message.extension))\n                        return 'extension: array expected';\n                    for (let i = 0; i < message.extension.length; ++i) {\n                        let error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);\n                        if (error)\n                            return 'extension.' + error;\n                    }\n                }\n                if (message.options != null && message.hasOwnProperty('options')) {\n                    let error = $root.google.protobuf.FileOptions.verify(message.options);\n                    if (error)\n                        return 'options.' + error;\n                }\n                if (message.sourceCodeInfo != null && message.hasOwnProperty('sourceCodeInfo')) {\n                    let error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);\n                    if (error)\n                        return 'sourceCodeInfo.' + error;\n                }\n                if (message.syntax != null && message.hasOwnProperty('syntax'))\n                    if (!$util.isString(message.syntax))\n                        return 'syntax: string expected';\n                return null;\n            };\n\n            /**\n             * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.FileDescriptorProto\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto\n             */\n            FileDescriptorProto.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.FileDescriptorProto)\n                    return object;\n                let message = new $root.google.protobuf.FileDescriptorProto();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object['package'] != null)\n                    message['package'] = String(object['package']);\n                if (object.dependency) {\n                    if (!Array.isArray(object.dependency))\n                        throw TypeError('.google.protobuf.FileDescriptorProto.dependency: array expected');\n                    message.dependency = [];\n                    for (let i = 0; i < object.dependency.length; ++i)\n                        message.dependency[i] = String(object.dependency[i]);\n                }\n                if (object.publicDependency) {\n                    if (!Array.isArray(object.publicDependency))\n                        throw TypeError('.google.protobuf.FileDescriptorProto.publicDependency: array expected');\n                    message.publicDependency = [];\n                    for (let i = 0; i < object.publicDependency.length; ++i)\n                        message.publicDependency[i] = object.publicDependency[i] | 0;\n                }\n                if (object.weakDependency) {\n                    if (!Array.isArray(object.weakDependency))\n                        throw TypeError('.google.protobuf.FileDescriptorProto.weakDependency: array expected');\n                    message.weakDependency = [];\n                    for (let i = 0; i < object.weakDependency.length; ++i)\n                        message.weakDependency[i] = object.weakDependency[i] | 0;\n                }\n                if (object.messageType) {\n                    if (!Array.isArray(object.messageType))\n                        throw TypeError('.google.protobuf.FileDescriptorProto.messageType: array expected');\n                    message.messageType = [];\n                    for (let i = 0; i < object.messageType.length; ++i) {\n                        if (typeof object.messageType[i] !== 'object')\n                            throw TypeError('.google.protobuf.FileDescriptorProto.messageType: object expected');\n                        message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);\n                    }\n                }\n                if (object.enumType) {\n                    if (!Array.isArray(object.enumType))\n                        throw TypeError('.google.protobuf.FileDescriptorProto.enumType: array expected');\n                    message.enumType = [];\n                    for (let i = 0; i < object.enumType.length; ++i) {\n                        if (typeof object.enumType[i] !== 'object')\n                            throw TypeError('.google.protobuf.FileDescriptorProto.enumType: object expected');\n                        message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);\n                    }\n                }\n                if (object.service) {\n                    if (!Array.isArray(object.service))\n                        throw TypeError('.google.protobuf.FileDescriptorProto.service: array expected');\n                    message.service = [];\n                    for (let i = 0; i < object.service.length; ++i) {\n                        if (typeof object.service[i] !== 'object')\n                            throw TypeError('.google.protobuf.FileDescriptorProto.service: object expected');\n                        message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);\n                    }\n                }\n                if (object.extension) {\n                    if (!Array.isArray(object.extension))\n                        throw TypeError('.google.protobuf.FileDescriptorProto.extension: array expected');\n                    message.extension = [];\n                    for (let i = 0; i < object.extension.length; ++i) {\n                        if (typeof object.extension[i] !== 'object')\n                            throw TypeError('.google.protobuf.FileDescriptorProto.extension: object expected');\n                        message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);\n                    }\n                }\n                if (object.options != null) {\n                    if (typeof object.options !== 'object')\n                        throw TypeError('.google.protobuf.FileDescriptorProto.options: object expected');\n                    message.options = $root.google.protobuf.FileOptions.fromObject(object.options);\n                }\n                if (object.sourceCodeInfo != null) {\n                    if (typeof object.sourceCodeInfo !== 'object')\n                        throw TypeError('.google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected');\n                    message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);\n                }\n                if (object.syntax != null)\n                    message.syntax = String(object.syntax);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.FileDescriptorProto\n             * @static\n             * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FileDescriptorProto.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults) {\n                    object.dependency = [];\n                    object.messageType = [];\n                    object.enumType = [];\n                    object.service = [];\n                    object.extension = [];\n                    object.publicDependency = [];\n                    object.weakDependency = [];\n                }\n                if (options.defaults) {\n                    object.name = '';\n                    object['package'] = '';\n                    object.options = null;\n                    object.sourceCodeInfo = null;\n                    object.syntax = '';\n                }\n                if (message.name != null && message.hasOwnProperty('name'))\n                    object.name = message.name;\n                if (message['package'] != null && message.hasOwnProperty('package'))\n                    object['package'] = message['package'];\n                if (message.dependency && message.dependency.length) {\n                    object.dependency = [];\n                    for (let j = 0; j < message.dependency.length; ++j)\n                        object.dependency[j] = message.dependency[j];\n                }\n                if (message.messageType && message.messageType.length) {\n                    object.messageType = [];\n                    for (let j = 0; j < message.messageType.length; ++j)\n                        object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);\n                }\n                if (message.enumType && message.enumType.length) {\n                    object.enumType = [];\n                    for (let j = 0; j < message.enumType.length; ++j)\n                        object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);\n                }\n                if (message.service && message.service.length) {\n                    object.service = [];\n                    for (let j = 0; j < message.service.length; ++j)\n                        object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);\n                }\n                if (message.extension && message.extension.length) {\n                    object.extension = [];\n                    for (let j = 0; j < message.extension.length; ++j)\n                        object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);\n                }\n                if (message.options != null && message.hasOwnProperty('options'))\n                    object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);\n                if (message.sourceCodeInfo != null && message.hasOwnProperty('sourceCodeInfo'))\n                    object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);\n                if (message.publicDependency && message.publicDependency.length) {\n                    object.publicDependency = [];\n                    for (let j = 0; j < message.publicDependency.length; ++j)\n                        object.publicDependency[j] = message.publicDependency[j];\n                }\n                if (message.weakDependency && message.weakDependency.length) {\n                    object.weakDependency = [];\n                    for (let j = 0; j < message.weakDependency.length; ++j)\n                        object.weakDependency[j] = message.weakDependency[j];\n                }\n                if (message.syntax != null && message.hasOwnProperty('syntax'))\n                    object.syntax = message.syntax;\n                return object;\n            };\n\n            /**\n             * Converts this FileDescriptorProto to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.FileDescriptorProto\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FileDescriptorProto.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return FileDescriptorProto;\n        })();\n\n        protobuf.DescriptorProto = (function () {\n\n            /**\n             * Properties of a DescriptorProto.\n             * @memberof google.protobuf\n             * @interface IDescriptorProto\n             * @property {string|null} [name] DescriptorProto name\n             * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field\n             * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension\n             * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType\n             * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType\n             * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange\n             * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl\n             * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options\n             * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange\n             * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName\n             */\n\n            /**\n             * Constructs a new DescriptorProto.\n             * @memberof google.protobuf\n             * @classdesc Represents a DescriptorProto.\n             * @implements IDescriptorProto\n             * @constructor\n             * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set\n             */\n            function DescriptorProto(properties) {\n                this.field = [];\n                this.extension = [];\n                this.nestedType = [];\n                this.enumType = [];\n                this.extensionRange = [];\n                this.oneofDecl = [];\n                this.reservedRange = [];\n                this.reservedName = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * DescriptorProto name.\n             * @member {string} name\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             */\n            DescriptorProto.prototype.name = '';\n\n            /**\n             * DescriptorProto field.\n             * @member {Array.<google.protobuf.IFieldDescriptorProto>} field\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             */\n            DescriptorProto.prototype.field = $util.emptyArray;\n\n            /**\n             * DescriptorProto extension.\n             * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             */\n            DescriptorProto.prototype.extension = $util.emptyArray;\n\n            /**\n             * DescriptorProto nestedType.\n             * @member {Array.<google.protobuf.IDescriptorProto>} nestedType\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             */\n            DescriptorProto.prototype.nestedType = $util.emptyArray;\n\n            /**\n             * DescriptorProto enumType.\n             * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             */\n            DescriptorProto.prototype.enumType = $util.emptyArray;\n\n            /**\n             * DescriptorProto extensionRange.\n             * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             */\n            DescriptorProto.prototype.extensionRange = $util.emptyArray;\n\n            /**\n             * DescriptorProto oneofDecl.\n             * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             */\n            DescriptorProto.prototype.oneofDecl = $util.emptyArray;\n\n            /**\n             * DescriptorProto options.\n             * @member {google.protobuf.IMessageOptions|null|undefined} options\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             */\n            DescriptorProto.prototype.options = null;\n\n            /**\n             * DescriptorProto reservedRange.\n             * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             */\n            DescriptorProto.prototype.reservedRange = $util.emptyArray;\n\n            /**\n             * DescriptorProto reservedName.\n             * @member {Array.<string>} reservedName\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             */\n            DescriptorProto.prototype.reservedName = $util.emptyArray;\n\n            /**\n             * Creates a new DescriptorProto instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.DescriptorProto\n             * @static\n             * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set\n             * @returns {google.protobuf.DescriptorProto} DescriptorProto instance\n             */\n            DescriptorProto.create = function create(properties) {\n                return new DescriptorProto(properties);\n            };\n\n            /**\n             * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.DescriptorProto\n             * @static\n             * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            DescriptorProto.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty('name'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.field != null && message.field.length)\n                    for (let i = 0; i < message.field.length; ++i)\n                        $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.nestedType != null && message.nestedType.length)\n                    for (let i = 0; i < message.nestedType.length; ++i)\n                        $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.enumType != null && message.enumType.length)\n                    for (let i = 0; i < message.enumType.length; ++i)\n                        $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.extensionRange != null && message.extensionRange.length)\n                    for (let i = 0; i < message.extensionRange.length; ++i)\n                        $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.extension != null && message.extension.length)\n                    for (let i = 0; i < message.extension.length; ++i)\n                        $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.options != null && message.hasOwnProperty('options'))\n                    $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.oneofDecl != null && message.oneofDecl.length)\n                    for (let i = 0; i < message.oneofDecl.length; ++i)\n                        $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.reservedRange != null && message.reservedRange.length)\n                    for (let i = 0; i < message.reservedRange.length; ++i)\n                        $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.reservedName != null && message.reservedName.length)\n                    for (let i = 0; i < message.reservedName.length; ++i)\n                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.DescriptorProto\n             * @static\n             * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a DescriptorProto message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.DescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.DescriptorProto} DescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            DescriptorProto.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        if (!(message.field && message.field.length))\n                            message.field = [];\n                        message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 6:\n                        if (!(message.extension && message.extension.length))\n                            message.extension = [];\n                        message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        if (!(message.nestedType && message.nestedType.length))\n                            message.nestedType = [];\n                        message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 4:\n                        if (!(message.enumType && message.enumType.length))\n                            message.enumType = [];\n                        message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 5:\n                        if (!(message.extensionRange && message.extensionRange.length))\n                            message.extensionRange = [];\n                        message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));\n                        break;\n                    case 8:\n                        if (!(message.oneofDecl && message.oneofDecl.length))\n                            message.oneofDecl = [];\n                        message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());\n                        break;\n                    case 9:\n                        if (!(message.reservedRange && message.reservedRange.length))\n                            message.reservedRange = [];\n                        message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));\n                        break;\n                    case 10:\n                        if (!(message.reservedName && message.reservedName.length))\n                            message.reservedName = [];\n                        message.reservedName.push(reader.string());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.DescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.DescriptorProto} DescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            DescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a DescriptorProto message.\n             * @function verify\n             * @memberof google.protobuf.DescriptorProto\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            DescriptorProto.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.name != null && message.hasOwnProperty('name'))\n                    if (!$util.isString(message.name))\n                        return 'name: string expected';\n                if (message.field != null && message.hasOwnProperty('field')) {\n                    if (!Array.isArray(message.field))\n                        return 'field: array expected';\n                    for (let i = 0; i < message.field.length; ++i) {\n                        let error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);\n                        if (error)\n                            return 'field.' + error;\n                    }\n                }\n                if (message.extension != null && message.hasOwnProperty('extension')) {\n                    if (!Array.isArray(message.extension))\n                        return 'extension: array expected';\n                    for (let i = 0; i < message.extension.length; ++i) {\n                        let error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);\n                        if (error)\n                            return 'extension.' + error;\n                    }\n                }\n                if (message.nestedType != null && message.hasOwnProperty('nestedType')) {\n                    if (!Array.isArray(message.nestedType))\n                        return 'nestedType: array expected';\n                    for (let i = 0; i < message.nestedType.length; ++i) {\n                        let error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);\n                        if (error)\n                            return 'nestedType.' + error;\n                    }\n                }\n                if (message.enumType != null && message.hasOwnProperty('enumType')) {\n                    if (!Array.isArray(message.enumType))\n                        return 'enumType: array expected';\n                    for (let i = 0; i < message.enumType.length; ++i) {\n                        let error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);\n                        if (error)\n                            return 'enumType.' + error;\n                    }\n                }\n                if (message.extensionRange != null && message.hasOwnProperty('extensionRange')) {\n                    if (!Array.isArray(message.extensionRange))\n                        return 'extensionRange: array expected';\n                    for (let i = 0; i < message.extensionRange.length; ++i) {\n                        let error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);\n                        if (error)\n                            return 'extensionRange.' + error;\n                    }\n                }\n                if (message.oneofDecl != null && message.hasOwnProperty('oneofDecl')) {\n                    if (!Array.isArray(message.oneofDecl))\n                        return 'oneofDecl: array expected';\n                    for (let i = 0; i < message.oneofDecl.length; ++i) {\n                        let error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);\n                        if (error)\n                            return 'oneofDecl.' + error;\n                    }\n                }\n                if (message.options != null && message.hasOwnProperty('options')) {\n                    let error = $root.google.protobuf.MessageOptions.verify(message.options);\n                    if (error)\n                        return 'options.' + error;\n                }\n                if (message.reservedRange != null && message.hasOwnProperty('reservedRange')) {\n                    if (!Array.isArray(message.reservedRange))\n                        return 'reservedRange: array expected';\n                    for (let i = 0; i < message.reservedRange.length; ++i) {\n                        let error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);\n                        if (error)\n                            return 'reservedRange.' + error;\n                    }\n                }\n                if (message.reservedName != null && message.hasOwnProperty('reservedName')) {\n                    if (!Array.isArray(message.reservedName))\n                        return 'reservedName: array expected';\n                    for (let i = 0; i < message.reservedName.length; ++i)\n                        if (!$util.isString(message.reservedName[i]))\n                            return 'reservedName: string[] expected';\n                }\n                return null;\n            };\n\n            /**\n             * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.DescriptorProto\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.DescriptorProto} DescriptorProto\n             */\n            DescriptorProto.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.DescriptorProto)\n                    return object;\n                let message = new $root.google.protobuf.DescriptorProto();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.field) {\n                    if (!Array.isArray(object.field))\n                        throw TypeError('.google.protobuf.DescriptorProto.field: array expected');\n                    message.field = [];\n                    for (let i = 0; i < object.field.length; ++i) {\n                        if (typeof object.field[i] !== 'object')\n                            throw TypeError('.google.protobuf.DescriptorProto.field: object expected');\n                        message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);\n                    }\n                }\n                if (object.extension) {\n                    if (!Array.isArray(object.extension))\n                        throw TypeError('.google.protobuf.DescriptorProto.extension: array expected');\n                    message.extension = [];\n                    for (let i = 0; i < object.extension.length; ++i) {\n                        if (typeof object.extension[i] !== 'object')\n                            throw TypeError('.google.protobuf.DescriptorProto.extension: object expected');\n                        message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);\n                    }\n                }\n                if (object.nestedType) {\n                    if (!Array.isArray(object.nestedType))\n                        throw TypeError('.google.protobuf.DescriptorProto.nestedType: array expected');\n                    message.nestedType = [];\n                    for (let i = 0; i < object.nestedType.length; ++i) {\n                        if (typeof object.nestedType[i] !== 'object')\n                            throw TypeError('.google.protobuf.DescriptorProto.nestedType: object expected');\n                        message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);\n                    }\n                }\n                if (object.enumType) {\n                    if (!Array.isArray(object.enumType))\n                        throw TypeError('.google.protobuf.DescriptorProto.enumType: array expected');\n                    message.enumType = [];\n                    for (let i = 0; i < object.enumType.length; ++i) {\n                        if (typeof object.enumType[i] !== 'object')\n                            throw TypeError('.google.protobuf.DescriptorProto.enumType: object expected');\n                        message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);\n                    }\n                }\n                if (object.extensionRange) {\n                    if (!Array.isArray(object.extensionRange))\n                        throw TypeError('.google.protobuf.DescriptorProto.extensionRange: array expected');\n                    message.extensionRange = [];\n                    for (let i = 0; i < object.extensionRange.length; ++i) {\n                        if (typeof object.extensionRange[i] !== 'object')\n                            throw TypeError('.google.protobuf.DescriptorProto.extensionRange: object expected');\n                        message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);\n                    }\n                }\n                if (object.oneofDecl) {\n                    if (!Array.isArray(object.oneofDecl))\n                        throw TypeError('.google.protobuf.DescriptorProto.oneofDecl: array expected');\n                    message.oneofDecl = [];\n                    for (let i = 0; i < object.oneofDecl.length; ++i) {\n                        if (typeof object.oneofDecl[i] !== 'object')\n                            throw TypeError('.google.protobuf.DescriptorProto.oneofDecl: object expected');\n                        message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);\n                    }\n                }\n                if (object.options != null) {\n                    if (typeof object.options !== 'object')\n                        throw TypeError('.google.protobuf.DescriptorProto.options: object expected');\n                    message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);\n                }\n                if (object.reservedRange) {\n                    if (!Array.isArray(object.reservedRange))\n                        throw TypeError('.google.protobuf.DescriptorProto.reservedRange: array expected');\n                    message.reservedRange = [];\n                    for (let i = 0; i < object.reservedRange.length; ++i) {\n                        if (typeof object.reservedRange[i] !== 'object')\n                            throw TypeError('.google.protobuf.DescriptorProto.reservedRange: object expected');\n                        message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);\n                    }\n                }\n                if (object.reservedName) {\n                    if (!Array.isArray(object.reservedName))\n                        throw TypeError('.google.protobuf.DescriptorProto.reservedName: array expected');\n                    message.reservedName = [];\n                    for (let i = 0; i < object.reservedName.length; ++i)\n                        message.reservedName[i] = String(object.reservedName[i]);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.DescriptorProto\n             * @static\n             * @param {google.protobuf.DescriptorProto} message DescriptorProto\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            DescriptorProto.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults) {\n                    object.field = [];\n                    object.nestedType = [];\n                    object.enumType = [];\n                    object.extensionRange = [];\n                    object.extension = [];\n                    object.oneofDecl = [];\n                    object.reservedRange = [];\n                    object.reservedName = [];\n                }\n                if (options.defaults) {\n                    object.name = '';\n                    object.options = null;\n                }\n                if (message.name != null && message.hasOwnProperty('name'))\n                    object.name = message.name;\n                if (message.field && message.field.length) {\n                    object.field = [];\n                    for (let j = 0; j < message.field.length; ++j)\n                        object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);\n                }\n                if (message.nestedType && message.nestedType.length) {\n                    object.nestedType = [];\n                    for (let j = 0; j < message.nestedType.length; ++j)\n                        object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);\n                }\n                if (message.enumType && message.enumType.length) {\n                    object.enumType = [];\n                    for (let j = 0; j < message.enumType.length; ++j)\n                        object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);\n                }\n                if (message.extensionRange && message.extensionRange.length) {\n                    object.extensionRange = [];\n                    for (let j = 0; j < message.extensionRange.length; ++j)\n                        object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);\n                }\n                if (message.extension && message.extension.length) {\n                    object.extension = [];\n                    for (let j = 0; j < message.extension.length; ++j)\n                        object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);\n                }\n                if (message.options != null && message.hasOwnProperty('options'))\n                    object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);\n                if (message.oneofDecl && message.oneofDecl.length) {\n                    object.oneofDecl = [];\n                    for (let j = 0; j < message.oneofDecl.length; ++j)\n                        object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);\n                }\n                if (message.reservedRange && message.reservedRange.length) {\n                    object.reservedRange = [];\n                    for (let j = 0; j < message.reservedRange.length; ++j)\n                        object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);\n                }\n                if (message.reservedName && message.reservedName.length) {\n                    object.reservedName = [];\n                    for (let j = 0; j < message.reservedName.length; ++j)\n                        object.reservedName[j] = message.reservedName[j];\n                }\n                return object;\n            };\n\n            /**\n             * Converts this DescriptorProto to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.DescriptorProto\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            DescriptorProto.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            DescriptorProto.ExtensionRange = (function () {\n\n                /**\n                 * Properties of an ExtensionRange.\n                 * @memberof google.protobuf.DescriptorProto\n                 * @interface IExtensionRange\n                 * @property {number|null} [start] ExtensionRange start\n                 * @property {number|null} [end] ExtensionRange end\n                 */\n\n                /**\n                 * Constructs a new ExtensionRange.\n                 * @memberof google.protobuf.DescriptorProto\n                 * @classdesc Represents an ExtensionRange.\n                 * @implements IExtensionRange\n                 * @constructor\n                 * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set\n                 */\n                function ExtensionRange(properties) {\n                    if (properties)\n                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ExtensionRange start.\n                 * @member {number} start\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @instance\n                 */\n                ExtensionRange.prototype.start = 0;\n\n                /**\n                 * ExtensionRange end.\n                 * @member {number} end\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @instance\n                 */\n                ExtensionRange.prototype.end = 0;\n\n                /**\n                 * Creates a new ExtensionRange instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @static\n                 * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set\n                 * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance\n                 */\n                ExtensionRange.create = function create(properties) {\n                    return new ExtensionRange(properties);\n                };\n\n                /**\n                 * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @static\n                 * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ExtensionRange.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.start != null && message.hasOwnProperty('start'))\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);\n                    if (message.end != null && message.hasOwnProperty('end'))\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @static\n                 * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes an ExtensionRange message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ExtensionRange.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();\n                    while (reader.pos < end) {\n                        let tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.start = reader.int32();\n                            break;\n                        case 2:\n                            message.end = reader.int32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ExtensionRange.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies an ExtensionRange message.\n                 * @function verify\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ExtensionRange.verify = function verify(message) {\n                    if (typeof message !== 'object' || message === null)\n                        return 'object expected';\n                    if (message.start != null && message.hasOwnProperty('start'))\n                        if (!$util.isInteger(message.start))\n                            return 'start: integer expected';\n                    if (message.end != null && message.hasOwnProperty('end'))\n                        if (!$util.isInteger(message.end))\n                            return 'end: integer expected';\n                    return null;\n                };\n\n                /**\n                 * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange\n                 */\n                ExtensionRange.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)\n                        return object;\n                    let message = new $root.google.protobuf.DescriptorProto.ExtensionRange();\n                    if (object.start != null)\n                        message.start = object.start | 0;\n                    if (object.end != null)\n                        message.end = object.end | 0;\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @static\n                 * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ExtensionRange.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    let object = {};\n                    if (options.defaults) {\n                        object.start = 0;\n                        object.end = 0;\n                    }\n                    if (message.start != null && message.hasOwnProperty('start'))\n                        object.start = message.start;\n                    if (message.end != null && message.hasOwnProperty('end'))\n                        object.end = message.end;\n                    return object;\n                };\n\n                /**\n                 * Converts this ExtensionRange to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ExtensionRange.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return ExtensionRange;\n            })();\n\n            DescriptorProto.ReservedRange = (function () {\n\n                /**\n                 * Properties of a ReservedRange.\n                 * @memberof google.protobuf.DescriptorProto\n                 * @interface IReservedRange\n                 * @property {number|null} [start] ReservedRange start\n                 * @property {number|null} [end] ReservedRange end\n                 */\n\n                /**\n                 * Constructs a new ReservedRange.\n                 * @memberof google.protobuf.DescriptorProto\n                 * @classdesc Represents a ReservedRange.\n                 * @implements IReservedRange\n                 * @constructor\n                 * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set\n                 */\n                function ReservedRange(properties) {\n                    if (properties)\n                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ReservedRange start.\n                 * @member {number} start\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @instance\n                 */\n                ReservedRange.prototype.start = 0;\n\n                /**\n                 * ReservedRange end.\n                 * @member {number} end\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @instance\n                 */\n                ReservedRange.prototype.end = 0;\n\n                /**\n                 * Creates a new ReservedRange instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @static\n                 * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set\n                 * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance\n                 */\n                ReservedRange.create = function create(properties) {\n                    return new ReservedRange(properties);\n                };\n\n                /**\n                 * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @static\n                 * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ReservedRange.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.start != null && message.hasOwnProperty('start'))\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);\n                    if (message.end != null && message.hasOwnProperty('end'))\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @static\n                 * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a ReservedRange message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ReservedRange.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();\n                    while (reader.pos < end) {\n                        let tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.start = reader.int32();\n                            break;\n                        case 2:\n                            message.end = reader.int32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a ReservedRange message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ReservedRange.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a ReservedRange message.\n                 * @function verify\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ReservedRange.verify = function verify(message) {\n                    if (typeof message !== 'object' || message === null)\n                        return 'object expected';\n                    if (message.start != null && message.hasOwnProperty('start'))\n                        if (!$util.isInteger(message.start))\n                            return 'start: integer expected';\n                    if (message.end != null && message.hasOwnProperty('end'))\n                        if (!$util.isInteger(message.end))\n                            return 'end: integer expected';\n                    return null;\n                };\n\n                /**\n                 * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange\n                 */\n                ReservedRange.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)\n                        return object;\n                    let message = new $root.google.protobuf.DescriptorProto.ReservedRange();\n                    if (object.start != null)\n                        message.start = object.start | 0;\n                    if (object.end != null)\n                        message.end = object.end | 0;\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @static\n                 * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ReservedRange.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    let object = {};\n                    if (options.defaults) {\n                        object.start = 0;\n                        object.end = 0;\n                    }\n                    if (message.start != null && message.hasOwnProperty('start'))\n                        object.start = message.start;\n                    if (message.end != null && message.hasOwnProperty('end'))\n                        object.end = message.end;\n                    return object;\n                };\n\n                /**\n                 * Converts this ReservedRange to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.DescriptorProto.ReservedRange\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ReservedRange.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return ReservedRange;\n            })();\n\n            return DescriptorProto;\n        })();\n\n        protobuf.FieldDescriptorProto = (function () {\n\n            /**\n             * Properties of a FieldDescriptorProto.\n             * @memberof google.protobuf\n             * @interface IFieldDescriptorProto\n             * @property {string|null} [name] FieldDescriptorProto name\n             * @property {number|null} [number] FieldDescriptorProto number\n             * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label\n             * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type\n             * @property {string|null} [typeName] FieldDescriptorProto typeName\n             * @property {string|null} [extendee] FieldDescriptorProto extendee\n             * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue\n             * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex\n             * @property {string|null} [jsonName] FieldDescriptorProto jsonName\n             * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options\n             */\n\n            /**\n             * Constructs a new FieldDescriptorProto.\n             * @memberof google.protobuf\n             * @classdesc Represents a FieldDescriptorProto.\n             * @implements IFieldDescriptorProto\n             * @constructor\n             * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set\n             */\n            function FieldDescriptorProto(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FieldDescriptorProto name.\n             * @member {string} name\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             */\n            FieldDescriptorProto.prototype.name = '';\n\n            /**\n             * FieldDescriptorProto number.\n             * @member {number} number\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             */\n            FieldDescriptorProto.prototype.number = 0;\n\n            /**\n             * FieldDescriptorProto label.\n             * @member {google.protobuf.FieldDescriptorProto.Label} label\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             */\n            FieldDescriptorProto.prototype.label = 1;\n\n            /**\n             * FieldDescriptorProto type.\n             * @member {google.protobuf.FieldDescriptorProto.Type} type\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             */\n            FieldDescriptorProto.prototype.type = 1;\n\n            /**\n             * FieldDescriptorProto typeName.\n             * @member {string} typeName\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             */\n            FieldDescriptorProto.prototype.typeName = '';\n\n            /**\n             * FieldDescriptorProto extendee.\n             * @member {string} extendee\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             */\n            FieldDescriptorProto.prototype.extendee = '';\n\n            /**\n             * FieldDescriptorProto defaultValue.\n             * @member {string} defaultValue\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             */\n            FieldDescriptorProto.prototype.defaultValue = '';\n\n            /**\n             * FieldDescriptorProto oneofIndex.\n             * @member {number} oneofIndex\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             */\n            FieldDescriptorProto.prototype.oneofIndex = 0;\n\n            /**\n             * FieldDescriptorProto jsonName.\n             * @member {string} jsonName\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             */\n            FieldDescriptorProto.prototype.jsonName = '';\n\n            /**\n             * FieldDescriptorProto options.\n             * @member {google.protobuf.IFieldOptions|null|undefined} options\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             */\n            FieldDescriptorProto.prototype.options = null;\n\n            /**\n             * Creates a new FieldDescriptorProto instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @static\n             * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set\n             * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance\n             */\n            FieldDescriptorProto.create = function create(properties) {\n                return new FieldDescriptorProto(properties);\n            };\n\n            /**\n             * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @static\n             * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FieldDescriptorProto.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty('name'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.extendee != null && message.hasOwnProperty('extendee'))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);\n                if (message.number != null && message.hasOwnProperty('number'))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);\n                if (message.label != null && message.hasOwnProperty('label'))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);\n                if (message.type != null && message.hasOwnProperty('type'))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);\n                if (message.typeName != null && message.hasOwnProperty('typeName'))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);\n                if (message.defaultValue != null && message.hasOwnProperty('defaultValue'))\n                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);\n                if (message.options != null && message.hasOwnProperty('options'))\n                    $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.oneofIndex != null && message.hasOwnProperty('oneofIndex'))\n                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);\n                if (message.jsonName != null && message.hasOwnProperty('jsonName'))\n                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @static\n             * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FieldDescriptorProto message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FieldDescriptorProto.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 3:\n                        message.number = reader.int32();\n                        break;\n                    case 4:\n                        message.label = reader.int32();\n                        break;\n                    case 5:\n                        message.type = reader.int32();\n                        break;\n                    case 6:\n                        message.typeName = reader.string();\n                        break;\n                    case 2:\n                        message.extendee = reader.string();\n                        break;\n                    case 7:\n                        message.defaultValue = reader.string();\n                        break;\n                    case 9:\n                        message.oneofIndex = reader.int32();\n                        break;\n                    case 10:\n                        message.jsonName = reader.string();\n                        break;\n                    case 8:\n                        message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FieldDescriptorProto message.\n             * @function verify\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FieldDescriptorProto.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.name != null && message.hasOwnProperty('name'))\n                    if (!$util.isString(message.name))\n                        return 'name: string expected';\n                if (message.number != null && message.hasOwnProperty('number'))\n                    if (!$util.isInteger(message.number))\n                        return 'number: integer expected';\n                if (message.label != null && message.hasOwnProperty('label'))\n                    switch (message.label) {\n                    default:\n                        return 'label: enum value expected';\n                    case 1:\n                    case 2:\n                    case 3:\n                        break;\n                    }\n                if (message.type != null && message.hasOwnProperty('type'))\n                    switch (message.type) {\n                    default:\n                        return 'type: enum value expected';\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                        break;\n                    }\n                if (message.typeName != null && message.hasOwnProperty('typeName'))\n                    if (!$util.isString(message.typeName))\n                        return 'typeName: string expected';\n                if (message.extendee != null && message.hasOwnProperty('extendee'))\n                    if (!$util.isString(message.extendee))\n                        return 'extendee: string expected';\n                if (message.defaultValue != null && message.hasOwnProperty('defaultValue'))\n                    if (!$util.isString(message.defaultValue))\n                        return 'defaultValue: string expected';\n                if (message.oneofIndex != null && message.hasOwnProperty('oneofIndex'))\n                    if (!$util.isInteger(message.oneofIndex))\n                        return 'oneofIndex: integer expected';\n                if (message.jsonName != null && message.hasOwnProperty('jsonName'))\n                    if (!$util.isString(message.jsonName))\n                        return 'jsonName: string expected';\n                if (message.options != null && message.hasOwnProperty('options')) {\n                    let error = $root.google.protobuf.FieldOptions.verify(message.options);\n                    if (error)\n                        return 'options.' + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto\n             */\n            FieldDescriptorProto.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.FieldDescriptorProto)\n                    return object;\n                let message = new $root.google.protobuf.FieldDescriptorProto();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.number != null)\n                    message.number = object.number | 0;\n                switch (object.label) {\n                case 'LABEL_OPTIONAL':\n                case 1:\n                    message.label = 1;\n                    break;\n                case 'LABEL_REQUIRED':\n                case 2:\n                    message.label = 2;\n                    break;\n                case 'LABEL_REPEATED':\n                case 3:\n                    message.label = 3;\n                    break;\n                }\n                switch (object.type) {\n                case 'TYPE_DOUBLE':\n                case 1:\n                    message.type = 1;\n                    break;\n                case 'TYPE_FLOAT':\n                case 2:\n                    message.type = 2;\n                    break;\n                case 'TYPE_INT64':\n                case 3:\n                    message.type = 3;\n                    break;\n                case 'TYPE_UINT64':\n                case 4:\n                    message.type = 4;\n                    break;\n                case 'TYPE_INT32':\n                case 5:\n                    message.type = 5;\n                    break;\n                case 'TYPE_FIXED64':\n                case 6:\n                    message.type = 6;\n                    break;\n                case 'TYPE_FIXED32':\n                case 7:\n                    message.type = 7;\n                    break;\n                case 'TYPE_BOOL':\n                case 8:\n                    message.type = 8;\n                    break;\n                case 'TYPE_STRING':\n                case 9:\n                    message.type = 9;\n                    break;\n                case 'TYPE_GROUP':\n                case 10:\n                    message.type = 10;\n                    break;\n                case 'TYPE_MESSAGE':\n                case 11:\n                    message.type = 11;\n                    break;\n                case 'TYPE_BYTES':\n                case 12:\n                    message.type = 12;\n                    break;\n                case 'TYPE_UINT32':\n                case 13:\n                    message.type = 13;\n                    break;\n                case 'TYPE_ENUM':\n                case 14:\n                    message.type = 14;\n                    break;\n                case 'TYPE_SFIXED32':\n                case 15:\n                    message.type = 15;\n                    break;\n                case 'TYPE_SFIXED64':\n                case 16:\n                    message.type = 16;\n                    break;\n                case 'TYPE_SINT32':\n                case 17:\n                    message.type = 17;\n                    break;\n                case 'TYPE_SINT64':\n                case 18:\n                    message.type = 18;\n                    break;\n                }\n                if (object.typeName != null)\n                    message.typeName = String(object.typeName);\n                if (object.extendee != null)\n                    message.extendee = String(object.extendee);\n                if (object.defaultValue != null)\n                    message.defaultValue = String(object.defaultValue);\n                if (object.oneofIndex != null)\n                    message.oneofIndex = object.oneofIndex | 0;\n                if (object.jsonName != null)\n                    message.jsonName = String(object.jsonName);\n                if (object.options != null) {\n                    if (typeof object.options !== 'object')\n                        throw TypeError('.google.protobuf.FieldDescriptorProto.options: object expected');\n                    message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @static\n             * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FieldDescriptorProto.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.name = '';\n                    object.extendee = '';\n                    object.number = 0;\n                    object.label = options.enums === String ? 'LABEL_OPTIONAL' : 1;\n                    object.type = options.enums === String ? 'TYPE_DOUBLE' : 1;\n                    object.typeName = '';\n                    object.defaultValue = '';\n                    object.options = null;\n                    object.oneofIndex = 0;\n                    object.jsonName = '';\n                }\n                if (message.name != null && message.hasOwnProperty('name'))\n                    object.name = message.name;\n                if (message.extendee != null && message.hasOwnProperty('extendee'))\n                    object.extendee = message.extendee;\n                if (message.number != null && message.hasOwnProperty('number'))\n                    object.number = message.number;\n                if (message.label != null && message.hasOwnProperty('label'))\n                    object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;\n                if (message.type != null && message.hasOwnProperty('type'))\n                    object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;\n                if (message.typeName != null && message.hasOwnProperty('typeName'))\n                    object.typeName = message.typeName;\n                if (message.defaultValue != null && message.hasOwnProperty('defaultValue'))\n                    object.defaultValue = message.defaultValue;\n                if (message.options != null && message.hasOwnProperty('options'))\n                    object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);\n                if (message.oneofIndex != null && message.hasOwnProperty('oneofIndex'))\n                    object.oneofIndex = message.oneofIndex;\n                if (message.jsonName != null && message.hasOwnProperty('jsonName'))\n                    object.jsonName = message.jsonName;\n                return object;\n            };\n\n            /**\n             * Converts this FieldDescriptorProto to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.FieldDescriptorProto\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FieldDescriptorProto.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Type enum.\n             * @name google.protobuf.FieldDescriptorProto.Type\n             * @enum {string}\n             * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value\n             * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value\n             * @property {number} TYPE_INT64=3 TYPE_INT64 value\n             * @property {number} TYPE_UINT64=4 TYPE_UINT64 value\n             * @property {number} TYPE_INT32=5 TYPE_INT32 value\n             * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value\n             * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value\n             * @property {number} TYPE_BOOL=8 TYPE_BOOL value\n             * @property {number} TYPE_STRING=9 TYPE_STRING value\n             * @property {number} TYPE_GROUP=10 TYPE_GROUP value\n             * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value\n             * @property {number} TYPE_BYTES=12 TYPE_BYTES value\n             * @property {number} TYPE_UINT32=13 TYPE_UINT32 value\n             * @property {number} TYPE_ENUM=14 TYPE_ENUM value\n             * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value\n             * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value\n             * @property {number} TYPE_SINT32=17 TYPE_SINT32 value\n             * @property {number} TYPE_SINT64=18 TYPE_SINT64 value\n             */\n            FieldDescriptorProto.Type = (function () {\n                const valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[1] = 'TYPE_DOUBLE'] = 1;\n                values[valuesById[2] = 'TYPE_FLOAT'] = 2;\n                values[valuesById[3] = 'TYPE_INT64'] = 3;\n                values[valuesById[4] = 'TYPE_UINT64'] = 4;\n                values[valuesById[5] = 'TYPE_INT32'] = 5;\n                values[valuesById[6] = 'TYPE_FIXED64'] = 6;\n                values[valuesById[7] = 'TYPE_FIXED32'] = 7;\n                values[valuesById[8] = 'TYPE_BOOL'] = 8;\n                values[valuesById[9] = 'TYPE_STRING'] = 9;\n                values[valuesById[10] = 'TYPE_GROUP'] = 10;\n                values[valuesById[11] = 'TYPE_MESSAGE'] = 11;\n                values[valuesById[12] = 'TYPE_BYTES'] = 12;\n                values[valuesById[13] = 'TYPE_UINT32'] = 13;\n                values[valuesById[14] = 'TYPE_ENUM'] = 14;\n                values[valuesById[15] = 'TYPE_SFIXED32'] = 15;\n                values[valuesById[16] = 'TYPE_SFIXED64'] = 16;\n                values[valuesById[17] = 'TYPE_SINT32'] = 17;\n                values[valuesById[18] = 'TYPE_SINT64'] = 18;\n                return values;\n            })();\n\n            /**\n             * Label enum.\n             * @name google.protobuf.FieldDescriptorProto.Label\n             * @enum {string}\n             * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value\n             * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value\n             * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value\n             */\n            FieldDescriptorProto.Label = (function () {\n                const valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[1] = 'LABEL_OPTIONAL'] = 1;\n                values[valuesById[2] = 'LABEL_REQUIRED'] = 2;\n                values[valuesById[3] = 'LABEL_REPEATED'] = 3;\n                return values;\n            })();\n\n            return FieldDescriptorProto;\n        })();\n\n        protobuf.OneofDescriptorProto = (function () {\n\n            /**\n             * Properties of an OneofDescriptorProto.\n             * @memberof google.protobuf\n             * @interface IOneofDescriptorProto\n             * @property {string|null} [name] OneofDescriptorProto name\n             * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options\n             */\n\n            /**\n             * Constructs a new OneofDescriptorProto.\n             * @memberof google.protobuf\n             * @classdesc Represents an OneofDescriptorProto.\n             * @implements IOneofDescriptorProto\n             * @constructor\n             * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set\n             */\n            function OneofDescriptorProto(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * OneofDescriptorProto name.\n             * @member {string} name\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @instance\n             */\n            OneofDescriptorProto.prototype.name = '';\n\n            /**\n             * OneofDescriptorProto options.\n             * @member {google.protobuf.IOneofOptions|null|undefined} options\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @instance\n             */\n            OneofDescriptorProto.prototype.options = null;\n\n            /**\n             * Creates a new OneofDescriptorProto instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @static\n             * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set\n             * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance\n             */\n            OneofDescriptorProto.create = function create(properties) {\n                return new OneofDescriptorProto(properties);\n            };\n\n            /**\n             * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @static\n             * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OneofDescriptorProto.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty('name'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.options != null && message.hasOwnProperty('options'))\n                    $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @static\n             * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an OneofDescriptorProto message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OneofDescriptorProto.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an OneofDescriptorProto message.\n             * @function verify\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OneofDescriptorProto.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.name != null && message.hasOwnProperty('name'))\n                    if (!$util.isString(message.name))\n                        return 'name: string expected';\n                if (message.options != null && message.hasOwnProperty('options')) {\n                    let error = $root.google.protobuf.OneofOptions.verify(message.options);\n                    if (error)\n                        return 'options.' + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto\n             */\n            OneofDescriptorProto.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.OneofDescriptorProto)\n                    return object;\n                let message = new $root.google.protobuf.OneofDescriptorProto();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.options != null) {\n                    if (typeof object.options !== 'object')\n                        throw TypeError('.google.protobuf.OneofDescriptorProto.options: object expected');\n                    message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @static\n             * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OneofDescriptorProto.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.name = '';\n                    object.options = null;\n                }\n                if (message.name != null && message.hasOwnProperty('name'))\n                    object.name = message.name;\n                if (message.options != null && message.hasOwnProperty('options'))\n                    object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);\n                return object;\n            };\n\n            /**\n             * Converts this OneofDescriptorProto to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.OneofDescriptorProto\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OneofDescriptorProto.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return OneofDescriptorProto;\n        })();\n\n        protobuf.EnumDescriptorProto = (function () {\n\n            /**\n             * Properties of an EnumDescriptorProto.\n             * @memberof google.protobuf\n             * @interface IEnumDescriptorProto\n             * @property {string|null} [name] EnumDescriptorProto name\n             * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value\n             * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options\n             */\n\n            /**\n             * Constructs a new EnumDescriptorProto.\n             * @memberof google.protobuf\n             * @classdesc Represents an EnumDescriptorProto.\n             * @implements IEnumDescriptorProto\n             * @constructor\n             * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set\n             */\n            function EnumDescriptorProto(properties) {\n                this.value = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * EnumDescriptorProto name.\n             * @member {string} name\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @instance\n             */\n            EnumDescriptorProto.prototype.name = '';\n\n            /**\n             * EnumDescriptorProto value.\n             * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @instance\n             */\n            EnumDescriptorProto.prototype.value = $util.emptyArray;\n\n            /**\n             * EnumDescriptorProto options.\n             * @member {google.protobuf.IEnumOptions|null|undefined} options\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @instance\n             */\n            EnumDescriptorProto.prototype.options = null;\n\n            /**\n             * Creates a new EnumDescriptorProto instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @static\n             * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set\n             * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance\n             */\n            EnumDescriptorProto.create = function create(properties) {\n                return new EnumDescriptorProto(properties);\n            };\n\n            /**\n             * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @static\n             * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            EnumDescriptorProto.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty('name'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.value != null && message.value.length)\n                    for (let i = 0; i < message.value.length; ++i)\n                        $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.options != null && message.hasOwnProperty('options'))\n                    $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @static\n             * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an EnumDescriptorProto message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            EnumDescriptorProto.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        if (!(message.value && message.value.length))\n                            message.value = [];\n                        message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an EnumDescriptorProto message.\n             * @function verify\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            EnumDescriptorProto.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.name != null && message.hasOwnProperty('name'))\n                    if (!$util.isString(message.name))\n                        return 'name: string expected';\n                if (message.value != null && message.hasOwnProperty('value')) {\n                    if (!Array.isArray(message.value))\n                        return 'value: array expected';\n                    for (let i = 0; i < message.value.length; ++i) {\n                        let error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);\n                        if (error)\n                            return 'value.' + error;\n                    }\n                }\n                if (message.options != null && message.hasOwnProperty('options')) {\n                    let error = $root.google.protobuf.EnumOptions.verify(message.options);\n                    if (error)\n                        return 'options.' + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto\n             */\n            EnumDescriptorProto.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.EnumDescriptorProto)\n                    return object;\n                let message = new $root.google.protobuf.EnumDescriptorProto();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.value) {\n                    if (!Array.isArray(object.value))\n                        throw TypeError('.google.protobuf.EnumDescriptorProto.value: array expected');\n                    message.value = [];\n                    for (let i = 0; i < object.value.length; ++i) {\n                        if (typeof object.value[i] !== 'object')\n                            throw TypeError('.google.protobuf.EnumDescriptorProto.value: object expected');\n                        message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);\n                    }\n                }\n                if (object.options != null) {\n                    if (typeof object.options !== 'object')\n                        throw TypeError('.google.protobuf.EnumDescriptorProto.options: object expected');\n                    message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @static\n             * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            EnumDescriptorProto.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.value = [];\n                if (options.defaults) {\n                    object.name = '';\n                    object.options = null;\n                }\n                if (message.name != null && message.hasOwnProperty('name'))\n                    object.name = message.name;\n                if (message.value && message.value.length) {\n                    object.value = [];\n                    for (let j = 0; j < message.value.length; ++j)\n                        object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);\n                }\n                if (message.options != null && message.hasOwnProperty('options'))\n                    object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);\n                return object;\n            };\n\n            /**\n             * Converts this EnumDescriptorProto to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.EnumDescriptorProto\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            EnumDescriptorProto.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return EnumDescriptorProto;\n        })();\n\n        protobuf.EnumValueDescriptorProto = (function () {\n\n            /**\n             * Properties of an EnumValueDescriptorProto.\n             * @memberof google.protobuf\n             * @interface IEnumValueDescriptorProto\n             * @property {string|null} [name] EnumValueDescriptorProto name\n             * @property {number|null} [number] EnumValueDescriptorProto number\n             * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options\n             */\n\n            /**\n             * Constructs a new EnumValueDescriptorProto.\n             * @memberof google.protobuf\n             * @classdesc Represents an EnumValueDescriptorProto.\n             * @implements IEnumValueDescriptorProto\n             * @constructor\n             * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set\n             */\n            function EnumValueDescriptorProto(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * EnumValueDescriptorProto name.\n             * @member {string} name\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @instance\n             */\n            EnumValueDescriptorProto.prototype.name = '';\n\n            /**\n             * EnumValueDescriptorProto number.\n             * @member {number} number\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @instance\n             */\n            EnumValueDescriptorProto.prototype.number = 0;\n\n            /**\n             * EnumValueDescriptorProto options.\n             * @member {google.protobuf.IEnumValueOptions|null|undefined} options\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @instance\n             */\n            EnumValueDescriptorProto.prototype.options = null;\n\n            /**\n             * Creates a new EnumValueDescriptorProto instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @static\n             * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set\n             * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance\n             */\n            EnumValueDescriptorProto.create = function create(properties) {\n                return new EnumValueDescriptorProto(properties);\n            };\n\n            /**\n             * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @static\n             * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            EnumValueDescriptorProto.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty('name'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.number != null && message.hasOwnProperty('number'))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);\n                if (message.options != null && message.hasOwnProperty('options'))\n                    $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @static\n             * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            EnumValueDescriptorProto.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        message.number = reader.int32();\n                        break;\n                    case 3:\n                        message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an EnumValueDescriptorProto message.\n             * @function verify\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            EnumValueDescriptorProto.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.name != null && message.hasOwnProperty('name'))\n                    if (!$util.isString(message.name))\n                        return 'name: string expected';\n                if (message.number != null && message.hasOwnProperty('number'))\n                    if (!$util.isInteger(message.number))\n                        return 'number: integer expected';\n                if (message.options != null && message.hasOwnProperty('options')) {\n                    let error = $root.google.protobuf.EnumValueOptions.verify(message.options);\n                    if (error)\n                        return 'options.' + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto\n             */\n            EnumValueDescriptorProto.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)\n                    return object;\n                let message = new $root.google.protobuf.EnumValueDescriptorProto();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.number != null)\n                    message.number = object.number | 0;\n                if (object.options != null) {\n                    if (typeof object.options !== 'object')\n                        throw TypeError('.google.protobuf.EnumValueDescriptorProto.options: object expected');\n                    message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @static\n             * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            EnumValueDescriptorProto.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.name = '';\n                    object.number = 0;\n                    object.options = null;\n                }\n                if (message.name != null && message.hasOwnProperty('name'))\n                    object.name = message.name;\n                if (message.number != null && message.hasOwnProperty('number'))\n                    object.number = message.number;\n                if (message.options != null && message.hasOwnProperty('options'))\n                    object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);\n                return object;\n            };\n\n            /**\n             * Converts this EnumValueDescriptorProto to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.EnumValueDescriptorProto\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            EnumValueDescriptorProto.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return EnumValueDescriptorProto;\n        })();\n\n        protobuf.ServiceDescriptorProto = (function () {\n\n            /**\n             * Properties of a ServiceDescriptorProto.\n             * @memberof google.protobuf\n             * @interface IServiceDescriptorProto\n             * @property {string|null} [name] ServiceDescriptorProto name\n             * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method\n             * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options\n             */\n\n            /**\n             * Constructs a new ServiceDescriptorProto.\n             * @memberof google.protobuf\n             * @classdesc Represents a ServiceDescriptorProto.\n             * @implements IServiceDescriptorProto\n             * @constructor\n             * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set\n             */\n            function ServiceDescriptorProto(properties) {\n                this.method = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ServiceDescriptorProto name.\n             * @member {string} name\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @instance\n             */\n            ServiceDescriptorProto.prototype.name = '';\n\n            /**\n             * ServiceDescriptorProto method.\n             * @member {Array.<google.protobuf.IMethodDescriptorProto>} method\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @instance\n             */\n            ServiceDescriptorProto.prototype.method = $util.emptyArray;\n\n            /**\n             * ServiceDescriptorProto options.\n             * @member {google.protobuf.IServiceOptions|null|undefined} options\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @instance\n             */\n            ServiceDescriptorProto.prototype.options = null;\n\n            /**\n             * Creates a new ServiceDescriptorProto instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @static\n             * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set\n             * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance\n             */\n            ServiceDescriptorProto.create = function create(properties) {\n                return new ServiceDescriptorProto(properties);\n            };\n\n            /**\n             * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @static\n             * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ServiceDescriptorProto.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty('name'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.method != null && message.method.length)\n                    for (let i = 0; i < message.method.length; ++i)\n                        $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.options != null && message.hasOwnProperty('options'))\n                    $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @static\n             * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ServiceDescriptorProto message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ServiceDescriptorProto.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        if (!(message.method && message.method.length))\n                            message.method = [];\n                        message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ServiceDescriptorProto message.\n             * @function verify\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ServiceDescriptorProto.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.name != null && message.hasOwnProperty('name'))\n                    if (!$util.isString(message.name))\n                        return 'name: string expected';\n                if (message.method != null && message.hasOwnProperty('method')) {\n                    if (!Array.isArray(message.method))\n                        return 'method: array expected';\n                    for (let i = 0; i < message.method.length; ++i) {\n                        let error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);\n                        if (error)\n                            return 'method.' + error;\n                    }\n                }\n                if (message.options != null && message.hasOwnProperty('options')) {\n                    let error = $root.google.protobuf.ServiceOptions.verify(message.options);\n                    if (error)\n                        return 'options.' + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto\n             */\n            ServiceDescriptorProto.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.ServiceDescriptorProto)\n                    return object;\n                let message = new $root.google.protobuf.ServiceDescriptorProto();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.method) {\n                    if (!Array.isArray(object.method))\n                        throw TypeError('.google.protobuf.ServiceDescriptorProto.method: array expected');\n                    message.method = [];\n                    for (let i = 0; i < object.method.length; ++i) {\n                        if (typeof object.method[i] !== 'object')\n                            throw TypeError('.google.protobuf.ServiceDescriptorProto.method: object expected');\n                        message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);\n                    }\n                }\n                if (object.options != null) {\n                    if (typeof object.options !== 'object')\n                        throw TypeError('.google.protobuf.ServiceDescriptorProto.options: object expected');\n                    message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @static\n             * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ServiceDescriptorProto.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.method = [];\n                if (options.defaults) {\n                    object.name = '';\n                    object.options = null;\n                }\n                if (message.name != null && message.hasOwnProperty('name'))\n                    object.name = message.name;\n                if (message.method && message.method.length) {\n                    object.method = [];\n                    for (let j = 0; j < message.method.length; ++j)\n                        object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);\n                }\n                if (message.options != null && message.hasOwnProperty('options'))\n                    object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);\n                return object;\n            };\n\n            /**\n             * Converts this ServiceDescriptorProto to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.ServiceDescriptorProto\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ServiceDescriptorProto.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ServiceDescriptorProto;\n        })();\n\n        protobuf.MethodDescriptorProto = (function () {\n\n            /**\n             * Properties of a MethodDescriptorProto.\n             * @memberof google.protobuf\n             * @interface IMethodDescriptorProto\n             * @property {string|null} [name] MethodDescriptorProto name\n             * @property {string|null} [inputType] MethodDescriptorProto inputType\n             * @property {string|null} [outputType] MethodDescriptorProto outputType\n             * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options\n             * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming\n             * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming\n             */\n\n            /**\n             * Constructs a new MethodDescriptorProto.\n             * @memberof google.protobuf\n             * @classdesc Represents a MethodDescriptorProto.\n             * @implements IMethodDescriptorProto\n             * @constructor\n             * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set\n             */\n            function MethodDescriptorProto(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * MethodDescriptorProto name.\n             * @member {string} name\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @instance\n             */\n            MethodDescriptorProto.prototype.name = '';\n\n            /**\n             * MethodDescriptorProto inputType.\n             * @member {string} inputType\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @instance\n             */\n            MethodDescriptorProto.prototype.inputType = '';\n\n            /**\n             * MethodDescriptorProto outputType.\n             * @member {string} outputType\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @instance\n             */\n            MethodDescriptorProto.prototype.outputType = '';\n\n            /**\n             * MethodDescriptorProto options.\n             * @member {google.protobuf.IMethodOptions|null|undefined} options\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @instance\n             */\n            MethodDescriptorProto.prototype.options = null;\n\n            /**\n             * MethodDescriptorProto clientStreaming.\n             * @member {boolean} clientStreaming\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @instance\n             */\n            MethodDescriptorProto.prototype.clientStreaming = false;\n\n            /**\n             * MethodDescriptorProto serverStreaming.\n             * @member {boolean} serverStreaming\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @instance\n             */\n            MethodDescriptorProto.prototype.serverStreaming = false;\n\n            /**\n             * Creates a new MethodDescriptorProto instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @static\n             * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set\n             * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance\n             */\n            MethodDescriptorProto.create = function create(properties) {\n                return new MethodDescriptorProto(properties);\n            };\n\n            /**\n             * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @static\n             * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MethodDescriptorProto.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty('name'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.inputType != null && message.hasOwnProperty('inputType'))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);\n                if (message.outputType != null && message.hasOwnProperty('outputType'))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);\n                if (message.options != null && message.hasOwnProperty('options'))\n                    $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.clientStreaming != null && message.hasOwnProperty('clientStreaming'))\n                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);\n                if (message.serverStreaming != null && message.hasOwnProperty('serverStreaming'))\n                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @static\n             * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a MethodDescriptorProto message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MethodDescriptorProto.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        message.inputType = reader.string();\n                        break;\n                    case 3:\n                        message.outputType = reader.string();\n                        break;\n                    case 4:\n                        message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());\n                        break;\n                    case 5:\n                        message.clientStreaming = reader.bool();\n                        break;\n                    case 6:\n                        message.serverStreaming = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a MethodDescriptorProto message.\n             * @function verify\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MethodDescriptorProto.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.name != null && message.hasOwnProperty('name'))\n                    if (!$util.isString(message.name))\n                        return 'name: string expected';\n                if (message.inputType != null && message.hasOwnProperty('inputType'))\n                    if (!$util.isString(message.inputType))\n                        return 'inputType: string expected';\n                if (message.outputType != null && message.hasOwnProperty('outputType'))\n                    if (!$util.isString(message.outputType))\n                        return 'outputType: string expected';\n                if (message.options != null && message.hasOwnProperty('options')) {\n                    let error = $root.google.protobuf.MethodOptions.verify(message.options);\n                    if (error)\n                        return 'options.' + error;\n                }\n                if (message.clientStreaming != null && message.hasOwnProperty('clientStreaming'))\n                    if (typeof message.clientStreaming !== 'boolean')\n                        return 'clientStreaming: boolean expected';\n                if (message.serverStreaming != null && message.hasOwnProperty('serverStreaming'))\n                    if (typeof message.serverStreaming !== 'boolean')\n                        return 'serverStreaming: boolean expected';\n                return null;\n            };\n\n            /**\n             * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto\n             */\n            MethodDescriptorProto.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.MethodDescriptorProto)\n                    return object;\n                let message = new $root.google.protobuf.MethodDescriptorProto();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.inputType != null)\n                    message.inputType = String(object.inputType);\n                if (object.outputType != null)\n                    message.outputType = String(object.outputType);\n                if (object.options != null) {\n                    if (typeof object.options !== 'object')\n                        throw TypeError('.google.protobuf.MethodDescriptorProto.options: object expected');\n                    message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);\n                }\n                if (object.clientStreaming != null)\n                    message.clientStreaming = Boolean(object.clientStreaming);\n                if (object.serverStreaming != null)\n                    message.serverStreaming = Boolean(object.serverStreaming);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @static\n             * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MethodDescriptorProto.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.name = '';\n                    object.inputType = '';\n                    object.outputType = '';\n                    object.options = null;\n                    object.clientStreaming = false;\n                    object.serverStreaming = false;\n                }\n                if (message.name != null && message.hasOwnProperty('name'))\n                    object.name = message.name;\n                if (message.inputType != null && message.hasOwnProperty('inputType'))\n                    object.inputType = message.inputType;\n                if (message.outputType != null && message.hasOwnProperty('outputType'))\n                    object.outputType = message.outputType;\n                if (message.options != null && message.hasOwnProperty('options'))\n                    object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);\n                if (message.clientStreaming != null && message.hasOwnProperty('clientStreaming'))\n                    object.clientStreaming = message.clientStreaming;\n                if (message.serverStreaming != null && message.hasOwnProperty('serverStreaming'))\n                    object.serverStreaming = message.serverStreaming;\n                return object;\n            };\n\n            /**\n             * Converts this MethodDescriptorProto to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.MethodDescriptorProto\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MethodDescriptorProto.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return MethodDescriptorProto;\n        })();\n\n        protobuf.FileOptions = (function () {\n\n            /**\n             * Properties of a FileOptions.\n             * @memberof google.protobuf\n             * @interface IFileOptions\n             * @property {string|null} [javaPackage] FileOptions javaPackage\n             * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname\n             * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles\n             * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash\n             * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8\n             * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor\n             * @property {string|null} [goPackage] FileOptions goPackage\n             * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices\n             * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices\n             * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices\n             * @property {boolean|null} [deprecated] FileOptions deprecated\n             * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas\n             * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix\n             * @property {string|null} [csharpNamespace] FileOptions csharpNamespace\n             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption\n             */\n\n            /**\n             * Constructs a new FileOptions.\n             * @memberof google.protobuf\n             * @classdesc Represents a FileOptions.\n             * @implements IFileOptions\n             * @constructor\n             * @param {google.protobuf.IFileOptions=} [properties] Properties to set\n             */\n            function FileOptions(properties) {\n                this.uninterpretedOption = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FileOptions javaPackage.\n             * @member {string} javaPackage\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.javaPackage = '';\n\n            /**\n             * FileOptions javaOuterClassname.\n             * @member {string} javaOuterClassname\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.javaOuterClassname = '';\n\n            /**\n             * FileOptions javaMultipleFiles.\n             * @member {boolean} javaMultipleFiles\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.javaMultipleFiles = false;\n\n            /**\n             * FileOptions javaGenerateEqualsAndHash.\n             * @member {boolean} javaGenerateEqualsAndHash\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.javaGenerateEqualsAndHash = false;\n\n            /**\n             * FileOptions javaStringCheckUtf8.\n             * @member {boolean} javaStringCheckUtf8\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.javaStringCheckUtf8 = false;\n\n            /**\n             * FileOptions optimizeFor.\n             * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.optimizeFor = 1;\n\n            /**\n             * FileOptions goPackage.\n             * @member {string} goPackage\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.goPackage = '';\n\n            /**\n             * FileOptions ccGenericServices.\n             * @member {boolean} ccGenericServices\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.ccGenericServices = false;\n\n            /**\n             * FileOptions javaGenericServices.\n             * @member {boolean} javaGenericServices\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.javaGenericServices = false;\n\n            /**\n             * FileOptions pyGenericServices.\n             * @member {boolean} pyGenericServices\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.pyGenericServices = false;\n\n            /**\n             * FileOptions deprecated.\n             * @member {boolean} deprecated\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.deprecated = false;\n\n            /**\n             * FileOptions ccEnableArenas.\n             * @member {boolean} ccEnableArenas\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.ccEnableArenas = false;\n\n            /**\n             * FileOptions objcClassPrefix.\n             * @member {string} objcClassPrefix\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.objcClassPrefix = '';\n\n            /**\n             * FileOptions csharpNamespace.\n             * @member {string} csharpNamespace\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.csharpNamespace = '';\n\n            /**\n             * FileOptions uninterpretedOption.\n             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             */\n            FileOptions.prototype.uninterpretedOption = $util.emptyArray;\n\n            /**\n             * Creates a new FileOptions instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.FileOptions\n             * @static\n             * @param {google.protobuf.IFileOptions=} [properties] Properties to set\n             * @returns {google.protobuf.FileOptions} FileOptions instance\n             */\n            FileOptions.create = function create(properties) {\n                return new FileOptions(properties);\n            };\n\n            /**\n             * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.FileOptions\n             * @static\n             * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FileOptions.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.javaPackage != null && message.hasOwnProperty('javaPackage'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);\n                if (message.javaOuterClassname != null && message.hasOwnProperty('javaOuterClassname'))\n                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);\n                if (message.optimizeFor != null && message.hasOwnProperty('optimizeFor'))\n                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);\n                if (message.javaMultipleFiles != null && message.hasOwnProperty('javaMultipleFiles'))\n                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);\n                if (message.goPackage != null && message.hasOwnProperty('goPackage'))\n                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);\n                if (message.ccGenericServices != null && message.hasOwnProperty('ccGenericServices'))\n                    writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);\n                if (message.javaGenericServices != null && message.hasOwnProperty('javaGenericServices'))\n                    writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);\n                if (message.pyGenericServices != null && message.hasOwnProperty('pyGenericServices'))\n                    writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);\n                if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty('javaGenerateEqualsAndHash'))\n                    writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);\n                if (message.javaStringCheckUtf8 != null && message.hasOwnProperty('javaStringCheckUtf8'))\n                    writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);\n                if (message.ccEnableArenas != null && message.hasOwnProperty('ccEnableArenas'))\n                    writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);\n                if (message.objcClassPrefix != null && message.hasOwnProperty('objcClassPrefix'))\n                    writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);\n                if (message.csharpNamespace != null && message.hasOwnProperty('csharpNamespace'))\n                    writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);\n                if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i)\n                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.FileOptions\n             * @static\n             * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FileOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FileOptions message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.FileOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.FileOptions} FileOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FileOptions.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.javaPackage = reader.string();\n                        break;\n                    case 8:\n                        message.javaOuterClassname = reader.string();\n                        break;\n                    case 10:\n                        message.javaMultipleFiles = reader.bool();\n                        break;\n                    case 20:\n                        message.javaGenerateEqualsAndHash = reader.bool();\n                        break;\n                    case 27:\n                        message.javaStringCheckUtf8 = reader.bool();\n                        break;\n                    case 9:\n                        message.optimizeFor = reader.int32();\n                        break;\n                    case 11:\n                        message.goPackage = reader.string();\n                        break;\n                    case 16:\n                        message.ccGenericServices = reader.bool();\n                        break;\n                    case 17:\n                        message.javaGenericServices = reader.bool();\n                        break;\n                    case 18:\n                        message.pyGenericServices = reader.bool();\n                        break;\n                    case 23:\n                        message.deprecated = reader.bool();\n                        break;\n                    case 31:\n                        message.ccEnableArenas = reader.bool();\n                        break;\n                    case 36:\n                        message.objcClassPrefix = reader.string();\n                        break;\n                    case 37:\n                        message.csharpNamespace = reader.string();\n                        break;\n                    case 999:\n                        if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                            message.uninterpretedOption = [];\n                        message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FileOptions message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.FileOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.FileOptions} FileOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FileOptions.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FileOptions message.\n             * @function verify\n             * @memberof google.protobuf.FileOptions\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FileOptions.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.javaPackage != null && message.hasOwnProperty('javaPackage'))\n                    if (!$util.isString(message.javaPackage))\n                        return 'javaPackage: string expected';\n                if (message.javaOuterClassname != null && message.hasOwnProperty('javaOuterClassname'))\n                    if (!$util.isString(message.javaOuterClassname))\n                        return 'javaOuterClassname: string expected';\n                if (message.javaMultipleFiles != null && message.hasOwnProperty('javaMultipleFiles'))\n                    if (typeof message.javaMultipleFiles !== 'boolean')\n                        return 'javaMultipleFiles: boolean expected';\n                if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty('javaGenerateEqualsAndHash'))\n                    if (typeof message.javaGenerateEqualsAndHash !== 'boolean')\n                        return 'javaGenerateEqualsAndHash: boolean expected';\n                if (message.javaStringCheckUtf8 != null && message.hasOwnProperty('javaStringCheckUtf8'))\n                    if (typeof message.javaStringCheckUtf8 !== 'boolean')\n                        return 'javaStringCheckUtf8: boolean expected';\n                if (message.optimizeFor != null && message.hasOwnProperty('optimizeFor'))\n                    switch (message.optimizeFor) {\n                    default:\n                        return 'optimizeFor: enum value expected';\n                    case 1:\n                    case 2:\n                    case 3:\n                        break;\n                    }\n                if (message.goPackage != null && message.hasOwnProperty('goPackage'))\n                    if (!$util.isString(message.goPackage))\n                        return 'goPackage: string expected';\n                if (message.ccGenericServices != null && message.hasOwnProperty('ccGenericServices'))\n                    if (typeof message.ccGenericServices !== 'boolean')\n                        return 'ccGenericServices: boolean expected';\n                if (message.javaGenericServices != null && message.hasOwnProperty('javaGenericServices'))\n                    if (typeof message.javaGenericServices !== 'boolean')\n                        return 'javaGenericServices: boolean expected';\n                if (message.pyGenericServices != null && message.hasOwnProperty('pyGenericServices'))\n                    if (typeof message.pyGenericServices !== 'boolean')\n                        return 'pyGenericServices: boolean expected';\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    if (typeof message.deprecated !== 'boolean')\n                        return 'deprecated: boolean expected';\n                if (message.ccEnableArenas != null && message.hasOwnProperty('ccEnableArenas'))\n                    if (typeof message.ccEnableArenas !== 'boolean')\n                        return 'ccEnableArenas: boolean expected';\n                if (message.objcClassPrefix != null && message.hasOwnProperty('objcClassPrefix'))\n                    if (!$util.isString(message.objcClassPrefix))\n                        return 'objcClassPrefix: string expected';\n                if (message.csharpNamespace != null && message.hasOwnProperty('csharpNamespace'))\n                    if (!$util.isString(message.csharpNamespace))\n                        return 'csharpNamespace: string expected';\n                if (message.uninterpretedOption != null && message.hasOwnProperty('uninterpretedOption')) {\n                    if (!Array.isArray(message.uninterpretedOption))\n                        return 'uninterpretedOption: array expected';\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i) {\n                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                        if (error)\n                            return 'uninterpretedOption.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.FileOptions\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.FileOptions} FileOptions\n             */\n            FileOptions.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.FileOptions)\n                    return object;\n                let message = new $root.google.protobuf.FileOptions();\n                if (object.javaPackage != null)\n                    message.javaPackage = String(object.javaPackage);\n                if (object.javaOuterClassname != null)\n                    message.javaOuterClassname = String(object.javaOuterClassname);\n                if (object.javaMultipleFiles != null)\n                    message.javaMultipleFiles = Boolean(object.javaMultipleFiles);\n                if (object.javaGenerateEqualsAndHash != null)\n                    message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);\n                if (object.javaStringCheckUtf8 != null)\n                    message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);\n                switch (object.optimizeFor) {\n                case 'SPEED':\n                case 1:\n                    message.optimizeFor = 1;\n                    break;\n                case 'CODE_SIZE':\n                case 2:\n                    message.optimizeFor = 2;\n                    break;\n                case 'LITE_RUNTIME':\n                case 3:\n                    message.optimizeFor = 3;\n                    break;\n                }\n                if (object.goPackage != null)\n                    message.goPackage = String(object.goPackage);\n                if (object.ccGenericServices != null)\n                    message.ccGenericServices = Boolean(object.ccGenericServices);\n                if (object.javaGenericServices != null)\n                    message.javaGenericServices = Boolean(object.javaGenericServices);\n                if (object.pyGenericServices != null)\n                    message.pyGenericServices = Boolean(object.pyGenericServices);\n                if (object.deprecated != null)\n                    message.deprecated = Boolean(object.deprecated);\n                if (object.ccEnableArenas != null)\n                    message.ccEnableArenas = Boolean(object.ccEnableArenas);\n                if (object.objcClassPrefix != null)\n                    message.objcClassPrefix = String(object.objcClassPrefix);\n                if (object.csharpNamespace != null)\n                    message.csharpNamespace = String(object.csharpNamespace);\n                if (object.uninterpretedOption) {\n                    if (!Array.isArray(object.uninterpretedOption))\n                        throw TypeError('.google.protobuf.FileOptions.uninterpretedOption: array expected');\n                    message.uninterpretedOption = [];\n                    for (let i = 0; i < object.uninterpretedOption.length; ++i) {\n                        if (typeof object.uninterpretedOption[i] !== 'object')\n                            throw TypeError('.google.protobuf.FileOptions.uninterpretedOption: object expected');\n                        message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a FileOptions message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.FileOptions\n             * @static\n             * @param {google.protobuf.FileOptions} message FileOptions\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FileOptions.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.uninterpretedOption = [];\n                if (options.defaults) {\n                    object.javaPackage = '';\n                    object.javaOuterClassname = '';\n                    object.optimizeFor = options.enums === String ? 'SPEED' : 1;\n                    object.javaMultipleFiles = false;\n                    object.goPackage = '';\n                    object.ccGenericServices = false;\n                    object.javaGenericServices = false;\n                    object.pyGenericServices = false;\n                    object.javaGenerateEqualsAndHash = false;\n                    object.deprecated = false;\n                    object.javaStringCheckUtf8 = false;\n                    object.ccEnableArenas = false;\n                    object.objcClassPrefix = '';\n                    object.csharpNamespace = '';\n                }\n                if (message.javaPackage != null && message.hasOwnProperty('javaPackage'))\n                    object.javaPackage = message.javaPackage;\n                if (message.javaOuterClassname != null && message.hasOwnProperty('javaOuterClassname'))\n                    object.javaOuterClassname = message.javaOuterClassname;\n                if (message.optimizeFor != null && message.hasOwnProperty('optimizeFor'))\n                    object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;\n                if (message.javaMultipleFiles != null && message.hasOwnProperty('javaMultipleFiles'))\n                    object.javaMultipleFiles = message.javaMultipleFiles;\n                if (message.goPackage != null && message.hasOwnProperty('goPackage'))\n                    object.goPackage = message.goPackage;\n                if (message.ccGenericServices != null && message.hasOwnProperty('ccGenericServices'))\n                    object.ccGenericServices = message.ccGenericServices;\n                if (message.javaGenericServices != null && message.hasOwnProperty('javaGenericServices'))\n                    object.javaGenericServices = message.javaGenericServices;\n                if (message.pyGenericServices != null && message.hasOwnProperty('pyGenericServices'))\n                    object.pyGenericServices = message.pyGenericServices;\n                if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty('javaGenerateEqualsAndHash'))\n                    object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    object.deprecated = message.deprecated;\n                if (message.javaStringCheckUtf8 != null && message.hasOwnProperty('javaStringCheckUtf8'))\n                    object.javaStringCheckUtf8 = message.javaStringCheckUtf8;\n                if (message.ccEnableArenas != null && message.hasOwnProperty('ccEnableArenas'))\n                    object.ccEnableArenas = message.ccEnableArenas;\n                if (message.objcClassPrefix != null && message.hasOwnProperty('objcClassPrefix'))\n                    object.objcClassPrefix = message.objcClassPrefix;\n                if (message.csharpNamespace != null && message.hasOwnProperty('csharpNamespace'))\n                    object.csharpNamespace = message.csharpNamespace;\n                if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                    object.uninterpretedOption = [];\n                    for (let j = 0; j < message.uninterpretedOption.length; ++j)\n                        object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this FileOptions to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.FileOptions\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FileOptions.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * OptimizeMode enum.\n             * @name google.protobuf.FileOptions.OptimizeMode\n             * @enum {string}\n             * @property {number} SPEED=1 SPEED value\n             * @property {number} CODE_SIZE=2 CODE_SIZE value\n             * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value\n             */\n            FileOptions.OptimizeMode = (function () {\n                const valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[1] = 'SPEED'] = 1;\n                values[valuesById[2] = 'CODE_SIZE'] = 2;\n                values[valuesById[3] = 'LITE_RUNTIME'] = 3;\n                return values;\n            })();\n\n            return FileOptions;\n        })();\n\n        protobuf.MessageOptions = (function () {\n\n            /**\n             * Properties of a MessageOptions.\n             * @memberof google.protobuf\n             * @interface IMessageOptions\n             * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat\n             * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor\n             * @property {boolean|null} [deprecated] MessageOptions deprecated\n             * @property {boolean|null} [mapEntry] MessageOptions mapEntry\n             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption\n             */\n\n            /**\n             * Constructs a new MessageOptions.\n             * @memberof google.protobuf\n             * @classdesc Represents a MessageOptions.\n             * @implements IMessageOptions\n             * @constructor\n             * @param {google.protobuf.IMessageOptions=} [properties] Properties to set\n             */\n            function MessageOptions(properties) {\n                this.uninterpretedOption = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * MessageOptions messageSetWireFormat.\n             * @member {boolean} messageSetWireFormat\n             * @memberof google.protobuf.MessageOptions\n             * @instance\n             */\n            MessageOptions.prototype.messageSetWireFormat = false;\n\n            /**\n             * MessageOptions noStandardDescriptorAccessor.\n             * @member {boolean} noStandardDescriptorAccessor\n             * @memberof google.protobuf.MessageOptions\n             * @instance\n             */\n            MessageOptions.prototype.noStandardDescriptorAccessor = false;\n\n            /**\n             * MessageOptions deprecated.\n             * @member {boolean} deprecated\n             * @memberof google.protobuf.MessageOptions\n             * @instance\n             */\n            MessageOptions.prototype.deprecated = false;\n\n            /**\n             * MessageOptions mapEntry.\n             * @member {boolean} mapEntry\n             * @memberof google.protobuf.MessageOptions\n             * @instance\n             */\n            MessageOptions.prototype.mapEntry = false;\n\n            /**\n             * MessageOptions uninterpretedOption.\n             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n             * @memberof google.protobuf.MessageOptions\n             * @instance\n             */\n            MessageOptions.prototype.uninterpretedOption = $util.emptyArray;\n\n            /**\n             * Creates a new MessageOptions instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.MessageOptions\n             * @static\n             * @param {google.protobuf.IMessageOptions=} [properties] Properties to set\n             * @returns {google.protobuf.MessageOptions} MessageOptions instance\n             */\n            MessageOptions.create = function create(properties) {\n                return new MessageOptions(properties);\n            };\n\n            /**\n             * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.MessageOptions\n             * @static\n             * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MessageOptions.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.messageSetWireFormat != null && message.hasOwnProperty('messageSetWireFormat'))\n                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);\n                if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty('noStandardDescriptorAccessor'))\n                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);\n                if (message.mapEntry != null && message.hasOwnProperty('mapEntry'))\n                    writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);\n                if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i)\n                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.MessageOptions\n             * @static\n             * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a MessageOptions message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.MessageOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.MessageOptions} MessageOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MessageOptions.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.messageSetWireFormat = reader.bool();\n                        break;\n                    case 2:\n                        message.noStandardDescriptorAccessor = reader.bool();\n                        break;\n                    case 3:\n                        message.deprecated = reader.bool();\n                        break;\n                    case 7:\n                        message.mapEntry = reader.bool();\n                        break;\n                    case 999:\n                        if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                            message.uninterpretedOption = [];\n                        message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a MessageOptions message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.MessageOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.MessageOptions} MessageOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MessageOptions.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a MessageOptions message.\n             * @function verify\n             * @memberof google.protobuf.MessageOptions\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MessageOptions.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.messageSetWireFormat != null && message.hasOwnProperty('messageSetWireFormat'))\n                    if (typeof message.messageSetWireFormat !== 'boolean')\n                        return 'messageSetWireFormat: boolean expected';\n                if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty('noStandardDescriptorAccessor'))\n                    if (typeof message.noStandardDescriptorAccessor !== 'boolean')\n                        return 'noStandardDescriptorAccessor: boolean expected';\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    if (typeof message.deprecated !== 'boolean')\n                        return 'deprecated: boolean expected';\n                if (message.mapEntry != null && message.hasOwnProperty('mapEntry'))\n                    if (typeof message.mapEntry !== 'boolean')\n                        return 'mapEntry: boolean expected';\n                if (message.uninterpretedOption != null && message.hasOwnProperty('uninterpretedOption')) {\n                    if (!Array.isArray(message.uninterpretedOption))\n                        return 'uninterpretedOption: array expected';\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i) {\n                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                        if (error)\n                            return 'uninterpretedOption.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.MessageOptions\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.MessageOptions} MessageOptions\n             */\n            MessageOptions.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.MessageOptions)\n                    return object;\n                let message = new $root.google.protobuf.MessageOptions();\n                if (object.messageSetWireFormat != null)\n                    message.messageSetWireFormat = Boolean(object.messageSetWireFormat);\n                if (object.noStandardDescriptorAccessor != null)\n                    message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);\n                if (object.deprecated != null)\n                    message.deprecated = Boolean(object.deprecated);\n                if (object.mapEntry != null)\n                    message.mapEntry = Boolean(object.mapEntry);\n                if (object.uninterpretedOption) {\n                    if (!Array.isArray(object.uninterpretedOption))\n                        throw TypeError('.google.protobuf.MessageOptions.uninterpretedOption: array expected');\n                    message.uninterpretedOption = [];\n                    for (let i = 0; i < object.uninterpretedOption.length; ++i) {\n                        if (typeof object.uninterpretedOption[i] !== 'object')\n                            throw TypeError('.google.protobuf.MessageOptions.uninterpretedOption: object expected');\n                        message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.MessageOptions\n             * @static\n             * @param {google.protobuf.MessageOptions} message MessageOptions\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MessageOptions.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.uninterpretedOption = [];\n                if (options.defaults) {\n                    object.messageSetWireFormat = false;\n                    object.noStandardDescriptorAccessor = false;\n                    object.deprecated = false;\n                    object.mapEntry = false;\n                }\n                if (message.messageSetWireFormat != null && message.hasOwnProperty('messageSetWireFormat'))\n                    object.messageSetWireFormat = message.messageSetWireFormat;\n                if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty('noStandardDescriptorAccessor'))\n                    object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    object.deprecated = message.deprecated;\n                if (message.mapEntry != null && message.hasOwnProperty('mapEntry'))\n                    object.mapEntry = message.mapEntry;\n                if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                    object.uninterpretedOption = [];\n                    for (let j = 0; j < message.uninterpretedOption.length; ++j)\n                        object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this MessageOptions to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.MessageOptions\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MessageOptions.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return MessageOptions;\n        })();\n\n        protobuf.FieldOptions = (function () {\n\n            /**\n             * Properties of a FieldOptions.\n             * @memberof google.protobuf\n             * @interface IFieldOptions\n             * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype\n             * @property {boolean|null} [packed] FieldOptions packed\n             * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype\n             * @property {boolean|null} [lazy] FieldOptions lazy\n             * @property {boolean|null} [deprecated] FieldOptions deprecated\n             * @property {boolean|null} [weak] FieldOptions weak\n             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption\n             */\n\n            /**\n             * Constructs a new FieldOptions.\n             * @memberof google.protobuf\n             * @classdesc Represents a FieldOptions.\n             * @implements IFieldOptions\n             * @constructor\n             * @param {google.protobuf.IFieldOptions=} [properties] Properties to set\n             */\n            function FieldOptions(properties) {\n                this.uninterpretedOption = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FieldOptions ctype.\n             * @member {google.protobuf.FieldOptions.CType} ctype\n             * @memberof google.protobuf.FieldOptions\n             * @instance\n             */\n            FieldOptions.prototype.ctype = 0;\n\n            /**\n             * FieldOptions packed.\n             * @member {boolean} packed\n             * @memberof google.protobuf.FieldOptions\n             * @instance\n             */\n            FieldOptions.prototype.packed = false;\n\n            /**\n             * FieldOptions jstype.\n             * @member {google.protobuf.FieldOptions.JSType} jstype\n             * @memberof google.protobuf.FieldOptions\n             * @instance\n             */\n            FieldOptions.prototype.jstype = 0;\n\n            /**\n             * FieldOptions lazy.\n             * @member {boolean} lazy\n             * @memberof google.protobuf.FieldOptions\n             * @instance\n             */\n            FieldOptions.prototype.lazy = false;\n\n            /**\n             * FieldOptions deprecated.\n             * @member {boolean} deprecated\n             * @memberof google.protobuf.FieldOptions\n             * @instance\n             */\n            FieldOptions.prototype.deprecated = false;\n\n            /**\n             * FieldOptions weak.\n             * @member {boolean} weak\n             * @memberof google.protobuf.FieldOptions\n             * @instance\n             */\n            FieldOptions.prototype.weak = false;\n\n            /**\n             * FieldOptions uninterpretedOption.\n             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n             * @memberof google.protobuf.FieldOptions\n             * @instance\n             */\n            FieldOptions.prototype.uninterpretedOption = $util.emptyArray;\n\n            /**\n             * Creates a new FieldOptions instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.FieldOptions\n             * @static\n             * @param {google.protobuf.IFieldOptions=} [properties] Properties to set\n             * @returns {google.protobuf.FieldOptions} FieldOptions instance\n             */\n            FieldOptions.create = function create(properties) {\n                return new FieldOptions(properties);\n            };\n\n            /**\n             * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.FieldOptions\n             * @static\n             * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FieldOptions.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ctype != null && message.hasOwnProperty('ctype'))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);\n                if (message.packed != null && message.hasOwnProperty('packed'))\n                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);\n                if (message.lazy != null && message.hasOwnProperty('lazy'))\n                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);\n                if (message.jstype != null && message.hasOwnProperty('jstype'))\n                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);\n                if (message.weak != null && message.hasOwnProperty('weak'))\n                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);\n                if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i)\n                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.FieldOptions\n             * @static\n             * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FieldOptions message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.FieldOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.FieldOptions} FieldOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FieldOptions.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.ctype = reader.int32();\n                        break;\n                    case 2:\n                        message.packed = reader.bool();\n                        break;\n                    case 6:\n                        message.jstype = reader.int32();\n                        break;\n                    case 5:\n                        message.lazy = reader.bool();\n                        break;\n                    case 3:\n                        message.deprecated = reader.bool();\n                        break;\n                    case 10:\n                        message.weak = reader.bool();\n                        break;\n                    case 999:\n                        if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                            message.uninterpretedOption = [];\n                        message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FieldOptions message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.FieldOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.FieldOptions} FieldOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FieldOptions.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FieldOptions message.\n             * @function verify\n             * @memberof google.protobuf.FieldOptions\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FieldOptions.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.ctype != null && message.hasOwnProperty('ctype'))\n                    switch (message.ctype) {\n                    default:\n                        return 'ctype: enum value expected';\n                    case 0:\n                    case 1:\n                    case 2:\n                        break;\n                    }\n                if (message.packed != null && message.hasOwnProperty('packed'))\n                    if (typeof message.packed !== 'boolean')\n                        return 'packed: boolean expected';\n                if (message.jstype != null && message.hasOwnProperty('jstype'))\n                    switch (message.jstype) {\n                    default:\n                        return 'jstype: enum value expected';\n                    case 0:\n                    case 1:\n                    case 2:\n                        break;\n                    }\n                if (message.lazy != null && message.hasOwnProperty('lazy'))\n                    if (typeof message.lazy !== 'boolean')\n                        return 'lazy: boolean expected';\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    if (typeof message.deprecated !== 'boolean')\n                        return 'deprecated: boolean expected';\n                if (message.weak != null && message.hasOwnProperty('weak'))\n                    if (typeof message.weak !== 'boolean')\n                        return 'weak: boolean expected';\n                if (message.uninterpretedOption != null && message.hasOwnProperty('uninterpretedOption')) {\n                    if (!Array.isArray(message.uninterpretedOption))\n                        return 'uninterpretedOption: array expected';\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i) {\n                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                        if (error)\n                            return 'uninterpretedOption.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.FieldOptions\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.FieldOptions} FieldOptions\n             */\n            FieldOptions.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.FieldOptions)\n                    return object;\n                let message = new $root.google.protobuf.FieldOptions();\n                switch (object.ctype) {\n                case 'STRING':\n                case 0:\n                    message.ctype = 0;\n                    break;\n                case 'CORD':\n                case 1:\n                    message.ctype = 1;\n                    break;\n                case 'STRING_PIECE':\n                case 2:\n                    message.ctype = 2;\n                    break;\n                }\n                if (object.packed != null)\n                    message.packed = Boolean(object.packed);\n                switch (object.jstype) {\n                case 'JS_NORMAL':\n                case 0:\n                    message.jstype = 0;\n                    break;\n                case 'JS_STRING':\n                case 1:\n                    message.jstype = 1;\n                    break;\n                case 'JS_NUMBER':\n                case 2:\n                    message.jstype = 2;\n                    break;\n                }\n                if (object.lazy != null)\n                    message.lazy = Boolean(object.lazy);\n                if (object.deprecated != null)\n                    message.deprecated = Boolean(object.deprecated);\n                if (object.weak != null)\n                    message.weak = Boolean(object.weak);\n                if (object.uninterpretedOption) {\n                    if (!Array.isArray(object.uninterpretedOption))\n                        throw TypeError('.google.protobuf.FieldOptions.uninterpretedOption: array expected');\n                    message.uninterpretedOption = [];\n                    for (let i = 0; i < object.uninterpretedOption.length; ++i) {\n                        if (typeof object.uninterpretedOption[i] !== 'object')\n                            throw TypeError('.google.protobuf.FieldOptions.uninterpretedOption: object expected');\n                        message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.FieldOptions\n             * @static\n             * @param {google.protobuf.FieldOptions} message FieldOptions\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FieldOptions.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.uninterpretedOption = [];\n                if (options.defaults) {\n                    object.ctype = options.enums === String ? 'STRING' : 0;\n                    object.packed = false;\n                    object.deprecated = false;\n                    object.lazy = false;\n                    object.jstype = options.enums === String ? 'JS_NORMAL' : 0;\n                    object.weak = false;\n                }\n                if (message.ctype != null && message.hasOwnProperty('ctype'))\n                    object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;\n                if (message.packed != null && message.hasOwnProperty('packed'))\n                    object.packed = message.packed;\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    object.deprecated = message.deprecated;\n                if (message.lazy != null && message.hasOwnProperty('lazy'))\n                    object.lazy = message.lazy;\n                if (message.jstype != null && message.hasOwnProperty('jstype'))\n                    object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;\n                if (message.weak != null && message.hasOwnProperty('weak'))\n                    object.weak = message.weak;\n                if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                    object.uninterpretedOption = [];\n                    for (let j = 0; j < message.uninterpretedOption.length; ++j)\n                        object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this FieldOptions to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.FieldOptions\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FieldOptions.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * CType enum.\n             * @name google.protobuf.FieldOptions.CType\n             * @enum {string}\n             * @property {number} STRING=0 STRING value\n             * @property {number} CORD=1 CORD value\n             * @property {number} STRING_PIECE=2 STRING_PIECE value\n             */\n            FieldOptions.CType = (function () {\n                const valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[0] = 'STRING'] = 0;\n                values[valuesById[1] = 'CORD'] = 1;\n                values[valuesById[2] = 'STRING_PIECE'] = 2;\n                return values;\n            })();\n\n            /**\n             * JSType enum.\n             * @name google.protobuf.FieldOptions.JSType\n             * @enum {string}\n             * @property {number} JS_NORMAL=0 JS_NORMAL value\n             * @property {number} JS_STRING=1 JS_STRING value\n             * @property {number} JS_NUMBER=2 JS_NUMBER value\n             */\n            FieldOptions.JSType = (function () {\n                const valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[0] = 'JS_NORMAL'] = 0;\n                values[valuesById[1] = 'JS_STRING'] = 1;\n                values[valuesById[2] = 'JS_NUMBER'] = 2;\n                return values;\n            })();\n\n            return FieldOptions;\n        })();\n\n        protobuf.OneofOptions = (function () {\n\n            /**\n             * Properties of an OneofOptions.\n             * @memberof google.protobuf\n             * @interface IOneofOptions\n             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption\n             */\n\n            /**\n             * Constructs a new OneofOptions.\n             * @memberof google.protobuf\n             * @classdesc Represents an OneofOptions.\n             * @implements IOneofOptions\n             * @constructor\n             * @param {google.protobuf.IOneofOptions=} [properties] Properties to set\n             */\n            function OneofOptions(properties) {\n                this.uninterpretedOption = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * OneofOptions uninterpretedOption.\n             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n             * @memberof google.protobuf.OneofOptions\n             * @instance\n             */\n            OneofOptions.prototype.uninterpretedOption = $util.emptyArray;\n\n            /**\n             * Creates a new OneofOptions instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.OneofOptions\n             * @static\n             * @param {google.protobuf.IOneofOptions=} [properties] Properties to set\n             * @returns {google.protobuf.OneofOptions} OneofOptions instance\n             */\n            OneofOptions.create = function create(properties) {\n                return new OneofOptions(properties);\n            };\n\n            /**\n             * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.OneofOptions\n             * @static\n             * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OneofOptions.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i)\n                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.OneofOptions\n             * @static\n             * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an OneofOptions message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.OneofOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.OneofOptions} OneofOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OneofOptions.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 999:\n                        if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                            message.uninterpretedOption = [];\n                        message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an OneofOptions message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.OneofOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.OneofOptions} OneofOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OneofOptions.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an OneofOptions message.\n             * @function verify\n             * @memberof google.protobuf.OneofOptions\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OneofOptions.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.uninterpretedOption != null && message.hasOwnProperty('uninterpretedOption')) {\n                    if (!Array.isArray(message.uninterpretedOption))\n                        return 'uninterpretedOption: array expected';\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i) {\n                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                        if (error)\n                            return 'uninterpretedOption.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.OneofOptions\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.OneofOptions} OneofOptions\n             */\n            OneofOptions.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.OneofOptions)\n                    return object;\n                let message = new $root.google.protobuf.OneofOptions();\n                if (object.uninterpretedOption) {\n                    if (!Array.isArray(object.uninterpretedOption))\n                        throw TypeError('.google.protobuf.OneofOptions.uninterpretedOption: array expected');\n                    message.uninterpretedOption = [];\n                    for (let i = 0; i < object.uninterpretedOption.length; ++i) {\n                        if (typeof object.uninterpretedOption[i] !== 'object')\n                            throw TypeError('.google.protobuf.OneofOptions.uninterpretedOption: object expected');\n                        message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.OneofOptions\n             * @static\n             * @param {google.protobuf.OneofOptions} message OneofOptions\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OneofOptions.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.uninterpretedOption = [];\n                if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                    object.uninterpretedOption = [];\n                    for (let j = 0; j < message.uninterpretedOption.length; ++j)\n                        object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this OneofOptions to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.OneofOptions\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OneofOptions.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return OneofOptions;\n        })();\n\n        protobuf.EnumOptions = (function () {\n\n            /**\n             * Properties of an EnumOptions.\n             * @memberof google.protobuf\n             * @interface IEnumOptions\n             * @property {boolean|null} [allowAlias] EnumOptions allowAlias\n             * @property {boolean|null} [deprecated] EnumOptions deprecated\n             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption\n             */\n\n            /**\n             * Constructs a new EnumOptions.\n             * @memberof google.protobuf\n             * @classdesc Represents an EnumOptions.\n             * @implements IEnumOptions\n             * @constructor\n             * @param {google.protobuf.IEnumOptions=} [properties] Properties to set\n             */\n            function EnumOptions(properties) {\n                this.uninterpretedOption = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * EnumOptions allowAlias.\n             * @member {boolean} allowAlias\n             * @memberof google.protobuf.EnumOptions\n             * @instance\n             */\n            EnumOptions.prototype.allowAlias = false;\n\n            /**\n             * EnumOptions deprecated.\n             * @member {boolean} deprecated\n             * @memberof google.protobuf.EnumOptions\n             * @instance\n             */\n            EnumOptions.prototype.deprecated = false;\n\n            /**\n             * EnumOptions uninterpretedOption.\n             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n             * @memberof google.protobuf.EnumOptions\n             * @instance\n             */\n            EnumOptions.prototype.uninterpretedOption = $util.emptyArray;\n\n            /**\n             * Creates a new EnumOptions instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.EnumOptions\n             * @static\n             * @param {google.protobuf.IEnumOptions=} [properties] Properties to set\n             * @returns {google.protobuf.EnumOptions} EnumOptions instance\n             */\n            EnumOptions.create = function create(properties) {\n                return new EnumOptions(properties);\n            };\n\n            /**\n             * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.EnumOptions\n             * @static\n             * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            EnumOptions.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.allowAlias != null && message.hasOwnProperty('allowAlias'))\n                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);\n                if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i)\n                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.EnumOptions\n             * @static\n             * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an EnumOptions message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.EnumOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.EnumOptions} EnumOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            EnumOptions.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 2:\n                        message.allowAlias = reader.bool();\n                        break;\n                    case 3:\n                        message.deprecated = reader.bool();\n                        break;\n                    case 999:\n                        if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                            message.uninterpretedOption = [];\n                        message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an EnumOptions message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.EnumOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.EnumOptions} EnumOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            EnumOptions.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an EnumOptions message.\n             * @function verify\n             * @memberof google.protobuf.EnumOptions\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            EnumOptions.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.allowAlias != null && message.hasOwnProperty('allowAlias'))\n                    if (typeof message.allowAlias !== 'boolean')\n                        return 'allowAlias: boolean expected';\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    if (typeof message.deprecated !== 'boolean')\n                        return 'deprecated: boolean expected';\n                if (message.uninterpretedOption != null && message.hasOwnProperty('uninterpretedOption')) {\n                    if (!Array.isArray(message.uninterpretedOption))\n                        return 'uninterpretedOption: array expected';\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i) {\n                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                        if (error)\n                            return 'uninterpretedOption.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.EnumOptions\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.EnumOptions} EnumOptions\n             */\n            EnumOptions.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.EnumOptions)\n                    return object;\n                let message = new $root.google.protobuf.EnumOptions();\n                if (object.allowAlias != null)\n                    message.allowAlias = Boolean(object.allowAlias);\n                if (object.deprecated != null)\n                    message.deprecated = Boolean(object.deprecated);\n                if (object.uninterpretedOption) {\n                    if (!Array.isArray(object.uninterpretedOption))\n                        throw TypeError('.google.protobuf.EnumOptions.uninterpretedOption: array expected');\n                    message.uninterpretedOption = [];\n                    for (let i = 0; i < object.uninterpretedOption.length; ++i) {\n                        if (typeof object.uninterpretedOption[i] !== 'object')\n                            throw TypeError('.google.protobuf.EnumOptions.uninterpretedOption: object expected');\n                        message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.EnumOptions\n             * @static\n             * @param {google.protobuf.EnumOptions} message EnumOptions\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            EnumOptions.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.uninterpretedOption = [];\n                if (options.defaults) {\n                    object.allowAlias = false;\n                    object.deprecated = false;\n                }\n                if (message.allowAlias != null && message.hasOwnProperty('allowAlias'))\n                    object.allowAlias = message.allowAlias;\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    object.deprecated = message.deprecated;\n                if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                    object.uninterpretedOption = [];\n                    for (let j = 0; j < message.uninterpretedOption.length; ++j)\n                        object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this EnumOptions to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.EnumOptions\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            EnumOptions.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return EnumOptions;\n        })();\n\n        protobuf.EnumValueOptions = (function () {\n\n            /**\n             * Properties of an EnumValueOptions.\n             * @memberof google.protobuf\n             * @interface IEnumValueOptions\n             * @property {boolean|null} [deprecated] EnumValueOptions deprecated\n             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption\n             */\n\n            /**\n             * Constructs a new EnumValueOptions.\n             * @memberof google.protobuf\n             * @classdesc Represents an EnumValueOptions.\n             * @implements IEnumValueOptions\n             * @constructor\n             * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set\n             */\n            function EnumValueOptions(properties) {\n                this.uninterpretedOption = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * EnumValueOptions deprecated.\n             * @member {boolean} deprecated\n             * @memberof google.protobuf.EnumValueOptions\n             * @instance\n             */\n            EnumValueOptions.prototype.deprecated = false;\n\n            /**\n             * EnumValueOptions uninterpretedOption.\n             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n             * @memberof google.protobuf.EnumValueOptions\n             * @instance\n             */\n            EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;\n\n            /**\n             * Creates a new EnumValueOptions instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.EnumValueOptions\n             * @static\n             * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set\n             * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance\n             */\n            EnumValueOptions.create = function create(properties) {\n                return new EnumValueOptions(properties);\n            };\n\n            /**\n             * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.EnumValueOptions\n             * @static\n             * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            EnumValueOptions.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);\n                if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i)\n                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.EnumValueOptions\n             * @static\n             * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an EnumValueOptions message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.EnumValueOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.EnumValueOptions} EnumValueOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            EnumValueOptions.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.deprecated = reader.bool();\n                        break;\n                    case 999:\n                        if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                            message.uninterpretedOption = [];\n                        message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.EnumValueOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.EnumValueOptions} EnumValueOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an EnumValueOptions message.\n             * @function verify\n             * @memberof google.protobuf.EnumValueOptions\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            EnumValueOptions.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    if (typeof message.deprecated !== 'boolean')\n                        return 'deprecated: boolean expected';\n                if (message.uninterpretedOption != null && message.hasOwnProperty('uninterpretedOption')) {\n                    if (!Array.isArray(message.uninterpretedOption))\n                        return 'uninterpretedOption: array expected';\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i) {\n                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                        if (error)\n                            return 'uninterpretedOption.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.EnumValueOptions\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.EnumValueOptions} EnumValueOptions\n             */\n            EnumValueOptions.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.EnumValueOptions)\n                    return object;\n                let message = new $root.google.protobuf.EnumValueOptions();\n                if (object.deprecated != null)\n                    message.deprecated = Boolean(object.deprecated);\n                if (object.uninterpretedOption) {\n                    if (!Array.isArray(object.uninterpretedOption))\n                        throw TypeError('.google.protobuf.EnumValueOptions.uninterpretedOption: array expected');\n                    message.uninterpretedOption = [];\n                    for (let i = 0; i < object.uninterpretedOption.length; ++i) {\n                        if (typeof object.uninterpretedOption[i] !== 'object')\n                            throw TypeError('.google.protobuf.EnumValueOptions.uninterpretedOption: object expected');\n                        message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.EnumValueOptions\n             * @static\n             * @param {google.protobuf.EnumValueOptions} message EnumValueOptions\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            EnumValueOptions.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.uninterpretedOption = [];\n                if (options.defaults)\n                    object.deprecated = false;\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    object.deprecated = message.deprecated;\n                if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                    object.uninterpretedOption = [];\n                    for (let j = 0; j < message.uninterpretedOption.length; ++j)\n                        object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this EnumValueOptions to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.EnumValueOptions\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            EnumValueOptions.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return EnumValueOptions;\n        })();\n\n        protobuf.ServiceOptions = (function () {\n\n            /**\n             * Properties of a ServiceOptions.\n             * @memberof google.protobuf\n             * @interface IServiceOptions\n             * @property {boolean|null} [deprecated] ServiceOptions deprecated\n             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption\n             */\n\n            /**\n             * Constructs a new ServiceOptions.\n             * @memberof google.protobuf\n             * @classdesc Represents a ServiceOptions.\n             * @implements IServiceOptions\n             * @constructor\n             * @param {google.protobuf.IServiceOptions=} [properties] Properties to set\n             */\n            function ServiceOptions(properties) {\n                this.uninterpretedOption = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ServiceOptions deprecated.\n             * @member {boolean} deprecated\n             * @memberof google.protobuf.ServiceOptions\n             * @instance\n             */\n            ServiceOptions.prototype.deprecated = false;\n\n            /**\n             * ServiceOptions uninterpretedOption.\n             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n             * @memberof google.protobuf.ServiceOptions\n             * @instance\n             */\n            ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;\n\n            /**\n             * Creates a new ServiceOptions instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.ServiceOptions\n             * @static\n             * @param {google.protobuf.IServiceOptions=} [properties] Properties to set\n             * @returns {google.protobuf.ServiceOptions} ServiceOptions instance\n             */\n            ServiceOptions.create = function create(properties) {\n                return new ServiceOptions(properties);\n            };\n\n            /**\n             * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.ServiceOptions\n             * @static\n             * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ServiceOptions.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);\n                if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i)\n                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.ServiceOptions\n             * @static\n             * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ServiceOptions message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.ServiceOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.ServiceOptions} ServiceOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ServiceOptions.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 33:\n                        message.deprecated = reader.bool();\n                        break;\n                    case 999:\n                        if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                            message.uninterpretedOption = [];\n                        message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.ServiceOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.ServiceOptions} ServiceOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ServiceOptions.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ServiceOptions message.\n             * @function verify\n             * @memberof google.protobuf.ServiceOptions\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ServiceOptions.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    if (typeof message.deprecated !== 'boolean')\n                        return 'deprecated: boolean expected';\n                if (message.uninterpretedOption != null && message.hasOwnProperty('uninterpretedOption')) {\n                    if (!Array.isArray(message.uninterpretedOption))\n                        return 'uninterpretedOption: array expected';\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i) {\n                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                        if (error)\n                            return 'uninterpretedOption.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.ServiceOptions\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.ServiceOptions} ServiceOptions\n             */\n            ServiceOptions.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.ServiceOptions)\n                    return object;\n                let message = new $root.google.protobuf.ServiceOptions();\n                if (object.deprecated != null)\n                    message.deprecated = Boolean(object.deprecated);\n                if (object.uninterpretedOption) {\n                    if (!Array.isArray(object.uninterpretedOption))\n                        throw TypeError('.google.protobuf.ServiceOptions.uninterpretedOption: array expected');\n                    message.uninterpretedOption = [];\n                    for (let i = 0; i < object.uninterpretedOption.length; ++i) {\n                        if (typeof object.uninterpretedOption[i] !== 'object')\n                            throw TypeError('.google.protobuf.ServiceOptions.uninterpretedOption: object expected');\n                        message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.ServiceOptions\n             * @static\n             * @param {google.protobuf.ServiceOptions} message ServiceOptions\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ServiceOptions.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.uninterpretedOption = [];\n                if (options.defaults)\n                    object.deprecated = false;\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    object.deprecated = message.deprecated;\n                if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                    object.uninterpretedOption = [];\n                    for (let j = 0; j < message.uninterpretedOption.length; ++j)\n                        object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this ServiceOptions to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.ServiceOptions\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ServiceOptions.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ServiceOptions;\n        })();\n\n        protobuf.MethodOptions = (function () {\n\n            /**\n             * Properties of a MethodOptions.\n             * @memberof google.protobuf\n             * @interface IMethodOptions\n             * @property {boolean|null} [deprecated] MethodOptions deprecated\n             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption\n             * @property {google.api.IHttpRule|null} [\".google.api.http\"] MethodOptions .google.api.http\n             */\n\n            /**\n             * Constructs a new MethodOptions.\n             * @memberof google.protobuf\n             * @classdesc Represents a MethodOptions.\n             * @implements IMethodOptions\n             * @constructor\n             * @param {google.protobuf.IMethodOptions=} [properties] Properties to set\n             */\n            function MethodOptions(properties) {\n                this.uninterpretedOption = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * MethodOptions deprecated.\n             * @member {boolean} deprecated\n             * @memberof google.protobuf.MethodOptions\n             * @instance\n             */\n            MethodOptions.prototype.deprecated = false;\n\n            /**\n             * MethodOptions uninterpretedOption.\n             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n             * @memberof google.protobuf.MethodOptions\n             * @instance\n             */\n            MethodOptions.prototype.uninterpretedOption = $util.emptyArray;\n\n            /**\n             * MethodOptions .google.api.http.\n             * @member {google.api.IHttpRule|null|undefined} .google.api.http\n             * @memberof google.protobuf.MethodOptions\n             * @instance\n             */\n            MethodOptions.prototype['.google.api.http'] = null;\n\n            /**\n             * Creates a new MethodOptions instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.MethodOptions\n             * @static\n             * @param {google.protobuf.IMethodOptions=} [properties] Properties to set\n             * @returns {google.protobuf.MethodOptions} MethodOptions instance\n             */\n            MethodOptions.create = function create(properties) {\n                return new MethodOptions(properties);\n            };\n\n            /**\n             * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.MethodOptions\n             * @static\n             * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MethodOptions.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);\n                if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i)\n                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                if (message['.google.api.http'] != null && message.hasOwnProperty('.google.api.http'))\n                    $root.google.api.HttpRule.encode(message['.google.api.http'], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.MethodOptions\n             * @static\n             * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a MethodOptions message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.MethodOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.MethodOptions} MethodOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MethodOptions.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 33:\n                        message.deprecated = reader.bool();\n                        break;\n                    case 999:\n                        if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                            message.uninterpretedOption = [];\n                        message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                        break;\n                    case 72295728:\n                        message['.google.api.http'] = $root.google.api.HttpRule.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a MethodOptions message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.MethodOptions\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.MethodOptions} MethodOptions\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MethodOptions.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a MethodOptions message.\n             * @function verify\n             * @memberof google.protobuf.MethodOptions\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MethodOptions.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    if (typeof message.deprecated !== 'boolean')\n                        return 'deprecated: boolean expected';\n                if (message.uninterpretedOption != null && message.hasOwnProperty('uninterpretedOption')) {\n                    if (!Array.isArray(message.uninterpretedOption))\n                        return 'uninterpretedOption: array expected';\n                    for (let i = 0; i < message.uninterpretedOption.length; ++i) {\n                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                        if (error)\n                            return 'uninterpretedOption.' + error;\n                    }\n                }\n                if (message['.google.api.http'] != null && message.hasOwnProperty('.google.api.http')) {\n                    let error = $root.google.api.HttpRule.verify(message['.google.api.http']);\n                    if (error)\n                        return '.google.api.http.' + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.MethodOptions\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.MethodOptions} MethodOptions\n             */\n            MethodOptions.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.MethodOptions)\n                    return object;\n                let message = new $root.google.protobuf.MethodOptions();\n                if (object.deprecated != null)\n                    message.deprecated = Boolean(object.deprecated);\n                if (object.uninterpretedOption) {\n                    if (!Array.isArray(object.uninterpretedOption))\n                        throw TypeError('.google.protobuf.MethodOptions.uninterpretedOption: array expected');\n                    message.uninterpretedOption = [];\n                    for (let i = 0; i < object.uninterpretedOption.length; ++i) {\n                        if (typeof object.uninterpretedOption[i] !== 'object')\n                            throw TypeError('.google.protobuf.MethodOptions.uninterpretedOption: object expected');\n                        message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                    }\n                }\n                if (object['.google.api.http'] != null) {\n                    if (typeof object['.google.api.http'] !== 'object')\n                        throw TypeError('.google.protobuf.MethodOptions..google.api.http: object expected');\n                    message['.google.api.http'] = $root.google.api.HttpRule.fromObject(object['.google.api.http']);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.MethodOptions\n             * @static\n             * @param {google.protobuf.MethodOptions} message MethodOptions\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MethodOptions.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.uninterpretedOption = [];\n                if (options.defaults) {\n                    object.deprecated = false;\n                    object['.google.api.http'] = null;\n                }\n                if (message.deprecated != null && message.hasOwnProperty('deprecated'))\n                    object.deprecated = message.deprecated;\n                if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                    object.uninterpretedOption = [];\n                    for (let j = 0; j < message.uninterpretedOption.length; ++j)\n                        object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                }\n                if (message['.google.api.http'] != null && message.hasOwnProperty('.google.api.http'))\n                    object['.google.api.http'] = $root.google.api.HttpRule.toObject(message['.google.api.http'], options);\n                return object;\n            };\n\n            /**\n             * Converts this MethodOptions to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.MethodOptions\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MethodOptions.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return MethodOptions;\n        })();\n\n        protobuf.UninterpretedOption = (function () {\n\n            /**\n             * Properties of an UninterpretedOption.\n             * @memberof google.protobuf\n             * @interface IUninterpretedOption\n             * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name\n             * @property {string|null} [identifierValue] UninterpretedOption identifierValue\n             * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue\n             * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue\n             * @property {number|null} [doubleValue] UninterpretedOption doubleValue\n             * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue\n             * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue\n             */\n\n            /**\n             * Constructs a new UninterpretedOption.\n             * @memberof google.protobuf\n             * @classdesc Represents an UninterpretedOption.\n             * @implements IUninterpretedOption\n             * @constructor\n             * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set\n             */\n            function UninterpretedOption(properties) {\n                this.name = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * UninterpretedOption name.\n             * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name\n             * @memberof google.protobuf.UninterpretedOption\n             * @instance\n             */\n            UninterpretedOption.prototype.name = $util.emptyArray;\n\n            /**\n             * UninterpretedOption identifierValue.\n             * @member {string} identifierValue\n             * @memberof google.protobuf.UninterpretedOption\n             * @instance\n             */\n            UninterpretedOption.prototype.identifierValue = '';\n\n            /**\n             * UninterpretedOption positiveIntValue.\n             * @member {number|Long} positiveIntValue\n             * @memberof google.protobuf.UninterpretedOption\n             * @instance\n             */\n            UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n\n            /**\n             * UninterpretedOption negativeIntValue.\n             * @member {number|Long} negativeIntValue\n             * @memberof google.protobuf.UninterpretedOption\n             * @instance\n             */\n            UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n            /**\n             * UninterpretedOption doubleValue.\n             * @member {number} doubleValue\n             * @memberof google.protobuf.UninterpretedOption\n             * @instance\n             */\n            UninterpretedOption.prototype.doubleValue = 0;\n\n            /**\n             * UninterpretedOption stringValue.\n             * @member {Uint8Array} stringValue\n             * @memberof google.protobuf.UninterpretedOption\n             * @instance\n             */\n            UninterpretedOption.prototype.stringValue = $util.newBuffer([]);\n\n            /**\n             * UninterpretedOption aggregateValue.\n             * @member {string} aggregateValue\n             * @memberof google.protobuf.UninterpretedOption\n             * @instance\n             */\n            UninterpretedOption.prototype.aggregateValue = '';\n\n            /**\n             * Creates a new UninterpretedOption instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.UninterpretedOption\n             * @static\n             * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set\n             * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance\n             */\n            UninterpretedOption.create = function create(properties) {\n                return new UninterpretedOption(properties);\n            };\n\n            /**\n             * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.UninterpretedOption\n             * @static\n             * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            UninterpretedOption.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.name.length)\n                    for (let i = 0; i < message.name.length; ++i)\n                        $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.identifierValue != null && message.hasOwnProperty('identifierValue'))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);\n                if (message.positiveIntValue != null && message.hasOwnProperty('positiveIntValue'))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);\n                if (message.negativeIntValue != null && message.hasOwnProperty('negativeIntValue'))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);\n                if (message.doubleValue != null && message.hasOwnProperty('doubleValue'))\n                    writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);\n                if (message.stringValue != null && message.hasOwnProperty('stringValue'))\n                    writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);\n                if (message.aggregateValue != null && message.hasOwnProperty('aggregateValue'))\n                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.UninterpretedOption\n             * @static\n             * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an UninterpretedOption message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.UninterpretedOption\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.UninterpretedOption} UninterpretedOption\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            UninterpretedOption.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 2:\n                        if (!(message.name && message.name.length))\n                            message.name = [];\n                        message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        message.identifierValue = reader.string();\n                        break;\n                    case 4:\n                        message.positiveIntValue = reader.uint64();\n                        break;\n                    case 5:\n                        message.negativeIntValue = reader.int64();\n                        break;\n                    case 6:\n                        message.doubleValue = reader.double();\n                        break;\n                    case 7:\n                        message.stringValue = reader.bytes();\n                        break;\n                    case 8:\n                        message.aggregateValue = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.UninterpretedOption\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.UninterpretedOption} UninterpretedOption\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an UninterpretedOption message.\n             * @function verify\n             * @memberof google.protobuf.UninterpretedOption\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            UninterpretedOption.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.name != null && message.hasOwnProperty('name')) {\n                    if (!Array.isArray(message.name))\n                        return 'name: array expected';\n                    for (let i = 0; i < message.name.length; ++i) {\n                        let error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);\n                        if (error)\n                            return 'name.' + error;\n                    }\n                }\n                if (message.identifierValue != null && message.hasOwnProperty('identifierValue'))\n                    if (!$util.isString(message.identifierValue))\n                        return 'identifierValue: string expected';\n                if (message.positiveIntValue != null && message.hasOwnProperty('positiveIntValue'))\n                    if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))\n                        return 'positiveIntValue: integer|Long expected';\n                if (message.negativeIntValue != null && message.hasOwnProperty('negativeIntValue'))\n                    if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))\n                        return 'negativeIntValue: integer|Long expected';\n                if (message.doubleValue != null && message.hasOwnProperty('doubleValue'))\n                    if (typeof message.doubleValue !== 'number')\n                        return 'doubleValue: number expected';\n                if (message.stringValue != null && message.hasOwnProperty('stringValue'))\n                    if (!(message.stringValue && typeof message.stringValue.length === 'number' || $util.isString(message.stringValue)))\n                        return 'stringValue: buffer expected';\n                if (message.aggregateValue != null && message.hasOwnProperty('aggregateValue'))\n                    if (!$util.isString(message.aggregateValue))\n                        return 'aggregateValue: string expected';\n                return null;\n            };\n\n            /**\n             * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.UninterpretedOption\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.UninterpretedOption} UninterpretedOption\n             */\n            UninterpretedOption.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.UninterpretedOption)\n                    return object;\n                let message = new $root.google.protobuf.UninterpretedOption();\n                if (object.name) {\n                    if (!Array.isArray(object.name))\n                        throw TypeError('.google.protobuf.UninterpretedOption.name: array expected');\n                    message.name = [];\n                    for (let i = 0; i < object.name.length; ++i) {\n                        if (typeof object.name[i] !== 'object')\n                            throw TypeError('.google.protobuf.UninterpretedOption.name: object expected');\n                        message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);\n                    }\n                }\n                if (object.identifierValue != null)\n                    message.identifierValue = String(object.identifierValue);\n                if (object.positiveIntValue != null)\n                    if ($util.Long)\n                        (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;\n                    else if (typeof object.positiveIntValue === 'string')\n                        message.positiveIntValue = parseInt(object.positiveIntValue, 10);\n                    else if (typeof object.positiveIntValue === 'number')\n                        message.positiveIntValue = object.positiveIntValue;\n                    else if (typeof object.positiveIntValue === 'object')\n                        message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);\n                if (object.negativeIntValue != null)\n                    if ($util.Long)\n                        (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;\n                    else if (typeof object.negativeIntValue === 'string')\n                        message.negativeIntValue = parseInt(object.negativeIntValue, 10);\n                    else if (typeof object.negativeIntValue === 'number')\n                        message.negativeIntValue = object.negativeIntValue;\n                    else if (typeof object.negativeIntValue === 'object')\n                        message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();\n                if (object.doubleValue != null)\n                    message.doubleValue = Number(object.doubleValue);\n                if (object.stringValue != null)\n                    if (typeof object.stringValue === 'string')\n                        $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);\n                    else if (object.stringValue.length)\n                        message.stringValue = object.stringValue;\n                if (object.aggregateValue != null)\n                    message.aggregateValue = String(object.aggregateValue);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.UninterpretedOption\n             * @static\n             * @param {google.protobuf.UninterpretedOption} message UninterpretedOption\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            UninterpretedOption.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.name = [];\n                if (options.defaults) {\n                    object.identifierValue = '';\n                    if ($util.Long) {\n                        let long = new $util.Long(0, 0, true);\n                        object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.positiveIntValue = options.longs === String ? '0' : 0;\n                    if ($util.Long) {\n                        let long = new $util.Long(0, 0, false);\n                        object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.negativeIntValue = options.longs === String ? '0' : 0;\n                    object.doubleValue = 0;\n                    if (options.bytes === String)\n                        object.stringValue = '';\n                    else {\n                        object.stringValue = [];\n                        if (options.bytes !== Array)\n                            object.stringValue = $util.newBuffer(object.stringValue);\n                    }\n                    object.aggregateValue = '';\n                }\n                if (message.name && message.name.length) {\n                    object.name = [];\n                    for (let j = 0; j < message.name.length; ++j)\n                        object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);\n                }\n                if (message.identifierValue != null && message.hasOwnProperty('identifierValue'))\n                    object.identifierValue = message.identifierValue;\n                if (message.positiveIntValue != null && message.hasOwnProperty('positiveIntValue'))\n                    if (typeof message.positiveIntValue === 'number')\n                        object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;\n                    else\n                        object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;\n                if (message.negativeIntValue != null && message.hasOwnProperty('negativeIntValue'))\n                    if (typeof message.negativeIntValue === 'number')\n                        object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;\n                    else\n                        object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;\n                if (message.doubleValue != null && message.hasOwnProperty('doubleValue'))\n                    object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                if (message.stringValue != null && message.hasOwnProperty('stringValue'))\n                    object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;\n                if (message.aggregateValue != null && message.hasOwnProperty('aggregateValue'))\n                    object.aggregateValue = message.aggregateValue;\n                return object;\n            };\n\n            /**\n             * Converts this UninterpretedOption to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.UninterpretedOption\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            UninterpretedOption.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            UninterpretedOption.NamePart = (function () {\n\n                /**\n                 * Properties of a NamePart.\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @interface INamePart\n                 * @property {string} namePart NamePart namePart\n                 * @property {boolean} isExtension NamePart isExtension\n                 */\n\n                /**\n                 * Constructs a new NamePart.\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @classdesc Represents a NamePart.\n                 * @implements INamePart\n                 * @constructor\n                 * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set\n                 */\n                function NamePart(properties) {\n                    if (properties)\n                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * NamePart namePart.\n                 * @member {string} namePart\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @instance\n                 */\n                NamePart.prototype.namePart = '';\n\n                /**\n                 * NamePart isExtension.\n                 * @member {boolean} isExtension\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @instance\n                 */\n                NamePart.prototype.isExtension = false;\n\n                /**\n                 * Creates a new NamePart instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @static\n                 * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set\n                 * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance\n                 */\n                NamePart.create = function create(properties) {\n                    return new NamePart(properties);\n                };\n\n                /**\n                 * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @static\n                 * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                NamePart.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);\n                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @static\n                 * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                NamePart.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a NamePart message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                NamePart.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();\n                    while (reader.pos < end) {\n                        let tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.namePart = reader.string();\n                            break;\n                        case 2:\n                            message.isExtension = reader.bool();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    if (!message.hasOwnProperty('namePart'))\n                        throw $util.ProtocolError(\"missing required 'namePart'\", { instance: message });\n                    if (!message.hasOwnProperty('isExtension'))\n                        throw $util.ProtocolError(\"missing required 'isExtension'\", { instance: message });\n                    return message;\n                };\n\n                /**\n                 * Decodes a NamePart message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                NamePart.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a NamePart message.\n                 * @function verify\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                NamePart.verify = function verify(message) {\n                    if (typeof message !== 'object' || message === null)\n                        return 'object expected';\n                    if (!$util.isString(message.namePart))\n                        return 'namePart: string expected';\n                    if (typeof message.isExtension !== 'boolean')\n                        return 'isExtension: boolean expected';\n                    return null;\n                };\n\n                /**\n                 * Creates a NamePart message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart\n                 */\n                NamePart.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)\n                        return object;\n                    let message = new $root.google.protobuf.UninterpretedOption.NamePart();\n                    if (object.namePart != null)\n                        message.namePart = String(object.namePart);\n                    if (object.isExtension != null)\n                        message.isExtension = Boolean(object.isExtension);\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a NamePart message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @static\n                 * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                NamePart.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    let object = {};\n                    if (options.defaults) {\n                        object.namePart = '';\n                        object.isExtension = false;\n                    }\n                    if (message.namePart != null && message.hasOwnProperty('namePart'))\n                        object.namePart = message.namePart;\n                    if (message.isExtension != null && message.hasOwnProperty('isExtension'))\n                        object.isExtension = message.isExtension;\n                    return object;\n                };\n\n                /**\n                 * Converts this NamePart to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.UninterpretedOption.NamePart\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                NamePart.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return NamePart;\n            })();\n\n            return UninterpretedOption;\n        })();\n\n        protobuf.SourceCodeInfo = (function () {\n\n            /**\n             * Properties of a SourceCodeInfo.\n             * @memberof google.protobuf\n             * @interface ISourceCodeInfo\n             * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location\n             */\n\n            /**\n             * Constructs a new SourceCodeInfo.\n             * @memberof google.protobuf\n             * @classdesc Represents a SourceCodeInfo.\n             * @implements ISourceCodeInfo\n             * @constructor\n             * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set\n             */\n            function SourceCodeInfo(properties) {\n                this.location = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SourceCodeInfo location.\n             * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location\n             * @memberof google.protobuf.SourceCodeInfo\n             * @instance\n             */\n            SourceCodeInfo.prototype.location = $util.emptyArray;\n\n            /**\n             * Creates a new SourceCodeInfo instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.SourceCodeInfo\n             * @static\n             * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set\n             * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance\n             */\n            SourceCodeInfo.create = function create(properties) {\n                return new SourceCodeInfo(properties);\n            };\n\n            /**\n             * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.SourceCodeInfo\n             * @static\n             * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SourceCodeInfo.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.location != null && message.location.length)\n                    for (let i = 0; i < message.location.length; ++i)\n                        $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.SourceCodeInfo\n             * @static\n             * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SourceCodeInfo message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.SourceCodeInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SourceCodeInfo.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.location && message.location.length))\n                            message.location = [];\n                        message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.SourceCodeInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SourceCodeInfo message.\n             * @function verify\n             * @memberof google.protobuf.SourceCodeInfo\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SourceCodeInfo.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.location != null && message.hasOwnProperty('location')) {\n                    if (!Array.isArray(message.location))\n                        return 'location: array expected';\n                    for (let i = 0; i < message.location.length; ++i) {\n                        let error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);\n                        if (error)\n                            return 'location.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.SourceCodeInfo\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo\n             */\n            SourceCodeInfo.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.SourceCodeInfo)\n                    return object;\n                let message = new $root.google.protobuf.SourceCodeInfo();\n                if (object.location) {\n                    if (!Array.isArray(object.location))\n                        throw TypeError('.google.protobuf.SourceCodeInfo.location: array expected');\n                    message.location = [];\n                    for (let i = 0; i < object.location.length; ++i) {\n                        if (typeof object.location[i] !== 'object')\n                            throw TypeError('.google.protobuf.SourceCodeInfo.location: object expected');\n                        message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.SourceCodeInfo\n             * @static\n             * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SourceCodeInfo.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.location = [];\n                if (message.location && message.location.length) {\n                    object.location = [];\n                    for (let j = 0; j < message.location.length; ++j)\n                        object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this SourceCodeInfo to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.SourceCodeInfo\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SourceCodeInfo.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            SourceCodeInfo.Location = (function () {\n\n                /**\n                 * Properties of a Location.\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @interface ILocation\n                 * @property {Array.<number>|null} [path] Location path\n                 * @property {Array.<number>|null} [span] Location span\n                 * @property {string|null} [leadingComments] Location leadingComments\n                 * @property {string|null} [trailingComments] Location trailingComments\n                 * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments\n                 */\n\n                /**\n                 * Constructs a new Location.\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @classdesc Represents a Location.\n                 * @implements ILocation\n                 * @constructor\n                 * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set\n                 */\n                function Location(properties) {\n                    this.path = [];\n                    this.span = [];\n                    this.leadingDetachedComments = [];\n                    if (properties)\n                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Location path.\n                 * @member {Array.<number>} path\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @instance\n                 */\n                Location.prototype.path = $util.emptyArray;\n\n                /**\n                 * Location span.\n                 * @member {Array.<number>} span\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @instance\n                 */\n                Location.prototype.span = $util.emptyArray;\n\n                /**\n                 * Location leadingComments.\n                 * @member {string} leadingComments\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @instance\n                 */\n                Location.prototype.leadingComments = '';\n\n                /**\n                 * Location trailingComments.\n                 * @member {string} trailingComments\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @instance\n                 */\n                Location.prototype.trailingComments = '';\n\n                /**\n                 * Location leadingDetachedComments.\n                 * @member {Array.<string>} leadingDetachedComments\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @instance\n                 */\n                Location.prototype.leadingDetachedComments = $util.emptyArray;\n\n                /**\n                 * Creates a new Location instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @static\n                 * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set\n                 * @returns {google.protobuf.SourceCodeInfo.Location} Location instance\n                 */\n                Location.create = function create(properties) {\n                    return new Location(properties);\n                };\n\n                /**\n                 * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @static\n                 * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Location.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.path != null && message.path.length) {\n                        writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                        for (let i = 0; i < message.path.length; ++i)\n                            writer.int32(message.path[i]);\n                        writer.ldelim();\n                    }\n                    if (message.span != null && message.span.length) {\n                        writer.uint32(/* id 2, wireType 2 =*/18).fork();\n                        for (let i = 0; i < message.span.length; ++i)\n                            writer.int32(message.span[i]);\n                        writer.ldelim();\n                    }\n                    if (message.leadingComments != null && message.hasOwnProperty('leadingComments'))\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);\n                    if (message.trailingComments != null && message.hasOwnProperty('trailingComments'))\n                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);\n                    if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)\n                        for (let i = 0; i < message.leadingDetachedComments.length; ++i)\n                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @static\n                 * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Location.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a Location message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.SourceCodeInfo.Location} Location\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Location.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();\n                    while (reader.pos < end) {\n                        let tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            if (!(message.path && message.path.length))\n                                message.path = [];\n                            if ((tag & 7) === 2) {\n                                let end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.path.push(reader.int32());\n                            } else\n                                message.path.push(reader.int32());\n                            break;\n                        case 2:\n                            if (!(message.span && message.span.length))\n                                message.span = [];\n                            if ((tag & 7) === 2) {\n                                let end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.span.push(reader.int32());\n                            } else\n                                message.span.push(reader.int32());\n                            break;\n                        case 3:\n                            message.leadingComments = reader.string();\n                            break;\n                        case 4:\n                            message.trailingComments = reader.string();\n                            break;\n                        case 6:\n                            if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))\n                                message.leadingDetachedComments = [];\n                            message.leadingDetachedComments.push(reader.string());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Location message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.SourceCodeInfo.Location} Location\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Location.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a Location message.\n                 * @function verify\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Location.verify = function verify(message) {\n                    if (typeof message !== 'object' || message === null)\n                        return 'object expected';\n                    if (message.path != null && message.hasOwnProperty('path')) {\n                        if (!Array.isArray(message.path))\n                            return 'path: array expected';\n                        for (let i = 0; i < message.path.length; ++i)\n                            if (!$util.isInteger(message.path[i]))\n                                return 'path: integer[] expected';\n                    }\n                    if (message.span != null && message.hasOwnProperty('span')) {\n                        if (!Array.isArray(message.span))\n                            return 'span: array expected';\n                        for (let i = 0; i < message.span.length; ++i)\n                            if (!$util.isInteger(message.span[i]))\n                                return 'span: integer[] expected';\n                    }\n                    if (message.leadingComments != null && message.hasOwnProperty('leadingComments'))\n                        if (!$util.isString(message.leadingComments))\n                            return 'leadingComments: string expected';\n                    if (message.trailingComments != null && message.hasOwnProperty('trailingComments'))\n                        if (!$util.isString(message.trailingComments))\n                            return 'trailingComments: string expected';\n                    if (message.leadingDetachedComments != null && message.hasOwnProperty('leadingDetachedComments')) {\n                        if (!Array.isArray(message.leadingDetachedComments))\n                            return 'leadingDetachedComments: array expected';\n                        for (let i = 0; i < message.leadingDetachedComments.length; ++i)\n                            if (!$util.isString(message.leadingDetachedComments[i]))\n                                return 'leadingDetachedComments: string[] expected';\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a Location message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.SourceCodeInfo.Location} Location\n                 */\n                Location.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)\n                        return object;\n                    let message = new $root.google.protobuf.SourceCodeInfo.Location();\n                    if (object.path) {\n                        if (!Array.isArray(object.path))\n                            throw TypeError('.google.protobuf.SourceCodeInfo.Location.path: array expected');\n                        message.path = [];\n                        for (let i = 0; i < object.path.length; ++i)\n                            message.path[i] = object.path[i] | 0;\n                    }\n                    if (object.span) {\n                        if (!Array.isArray(object.span))\n                            throw TypeError('.google.protobuf.SourceCodeInfo.Location.span: array expected');\n                        message.span = [];\n                        for (let i = 0; i < object.span.length; ++i)\n                            message.span[i] = object.span[i] | 0;\n                    }\n                    if (object.leadingComments != null)\n                        message.leadingComments = String(object.leadingComments);\n                    if (object.trailingComments != null)\n                        message.trailingComments = String(object.trailingComments);\n                    if (object.leadingDetachedComments) {\n                        if (!Array.isArray(object.leadingDetachedComments))\n                            throw TypeError('.google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected');\n                        message.leadingDetachedComments = [];\n                        for (let i = 0; i < object.leadingDetachedComments.length; ++i)\n                            message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Location message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @static\n                 * @param {google.protobuf.SourceCodeInfo.Location} message Location\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Location.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    let object = {};\n                    if (options.arrays || options.defaults) {\n                        object.path = [];\n                        object.span = [];\n                        object.leadingDetachedComments = [];\n                    }\n                    if (options.defaults) {\n                        object.leadingComments = '';\n                        object.trailingComments = '';\n                    }\n                    if (message.path && message.path.length) {\n                        object.path = [];\n                        for (let j = 0; j < message.path.length; ++j)\n                            object.path[j] = message.path[j];\n                    }\n                    if (message.span && message.span.length) {\n                        object.span = [];\n                        for (let j = 0; j < message.span.length; ++j)\n                            object.span[j] = message.span[j];\n                    }\n                    if (message.leadingComments != null && message.hasOwnProperty('leadingComments'))\n                        object.leadingComments = message.leadingComments;\n                    if (message.trailingComments != null && message.hasOwnProperty('trailingComments'))\n                        object.trailingComments = message.trailingComments;\n                    if (message.leadingDetachedComments && message.leadingDetachedComments.length) {\n                        object.leadingDetachedComments = [];\n                        for (let j = 0; j < message.leadingDetachedComments.length; ++j)\n                            object.leadingDetachedComments[j] = message.leadingDetachedComments[j];\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this Location to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.SourceCodeInfo.Location\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Location.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return Location;\n            })();\n\n            return SourceCodeInfo;\n        })();\n\n        protobuf.GeneratedCodeInfo = (function () {\n\n            /**\n             * Properties of a GeneratedCodeInfo.\n             * @memberof google.protobuf\n             * @interface IGeneratedCodeInfo\n             * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation\n             */\n\n            /**\n             * Constructs a new GeneratedCodeInfo.\n             * @memberof google.protobuf\n             * @classdesc Represents a GeneratedCodeInfo.\n             * @implements IGeneratedCodeInfo\n             * @constructor\n             * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set\n             */\n            function GeneratedCodeInfo(properties) {\n                this.annotation = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * GeneratedCodeInfo annotation.\n             * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation\n             * @memberof google.protobuf.GeneratedCodeInfo\n             * @instance\n             */\n            GeneratedCodeInfo.prototype.annotation = $util.emptyArray;\n\n            /**\n             * Creates a new GeneratedCodeInfo instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.GeneratedCodeInfo\n             * @static\n             * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set\n             * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance\n             */\n            GeneratedCodeInfo.create = function create(properties) {\n                return new GeneratedCodeInfo(properties);\n            };\n\n            /**\n             * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.GeneratedCodeInfo\n             * @static\n             * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            GeneratedCodeInfo.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.annotation != null && message.annotation.length)\n                    for (let i = 0; i < message.annotation.length; ++i)\n                        $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.GeneratedCodeInfo\n             * @static\n             * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a GeneratedCodeInfo message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.GeneratedCodeInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            GeneratedCodeInfo.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.annotation && message.annotation.length))\n                            message.annotation = [];\n                        message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.GeneratedCodeInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a GeneratedCodeInfo message.\n             * @function verify\n             * @memberof google.protobuf.GeneratedCodeInfo\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            GeneratedCodeInfo.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.annotation != null && message.hasOwnProperty('annotation')) {\n                    if (!Array.isArray(message.annotation))\n                        return 'annotation: array expected';\n                    for (let i = 0; i < message.annotation.length; ++i) {\n                        let error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);\n                        if (error)\n                            return 'annotation.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.GeneratedCodeInfo\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo\n             */\n            GeneratedCodeInfo.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.GeneratedCodeInfo)\n                    return object;\n                let message = new $root.google.protobuf.GeneratedCodeInfo();\n                if (object.annotation) {\n                    if (!Array.isArray(object.annotation))\n                        throw TypeError('.google.protobuf.GeneratedCodeInfo.annotation: array expected');\n                    message.annotation = [];\n                    for (let i = 0; i < object.annotation.length; ++i) {\n                        if (typeof object.annotation[i] !== 'object')\n                            throw TypeError('.google.protobuf.GeneratedCodeInfo.annotation: object expected');\n                        message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.GeneratedCodeInfo\n             * @static\n             * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            GeneratedCodeInfo.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.annotation = [];\n                if (message.annotation && message.annotation.length) {\n                    object.annotation = [];\n                    for (let j = 0; j < message.annotation.length; ++j)\n                        object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this GeneratedCodeInfo to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.GeneratedCodeInfo\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            GeneratedCodeInfo.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            GeneratedCodeInfo.Annotation = (function () {\n\n                /**\n                 * Properties of an Annotation.\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @interface IAnnotation\n                 * @property {Array.<number>|null} [path] Annotation path\n                 * @property {string|null} [sourceFile] Annotation sourceFile\n                 * @property {number|null} [begin] Annotation begin\n                 * @property {number|null} [end] Annotation end\n                 */\n\n                /**\n                 * Constructs a new Annotation.\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @classdesc Represents an Annotation.\n                 * @implements IAnnotation\n                 * @constructor\n                 * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set\n                 */\n                function Annotation(properties) {\n                    this.path = [];\n                    if (properties)\n                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Annotation path.\n                 * @member {Array.<number>} path\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @instance\n                 */\n                Annotation.prototype.path = $util.emptyArray;\n\n                /**\n                 * Annotation sourceFile.\n                 * @member {string} sourceFile\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @instance\n                 */\n                Annotation.prototype.sourceFile = '';\n\n                /**\n                 * Annotation begin.\n                 * @member {number} begin\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @instance\n                 */\n                Annotation.prototype.begin = 0;\n\n                /**\n                 * Annotation end.\n                 * @member {number} end\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @instance\n                 */\n                Annotation.prototype.end = 0;\n\n                /**\n                 * Creates a new Annotation instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @static\n                 * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set\n                 * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance\n                 */\n                Annotation.create = function create(properties) {\n                    return new Annotation(properties);\n                };\n\n                /**\n                 * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @static\n                 * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Annotation.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.path != null && message.path.length) {\n                        writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                        for (let i = 0; i < message.path.length; ++i)\n                            writer.int32(message.path[i]);\n                        writer.ldelim();\n                    }\n                    if (message.sourceFile != null && message.hasOwnProperty('sourceFile'))\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);\n                    if (message.begin != null && message.hasOwnProperty('begin'))\n                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);\n                    if (message.end != null && message.hasOwnProperty('end'))\n                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @static\n                 * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Annotation.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes an Annotation message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Annotation.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();\n                    while (reader.pos < end) {\n                        let tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            if (!(message.path && message.path.length))\n                                message.path = [];\n                            if ((tag & 7) === 2) {\n                                let end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.path.push(reader.int32());\n                            } else\n                                message.path.push(reader.int32());\n                            break;\n                        case 2:\n                            message.sourceFile = reader.string();\n                            break;\n                        case 3:\n                            message.begin = reader.int32();\n                            break;\n                        case 4:\n                            message.end = reader.int32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes an Annotation message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Annotation.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies an Annotation message.\n                 * @function verify\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Annotation.verify = function verify(message) {\n                    if (typeof message !== 'object' || message === null)\n                        return 'object expected';\n                    if (message.path != null && message.hasOwnProperty('path')) {\n                        if (!Array.isArray(message.path))\n                            return 'path: array expected';\n                        for (let i = 0; i < message.path.length; ++i)\n                            if (!$util.isInteger(message.path[i]))\n                                return 'path: integer[] expected';\n                    }\n                    if (message.sourceFile != null && message.hasOwnProperty('sourceFile'))\n                        if (!$util.isString(message.sourceFile))\n                            return 'sourceFile: string expected';\n                    if (message.begin != null && message.hasOwnProperty('begin'))\n                        if (!$util.isInteger(message.begin))\n                            return 'begin: integer expected';\n                    if (message.end != null && message.hasOwnProperty('end'))\n                        if (!$util.isInteger(message.end))\n                            return 'end: integer expected';\n                    return null;\n                };\n\n                /**\n                 * Creates an Annotation message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation\n                 */\n                Annotation.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)\n                        return object;\n                    let message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();\n                    if (object.path) {\n                        if (!Array.isArray(object.path))\n                            throw TypeError('.google.protobuf.GeneratedCodeInfo.Annotation.path: array expected');\n                        message.path = [];\n                        for (let i = 0; i < object.path.length; ++i)\n                            message.path[i] = object.path[i] | 0;\n                    }\n                    if (object.sourceFile != null)\n                        message.sourceFile = String(object.sourceFile);\n                    if (object.begin != null)\n                        message.begin = object.begin | 0;\n                    if (object.end != null)\n                        message.end = object.end | 0;\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from an Annotation message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @static\n                 * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Annotation.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    let object = {};\n                    if (options.arrays || options.defaults)\n                        object.path = [];\n                    if (options.defaults) {\n                        object.sourceFile = '';\n                        object.begin = 0;\n                        object.end = 0;\n                    }\n                    if (message.path && message.path.length) {\n                        object.path = [];\n                        for (let j = 0; j < message.path.length; ++j)\n                            object.path[j] = message.path[j];\n                    }\n                    if (message.sourceFile != null && message.hasOwnProperty('sourceFile'))\n                        object.sourceFile = message.sourceFile;\n                    if (message.begin != null && message.hasOwnProperty('begin'))\n                        object.begin = message.begin;\n                    if (message.end != null && message.hasOwnProperty('end'))\n                        object.end = message.end;\n                    return object;\n                };\n\n                /**\n                 * Converts this Annotation to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Annotation.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return Annotation;\n            })();\n\n            return GeneratedCodeInfo;\n        })();\n\n        return protobuf;\n    })();\n\n    google.api = (function () {\n\n        /**\n         * Namespace api.\n         * @memberof google\n         * @namespace\n         */\n        const api = {};\n\n        api.Http = (function () {\n\n            /**\n             * Properties of a Http.\n             * @memberof google.api\n             * @interface IHttp\n             * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules\n             */\n\n            /**\n             * Constructs a new Http.\n             * @memberof google.api\n             * @classdesc Represents a Http.\n             * @implements IHttp\n             * @constructor\n             * @param {google.api.IHttp=} [properties] Properties to set\n             */\n            function Http(properties) {\n                this.rules = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Http rules.\n             * @member {Array.<google.api.IHttpRule>} rules\n             * @memberof google.api.Http\n             * @instance\n             */\n            Http.prototype.rules = $util.emptyArray;\n\n            /**\n             * Creates a new Http instance using the specified properties.\n             * @function create\n             * @memberof google.api.Http\n             * @static\n             * @param {google.api.IHttp=} [properties] Properties to set\n             * @returns {google.api.Http} Http instance\n             */\n            Http.create = function create(properties) {\n                return new Http(properties);\n            };\n\n            /**\n             * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.\n             * @function encode\n             * @memberof google.api.Http\n             * @static\n             * @param {google.api.IHttp} message Http message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Http.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.rules != null && message.rules.length)\n                    for (let i = 0; i < message.rules.length; ++i)\n                        $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.api.Http\n             * @static\n             * @param {google.api.IHttp} message Http message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Http.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Http message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.api.Http\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.api.Http} Http\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Http.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.rules && message.rules.length))\n                            message.rules = [];\n                        message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Http message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.api.Http\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.api.Http} Http\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Http.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Http message.\n             * @function verify\n             * @memberof google.api.Http\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Http.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.rules != null && message.hasOwnProperty('rules')) {\n                    if (!Array.isArray(message.rules))\n                        return 'rules: array expected';\n                    for (let i = 0; i < message.rules.length; ++i) {\n                        let error = $root.google.api.HttpRule.verify(message.rules[i]);\n                        if (error)\n                            return 'rules.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Http message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.api.Http\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.api.Http} Http\n             */\n            Http.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.api.Http)\n                    return object;\n                let message = new $root.google.api.Http();\n                if (object.rules) {\n                    if (!Array.isArray(object.rules))\n                        throw TypeError('.google.api.Http.rules: array expected');\n                    message.rules = [];\n                    for (let i = 0; i < object.rules.length; ++i) {\n                        if (typeof object.rules[i] !== 'object')\n                            throw TypeError('.google.api.Http.rules: object expected');\n                        message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Http message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.api.Http\n             * @static\n             * @param {google.api.Http} message Http\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Http.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.rules = [];\n                if (message.rules && message.rules.length) {\n                    object.rules = [];\n                    for (let j = 0; j < message.rules.length; ++j)\n                        object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this Http to JSON.\n             * @function toJSON\n             * @memberof google.api.Http\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Http.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Http;\n        })();\n\n        api.HttpRule = (function () {\n\n            /**\n             * Properties of a HttpRule.\n             * @memberof google.api\n             * @interface IHttpRule\n             * @property {string|null} [get] HttpRule get\n             * @property {string|null} [put] HttpRule put\n             * @property {string|null} [post] HttpRule post\n             * @property {string|null} [\"delete\"] HttpRule delete\n             * @property {string|null} [patch] HttpRule patch\n             * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom\n             * @property {string|null} [selector] HttpRule selector\n             * @property {string|null} [body] HttpRule body\n             * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings\n             */\n\n            /**\n             * Constructs a new HttpRule.\n             * @memberof google.api\n             * @classdesc Represents a HttpRule.\n             * @implements IHttpRule\n             * @constructor\n             * @param {google.api.IHttpRule=} [properties] Properties to set\n             */\n            function HttpRule(properties) {\n                this.additionalBindings = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * HttpRule get.\n             * @member {string} get\n             * @memberof google.api.HttpRule\n             * @instance\n             */\n            HttpRule.prototype.get = '';\n\n            /**\n             * HttpRule put.\n             * @member {string} put\n             * @memberof google.api.HttpRule\n             * @instance\n             */\n            HttpRule.prototype.put = '';\n\n            /**\n             * HttpRule post.\n             * @member {string} post\n             * @memberof google.api.HttpRule\n             * @instance\n             */\n            HttpRule.prototype.post = '';\n\n            /**\n             * HttpRule delete.\n             * @member {string} delete\n             * @memberof google.api.HttpRule\n             * @instance\n             */\n            HttpRule.prototype['delete'] = '';\n\n            /**\n             * HttpRule patch.\n             * @member {string} patch\n             * @memberof google.api.HttpRule\n             * @instance\n             */\n            HttpRule.prototype.patch = '';\n\n            /**\n             * HttpRule custom.\n             * @member {google.api.ICustomHttpPattern|null|undefined} custom\n             * @memberof google.api.HttpRule\n             * @instance\n             */\n            HttpRule.prototype.custom = null;\n\n            /**\n             * HttpRule selector.\n             * @member {string} selector\n             * @memberof google.api.HttpRule\n             * @instance\n             */\n            HttpRule.prototype.selector = '';\n\n            /**\n             * HttpRule body.\n             * @member {string} body\n             * @memberof google.api.HttpRule\n             * @instance\n             */\n            HttpRule.prototype.body = '';\n\n            /**\n             * HttpRule additionalBindings.\n             * @member {Array.<google.api.IHttpRule>} additionalBindings\n             * @memberof google.api.HttpRule\n             * @instance\n             */\n            HttpRule.prototype.additionalBindings = $util.emptyArray;\n\n            // OneOf field names bound to virtual getters and setters\n            let $oneOfFields;\n\n            /**\n             * HttpRule pattern.\n             * @member {\"get\"|\"put\"|\"post\"|\"delete\"|\"patch\"|\"custom\"|undefined} pattern\n             * @memberof google.api.HttpRule\n             * @instance\n             */\n            Object.defineProperty(HttpRule.prototype, 'pattern', {\n                get: $util.oneOfGetter($oneOfFields = ['get', 'put', 'post', 'delete', 'patch', 'custom']),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new HttpRule instance using the specified properties.\n             * @function create\n             * @memberof google.api.HttpRule\n             * @static\n             * @param {google.api.IHttpRule=} [properties] Properties to set\n             * @returns {google.api.HttpRule} HttpRule instance\n             */\n            HttpRule.create = function create(properties) {\n                return new HttpRule(properties);\n            };\n\n            /**\n             * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.\n             * @function encode\n             * @memberof google.api.HttpRule\n             * @static\n             * @param {google.api.IHttpRule} message HttpRule message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            HttpRule.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.selector != null && message.hasOwnProperty('selector'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);\n                if (message.get != null && message.hasOwnProperty('get'))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);\n                if (message.put != null && message.hasOwnProperty('put'))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);\n                if (message.post != null && message.hasOwnProperty('post'))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);\n                if (message['delete'] != null && message.hasOwnProperty('delete'))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message['delete']);\n                if (message.patch != null && message.hasOwnProperty('patch'))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);\n                if (message.body != null && message.hasOwnProperty('body'))\n                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);\n                if (message.custom != null && message.hasOwnProperty('custom'))\n                    $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.additionalBindings != null && message.additionalBindings.length)\n                    for (let i = 0; i < message.additionalBindings.length; ++i)\n                        $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.api.HttpRule\n             * @static\n             * @param {google.api.IHttpRule} message HttpRule message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            HttpRule.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a HttpRule message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.api.HttpRule\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.api.HttpRule} HttpRule\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            HttpRule.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 2:\n                        message.get = reader.string();\n                        break;\n                    case 3:\n                        message.put = reader.string();\n                        break;\n                    case 4:\n                        message.post = reader.string();\n                        break;\n                    case 5:\n                        message['delete'] = reader.string();\n                        break;\n                    case 6:\n                        message.patch = reader.string();\n                        break;\n                    case 8:\n                        message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());\n                        break;\n                    case 1:\n                        message.selector = reader.string();\n                        break;\n                    case 7:\n                        message.body = reader.string();\n                        break;\n                    case 11:\n                        if (!(message.additionalBindings && message.additionalBindings.length))\n                            message.additionalBindings = [];\n                        message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a HttpRule message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.api.HttpRule\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.api.HttpRule} HttpRule\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            HttpRule.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a HttpRule message.\n             * @function verify\n             * @memberof google.api.HttpRule\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            HttpRule.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                let properties = {};\n                if (message.get != null && message.hasOwnProperty('get')) {\n                    properties.pattern = 1;\n                    if (!$util.isString(message.get))\n                        return 'get: string expected';\n                }\n                if (message.put != null && message.hasOwnProperty('put')) {\n                    if (properties.pattern === 1)\n                        return 'pattern: multiple values';\n                    properties.pattern = 1;\n                    if (!$util.isString(message.put))\n                        return 'put: string expected';\n                }\n                if (message.post != null && message.hasOwnProperty('post')) {\n                    if (properties.pattern === 1)\n                        return 'pattern: multiple values';\n                    properties.pattern = 1;\n                    if (!$util.isString(message.post))\n                        return 'post: string expected';\n                }\n                if (message['delete'] != null && message.hasOwnProperty('delete')) {\n                    if (properties.pattern === 1)\n                        return 'pattern: multiple values';\n                    properties.pattern = 1;\n                    if (!$util.isString(message['delete']))\n                        return 'delete: string expected';\n                }\n                if (message.patch != null && message.hasOwnProperty('patch')) {\n                    if (properties.pattern === 1)\n                        return 'pattern: multiple values';\n                    properties.pattern = 1;\n                    if (!$util.isString(message.patch))\n                        return 'patch: string expected';\n                }\n                if (message.custom != null && message.hasOwnProperty('custom')) {\n                    if (properties.pattern === 1)\n                        return 'pattern: multiple values';\n                    properties.pattern = 1;\n                    {\n                        let error = $root.google.api.CustomHttpPattern.verify(message.custom);\n                        if (error)\n                            return 'custom.' + error;\n                    }\n                }\n                if (message.selector != null && message.hasOwnProperty('selector'))\n                    if (!$util.isString(message.selector))\n                        return 'selector: string expected';\n                if (message.body != null && message.hasOwnProperty('body'))\n                    if (!$util.isString(message.body))\n                        return 'body: string expected';\n                if (message.additionalBindings != null && message.hasOwnProperty('additionalBindings')) {\n                    if (!Array.isArray(message.additionalBindings))\n                        return 'additionalBindings: array expected';\n                    for (let i = 0; i < message.additionalBindings.length; ++i) {\n                        let error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);\n                        if (error)\n                            return 'additionalBindings.' + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.api.HttpRule\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.api.HttpRule} HttpRule\n             */\n            HttpRule.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.api.HttpRule)\n                    return object;\n                let message = new $root.google.api.HttpRule();\n                if (object.get != null)\n                    message.get = String(object.get);\n                if (object.put != null)\n                    message.put = String(object.put);\n                if (object.post != null)\n                    message.post = String(object.post);\n                if (object['delete'] != null)\n                    message['delete'] = String(object['delete']);\n                if (object.patch != null)\n                    message.patch = String(object.patch);\n                if (object.custom != null) {\n                    if (typeof object.custom !== 'object')\n                        throw TypeError('.google.api.HttpRule.custom: object expected');\n                    message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);\n                }\n                if (object.selector != null)\n                    message.selector = String(object.selector);\n                if (object.body != null)\n                    message.body = String(object.body);\n                if (object.additionalBindings) {\n                    if (!Array.isArray(object.additionalBindings))\n                        throw TypeError('.google.api.HttpRule.additionalBindings: array expected');\n                    message.additionalBindings = [];\n                    for (let i = 0; i < object.additionalBindings.length; ++i) {\n                        if (typeof object.additionalBindings[i] !== 'object')\n                            throw TypeError('.google.api.HttpRule.additionalBindings: object expected');\n                        message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a HttpRule message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.api.HttpRule\n             * @static\n             * @param {google.api.HttpRule} message HttpRule\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            HttpRule.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.additionalBindings = [];\n                if (options.defaults) {\n                    object.selector = '';\n                    object.body = '';\n                }\n                if (message.selector != null && message.hasOwnProperty('selector'))\n                    object.selector = message.selector;\n                if (message.get != null && message.hasOwnProperty('get')) {\n                    object.get = message.get;\n                    if (options.oneofs)\n                        object.pattern = 'get';\n                }\n                if (message.put != null && message.hasOwnProperty('put')) {\n                    object.put = message.put;\n                    if (options.oneofs)\n                        object.pattern = 'put';\n                }\n                if (message.post != null && message.hasOwnProperty('post')) {\n                    object.post = message.post;\n                    if (options.oneofs)\n                        object.pattern = 'post';\n                }\n                if (message['delete'] != null && message.hasOwnProperty('delete')) {\n                    object['delete'] = message['delete'];\n                    if (options.oneofs)\n                        object.pattern = 'delete';\n                }\n                if (message.patch != null && message.hasOwnProperty('patch')) {\n                    object.patch = message.patch;\n                    if (options.oneofs)\n                        object.pattern = 'patch';\n                }\n                if (message.body != null && message.hasOwnProperty('body'))\n                    object.body = message.body;\n                if (message.custom != null && message.hasOwnProperty('custom')) {\n                    object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);\n                    if (options.oneofs)\n                        object.pattern = 'custom';\n                }\n                if (message.additionalBindings && message.additionalBindings.length) {\n                    object.additionalBindings = [];\n                    for (let j = 0; j < message.additionalBindings.length; ++j)\n                        object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this HttpRule to JSON.\n             * @function toJSON\n             * @memberof google.api.HttpRule\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            HttpRule.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return HttpRule;\n        })();\n\n        api.CustomHttpPattern = (function () {\n\n            /**\n             * Properties of a CustomHttpPattern.\n             * @memberof google.api\n             * @interface ICustomHttpPattern\n             * @property {string|null} [kind] CustomHttpPattern kind\n             * @property {string|null} [path] CustomHttpPattern path\n             */\n\n            /**\n             * Constructs a new CustomHttpPattern.\n             * @memberof google.api\n             * @classdesc Represents a CustomHttpPattern.\n             * @implements ICustomHttpPattern\n             * @constructor\n             * @param {google.api.ICustomHttpPattern=} [properties] Properties to set\n             */\n            function CustomHttpPattern(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CustomHttpPattern kind.\n             * @member {string} kind\n             * @memberof google.api.CustomHttpPattern\n             * @instance\n             */\n            CustomHttpPattern.prototype.kind = '';\n\n            /**\n             * CustomHttpPattern path.\n             * @member {string} path\n             * @memberof google.api.CustomHttpPattern\n             * @instance\n             */\n            CustomHttpPattern.prototype.path = '';\n\n            /**\n             * Creates a new CustomHttpPattern instance using the specified properties.\n             * @function create\n             * @memberof google.api.CustomHttpPattern\n             * @static\n             * @param {google.api.ICustomHttpPattern=} [properties] Properties to set\n             * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance\n             */\n            CustomHttpPattern.create = function create(properties) {\n                return new CustomHttpPattern(properties);\n            };\n\n            /**\n             * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.\n             * @function encode\n             * @memberof google.api.CustomHttpPattern\n             * @static\n             * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CustomHttpPattern.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.kind != null && message.hasOwnProperty('kind'))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);\n                if (message.path != null && message.hasOwnProperty('path'))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.api.CustomHttpPattern\n             * @static\n             * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CustomHttpPattern message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.api.CustomHttpPattern\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.api.CustomHttpPattern} CustomHttpPattern\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CustomHttpPattern.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.kind = reader.string();\n                        break;\n                    case 2:\n                        message.path = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.api.CustomHttpPattern\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.api.CustomHttpPattern} CustomHttpPattern\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CustomHttpPattern message.\n             * @function verify\n             * @memberof google.api.CustomHttpPattern\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CustomHttpPattern.verify = function verify(message) {\n                if (typeof message !== 'object' || message === null)\n                    return 'object expected';\n                if (message.kind != null && message.hasOwnProperty('kind'))\n                    if (!$util.isString(message.kind))\n                        return 'kind: string expected';\n                if (message.path != null && message.hasOwnProperty('path'))\n                    if (!$util.isString(message.path))\n                        return 'path: string expected';\n                return null;\n            };\n\n            /**\n             * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.api.CustomHttpPattern\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.api.CustomHttpPattern} CustomHttpPattern\n             */\n            CustomHttpPattern.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.api.CustomHttpPattern)\n                    return object;\n                let message = new $root.google.api.CustomHttpPattern();\n                if (object.kind != null)\n                    message.kind = String(object.kind);\n                if (object.path != null)\n                    message.path = String(object.path);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.api.CustomHttpPattern\n             * @static\n             * @param {google.api.CustomHttpPattern} message CustomHttpPattern\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CustomHttpPattern.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.kind = '';\n                    object.path = '';\n                }\n                if (message.kind != null && message.hasOwnProperty('kind'))\n                    object.kind = message.kind;\n                if (message.path != null && message.hasOwnProperty('path'))\n                    object.path = message.path;\n                return object;\n            };\n\n            /**\n             * Converts this CustomHttpPattern to JSON.\n             * @function toJSON\n             * @memberof google.api.CustomHttpPattern\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CustomHttpPattern.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CustomHttpPattern;\n        })();\n\n        return api;\n    })();\n\n    return google;\n})();\n\nexport { $root as default };\n","import _each from '../_each';\n\nclass PackageGlobals {\n    constructor() {\n        this.options = {};\n    }\n\n    setOptions(opts) {\n        _each(opts, (val, key) => {\n            this.options[key] = val;\n        });\n    }\n}\n\nmodule.exports = new PackageGlobals();\n","import { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nconst constants = require('../constants');\nconst coerce    = require('./coerce');\n\n// Facade on the thrift log data structure to make constructing log records more\n// convenient.\nclass LogBuilder {\n\n    constructor(runtime) {\n        this._runtime = runtime;\n        this._record = new crouton_thrift.LogRecord({\n            timestamp_micros : runtime._platform.nowMicros(),\n            runtime_guid     : null,\n            span_guid        : null,\n            stable_name      : null,\n            message          : null,\n            level            : null,\n            thread_id        : null,\n            filename         : null,\n            line_number      : null,\n            stack_frames     : null,\n            payload_json     : null,\n            error_flag       : null,\n        });\n    }\n\n    record() {\n        return this._record;\n    }\n\n    end() {\n        this._runtime._addLogRecord(this._record);\n    }\n\n    timestamp(micros) {\n        this._record.timestamp_micros = coerce.toNumber(micros);\n        return this;\n    }\n\n    message(msg) {\n        this._record.message = coerce.toString(msg);\n        return this;\n    }\n\n    level(num) {\n        this._record.level = constants.LOG_LEVEL_TO_STRING[num] || null;\n        if (num >= constants.LOG_ERROR) {\n            this.error(true);\n        }\n        return this;\n    }\n\n    span(guid) {\n        if (guid !== undefined) {\n            this._record.span_guid = coerce.toString(guid);\n        }\n        return this;\n    }\n\n    name(stableName) {\n        this._record.stable_name = coerce.toString(stableName);\n        return this;\n    }\n\n    error(flag) {\n        this._record.error_flag = coerce.toBoolean(flag);\n        return this;\n    }\n\n    payload(data) {\n        if (data !== undefined) {\n            this._record.payload_json = this._encodePayload(data);\n        }\n        return this;\n    }\n\n    _encodePayload(data) {\n        let payloadJSON = null;\n        try {\n            payloadJSON = JSON.stringify(data);\n        } catch (_ignored) {\n            // TODO: this should log an internal warning that a payload could\n            // not be encoded as JSON.\n            return undefined;\n        }\n        return payloadJSON;\n    }\n}\n\nmodule.exports = LogBuilder;\n","import { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport _each from '../_each';\nimport * as coerce from './coerce'; // eslint-disable-line camelcase\nimport { lightstep, google } from './generated_proto';\nlet proto = lightstep.collector;\nlet googleProtobufTimestampPB = google.proto;\n\nexport default class LogRecordImp {\n    constructor(logFieldKeyHardLimit, logFieldValueHardLimit, timestampMicros, fields) {\n        this._logFieldKeyHardLimit = logFieldKeyHardLimit;\n        this._logFieldValueHardLimit = logFieldValueHardLimit;\n        this._timestampMicros = timestampMicros;\n        this._fields = fields;\n        this._keysOverLimit = 0;\n        this._valuesOverLimit = 0;\n    }\n\n    _clearOverLimits() {\n        this._keysOverLimit = 0;\n        this._valuesOverLimit = 0;\n    }\n\n    getNumKeysOverLimit() {\n        return this._keysOverLimit;\n    }\n\n    getNumValuesOverLimit() {\n        return this._valuesOverLimit;\n    }\n\n    toThrift() {\n        this._clearOverLimits();\n        let thriftFields = [];\n        _each(this._fields, (value, key) => {\n            if (!key || !value) {\n                return;\n            }\n            let keyStr = this.getFieldKey(key);\n            let valStr = this.getFieldValue(value);\n            thriftFields.push(new crouton_thrift.KeyValue({\n                Key   : keyStr,\n                Value : valStr,\n            }));\n        });\n\n        return new crouton_thrift.LogRecord({\n            timestamp_micros : this._timestampMicros,\n            fields           : thriftFields,\n        });\n    }\n\n    getFieldKey(key) {\n        let keyStr = coerce.toString(key);\n        if (keyStr.length > this._logFieldKeyHardLimit) {\n            this._keysOverLimit += 1;\n            keyStr = `${keyStr.substr(0, this._logFieldKeyHardLimit)}...`;\n        }\n        return keyStr;\n    }\n\n    getFieldValue(value) {\n        let valStr = null;\n        if (value instanceof Object) {\n            try {\n                valStr = JSON.stringify(value, null, '  ');\n            } catch (e) {\n                valStr = `Could not encode value. Exception: ${e}`;\n            }\n        } else {\n            valStr = coerce.toString(value);\n        }\n        if (valStr.length > this._logFieldValueHardLimit) {\n            this._valuesOverLimit += 1;\n            valStr = `${valStr.substr(0, this._logFieldValueHardLimit)}...`;\n        }\n        return valStr;\n    }\n\n    toProto() {\n        this._clearOverLimits();\n        let log = new proto.Log();\n        let ts = new googleProtobufTimestampPB.Timestamp();\n        let millis = Math.floor(this._timestampMicros / 1000);\n        let secs = Math.floor(millis / 1000);\n        let nanos = (millis % 1000) * 1000000;\n        ts.seconds = secs;\n        ts.nanos = nanos;\n        log.Timestamp = ts;\n        let keyValues = [];\n        _each(this._fields, (value, key) => {\n            if (!key || !value) {\n                return;\n            }\n            let keyStr = this.getFieldKey(key);\n            let valStr = this.getFieldValue(value);\n\n            let keyValue = new proto.KeyValue();\n            keyValue.key = keyStr;\n            keyValue.stringValue = valStr;\n            keyValues.push(keyValue);\n        });\n\n        log.fields = keyValues;\n\n        return log;\n    }\n}\n","module.exports = require('./generated/thrift_all.js').crouton_thrift;\n","//\n// GENERATED FILE - DO NOT EDIT DIRECTLY\n//\n// See scripts/build_browser_thrift_lib.js\n//\n//\n(function() {\nvar Thrift = {};\nvar crouton_thrift = {};\n//\n// Autogenerated by Thrift Compiler (0.9.2)\n//\n// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n//\n\n\nif (typeof crouton_thrift === 'undefined') {\n  crouton_thrift = {};\n}\ncrouton_thrift.KeyValue = function(args) {\n  this.Key = null;\n  this.Value = null;\n  if (args) {\n    if (args.Key !== undefined) {\n      this.Key = args.Key;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Key is unset!');\n    }\n    if (args.Value !== undefined) {\n      this.Value = args.Value;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Value is unset!');\n    }\n  }\n};\ncrouton_thrift.KeyValue.prototype = {};\ncrouton_thrift.KeyValue.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.Key = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.Value = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.KeyValue.prototype.write = false && function(output) {\n  output.writeStructBegin('KeyValue');\n  if (this.Key !== null && this.Key !== undefined) {\n    output.writeFieldBegin('Key', Thrift.Type.STRING, 1);\n    output.writeString(this.Key);\n    output.writeFieldEnd();\n  }\n  if (this.Value !== null && this.Value !== undefined) {\n    output.writeFieldBegin('Value', Thrift.Type.STRING, 2);\n    output.writeString(this.Value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.NamedCounter = function(args) {\n  this.Name = null;\n  this.Value = null;\n  if (args) {\n    if (args.Name !== undefined) {\n      this.Name = args.Name;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Name is unset!');\n    }\n    if (args.Value !== undefined) {\n      this.Value = args.Value;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Value is unset!');\n    }\n  }\n};\ncrouton_thrift.NamedCounter.prototype = {};\ncrouton_thrift.NamedCounter.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.Name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.Value = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.NamedCounter.prototype.write = false && function(output) {\n  output.writeStructBegin('NamedCounter');\n  if (this.Name !== null && this.Name !== undefined) {\n    output.writeFieldBegin('Name', Thrift.Type.STRING, 1);\n    output.writeString(this.Name);\n    output.writeFieldEnd();\n  }\n  if (this.Value !== null && this.Value !== undefined) {\n    output.writeFieldBegin('Value', Thrift.Type.I64, 2);\n    output.writeI64(this.Value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Runtime = function(args) {\n  this.guid = null;\n  this.start_micros = null;\n  this.group_name = null;\n  this.attrs = null;\n  if (args) {\n    if (args.guid !== undefined) {\n      this.guid = args.guid;\n    }\n    if (args.start_micros !== undefined) {\n      this.start_micros = args.start_micros;\n    }\n    if (args.group_name !== undefined) {\n      this.group_name = args.group_name;\n    }\n    if (args.attrs !== undefined) {\n      this.attrs = args.attrs;\n    }\n  }\n};\ncrouton_thrift.Runtime.prototype = {};\ncrouton_thrift.Runtime.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.start_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.group_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size0 = 0;\n        var _rtmp34;\n        this.attrs = [];\n        var _etype3 = 0;\n        _rtmp34 = input.readListBegin();\n        _etype3 = _rtmp34.etype;\n        _size0 = _rtmp34.size;\n        for (var _i5 = 0; _i5 < _size0; ++_i5)\n        {\n          var elem6 = null;\n          elem6 = new crouton_thrift.KeyValue();\n          elem6.read(input);\n          this.attrs.push(elem6);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Runtime.prototype.write = false && function(output) {\n  output.writeStructBegin('Runtime');\n  if (this.guid !== null && this.guid !== undefined) {\n    output.writeFieldBegin('guid', Thrift.Type.STRING, 1);\n    output.writeString(this.guid);\n    output.writeFieldEnd();\n  }\n  if (this.start_micros !== null && this.start_micros !== undefined) {\n    output.writeFieldBegin('start_micros', Thrift.Type.I64, 2);\n    output.writeI64(this.start_micros);\n    output.writeFieldEnd();\n  }\n  if (this.group_name !== null && this.group_name !== undefined) {\n    output.writeFieldBegin('group_name', Thrift.Type.STRING, 3);\n    output.writeString(this.group_name);\n    output.writeFieldEnd();\n  }\n  if (this.attrs !== null && this.attrs !== undefined) {\n    output.writeFieldBegin('attrs', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.attrs.length);\n    for (var iter7 in this.attrs)\n    {\n      if (this.attrs.hasOwnProperty(iter7))\n      {\n        iter7 = this.attrs[iter7];\n        iter7.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.LogRecord = function(args) {\n  this.timestamp_micros = null;\n  this.fields = null;\n  this.runtime_guid = null;\n  this.span_guid = null;\n  this.stable_name = null;\n  this.message = null;\n  this.level = null;\n  this.thread_id = null;\n  this.filename = null;\n  this.line_number = null;\n  this.stack_frames = null;\n  this.payload_json = null;\n  this.error_flag = null;\n  if (args) {\n    if (args.timestamp_micros !== undefined) {\n      this.timestamp_micros = args.timestamp_micros;\n    }\n    if (args.fields !== undefined) {\n      this.fields = args.fields;\n    }\n    if (args.runtime_guid !== undefined) {\n      this.runtime_guid = args.runtime_guid;\n    }\n    if (args.span_guid !== undefined) {\n      this.span_guid = args.span_guid;\n    }\n    if (args.stable_name !== undefined) {\n      this.stable_name = args.stable_name;\n    }\n    if (args.message !== undefined) {\n      this.message = args.message;\n    }\n    if (args.level !== undefined) {\n      this.level = args.level;\n    }\n    if (args.thread_id !== undefined) {\n      this.thread_id = args.thread_id;\n    }\n    if (args.filename !== undefined) {\n      this.filename = args.filename;\n    }\n    if (args.line_number !== undefined) {\n      this.line_number = args.line_number;\n    }\n    if (args.stack_frames !== undefined) {\n      this.stack_frames = args.stack_frames;\n    }\n    if (args.payload_json !== undefined) {\n      this.payload_json = args.payload_json;\n    }\n    if (args.error_flag !== undefined) {\n      this.error_flag = args.error_flag;\n    }\n  }\n};\ncrouton_thrift.LogRecord.prototype = {};\ncrouton_thrift.LogRecord.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.timestamp_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 13:\n      if (ftype == Thrift.Type.LIST) {\n        var _size8 = 0;\n        var _rtmp312;\n        this.fields = [];\n        var _etype11 = 0;\n        _rtmp312 = input.readListBegin();\n        _etype11 = _rtmp312.etype;\n        _size8 = _rtmp312.size;\n        for (var _i13 = 0; _i13 < _size8; ++_i13)\n        {\n          var elem14 = null;\n          elem14 = new crouton_thrift.KeyValue();\n          elem14.read(input);\n          this.fields.push(elem14);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.runtime_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.span_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.stable_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRING) {\n        this.message = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.STRING) {\n        this.level = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.I64) {\n        this.thread_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.STRING) {\n        this.filename = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.I64) {\n        this.line_number = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.LIST) {\n        var _size15 = 0;\n        var _rtmp319;\n        this.stack_frames = [];\n        var _etype18 = 0;\n        _rtmp319 = input.readListBegin();\n        _etype18 = _rtmp319.etype;\n        _size15 = _rtmp319.size;\n        for (var _i20 = 0; _i20 < _size15; ++_i20)\n        {\n          var elem21 = null;\n          elem21 = input.readString().value;\n          this.stack_frames.push(elem21);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 11:\n      if (ftype == Thrift.Type.STRING) {\n        this.payload_json = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 12:\n      if (ftype == Thrift.Type.BOOL) {\n        this.error_flag = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.LogRecord.prototype.write = false && function(output) {\n  output.writeStructBegin('LogRecord');\n  if (this.timestamp_micros !== null && this.timestamp_micros !== undefined) {\n    output.writeFieldBegin('timestamp_micros', Thrift.Type.I64, 1);\n    output.writeI64(this.timestamp_micros);\n    output.writeFieldEnd();\n  }\n  if (this.fields !== null && this.fields !== undefined) {\n    output.writeFieldBegin('fields', Thrift.Type.LIST, 13);\n    output.writeListBegin(Thrift.Type.STRUCT, this.fields.length);\n    for (var iter22 in this.fields)\n    {\n      if (this.fields.hasOwnProperty(iter22))\n      {\n        iter22 = this.fields[iter22];\n        iter22.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.runtime_guid !== null && this.runtime_guid !== undefined) {\n    output.writeFieldBegin('runtime_guid', Thrift.Type.STRING, 2);\n    output.writeString(this.runtime_guid);\n    output.writeFieldEnd();\n  }\n  if (this.span_guid !== null && this.span_guid !== undefined) {\n    output.writeFieldBegin('span_guid', Thrift.Type.STRING, 3);\n    output.writeString(this.span_guid);\n    output.writeFieldEnd();\n  }\n  if (this.stable_name !== null && this.stable_name !== undefined) {\n    output.writeFieldBegin('stable_name', Thrift.Type.STRING, 4);\n    output.writeString(this.stable_name);\n    output.writeFieldEnd();\n  }\n  if (this.message !== null && this.message !== undefined) {\n    output.writeFieldBegin('message', Thrift.Type.STRING, 5);\n    output.writeString(this.message);\n    output.writeFieldEnd();\n  }\n  if (this.level !== null && this.level !== undefined) {\n    output.writeFieldBegin('level', Thrift.Type.STRING, 6);\n    output.writeString(this.level);\n    output.writeFieldEnd();\n  }\n  if (this.thread_id !== null && this.thread_id !== undefined) {\n    output.writeFieldBegin('thread_id', Thrift.Type.I64, 7);\n    output.writeI64(this.thread_id);\n    output.writeFieldEnd();\n  }\n  if (this.filename !== null && this.filename !== undefined) {\n    output.writeFieldBegin('filename', Thrift.Type.STRING, 8);\n    output.writeString(this.filename);\n    output.writeFieldEnd();\n  }\n  if (this.line_number !== null && this.line_number !== undefined) {\n    output.writeFieldBegin('line_number', Thrift.Type.I64, 9);\n    output.writeI64(this.line_number);\n    output.writeFieldEnd();\n  }\n  if (this.stack_frames !== null && this.stack_frames !== undefined) {\n    output.writeFieldBegin('stack_frames', Thrift.Type.LIST, 10);\n    output.writeListBegin(Thrift.Type.STRING, this.stack_frames.length);\n    for (var iter23 in this.stack_frames)\n    {\n      if (this.stack_frames.hasOwnProperty(iter23))\n      {\n        iter23 = this.stack_frames[iter23];\n        output.writeString(iter23);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.payload_json !== null && this.payload_json !== undefined) {\n    output.writeFieldBegin('payload_json', Thrift.Type.STRING, 11);\n    output.writeString(this.payload_json);\n    output.writeFieldEnd();\n  }\n  if (this.error_flag !== null && this.error_flag !== undefined) {\n    output.writeFieldBegin('error_flag', Thrift.Type.BOOL, 12);\n    output.writeBool(this.error_flag);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.TraceJoinId = function(args) {\n  this.TraceKey = null;\n  this.Value = null;\n  if (args) {\n    if (args.TraceKey !== undefined) {\n      this.TraceKey = args.TraceKey;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field TraceKey is unset!');\n    }\n    if (args.Value !== undefined) {\n      this.Value = args.Value;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Value is unset!');\n    }\n  }\n};\ncrouton_thrift.TraceJoinId.prototype = {};\ncrouton_thrift.TraceJoinId.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.TraceKey = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.Value = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.TraceJoinId.prototype.write = false && function(output) {\n  output.writeStructBegin('TraceJoinId');\n  if (this.TraceKey !== null && this.TraceKey !== undefined) {\n    output.writeFieldBegin('TraceKey', Thrift.Type.STRING, 1);\n    output.writeString(this.TraceKey);\n    output.writeFieldEnd();\n  }\n  if (this.Value !== null && this.Value !== undefined) {\n    output.writeFieldBegin('Value', Thrift.Type.STRING, 2);\n    output.writeString(this.Value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.SpanRecord = function(args) {\n  this.span_guid = null;\n  this.trace_guid = null;\n  this.runtime_guid = null;\n  this.span_name = null;\n  this.join_ids = null;\n  this.oldest_micros = null;\n  this.youngest_micros = null;\n  this.attributes = null;\n  this.error_flag = null;\n  this.log_records = null;\n  if (args) {\n    if (args.span_guid !== undefined) {\n      this.span_guid = args.span_guid;\n    }\n    if (args.trace_guid !== undefined) {\n      this.trace_guid = args.trace_guid;\n    }\n    if (args.runtime_guid !== undefined) {\n      this.runtime_guid = args.runtime_guid;\n    }\n    if (args.span_name !== undefined) {\n      this.span_name = args.span_name;\n    }\n    if (args.join_ids !== undefined) {\n      this.join_ids = args.join_ids;\n    }\n    if (args.oldest_micros !== undefined) {\n      this.oldest_micros = args.oldest_micros;\n    }\n    if (args.youngest_micros !== undefined) {\n      this.youngest_micros = args.youngest_micros;\n    }\n    if (args.attributes !== undefined) {\n      this.attributes = args.attributes;\n    }\n    if (args.error_flag !== undefined) {\n      this.error_flag = args.error_flag;\n    }\n    if (args.log_records !== undefined) {\n      this.log_records = args.log_records;\n    }\n  }\n};\ncrouton_thrift.SpanRecord.prototype = {};\ncrouton_thrift.SpanRecord.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.span_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 11:\n      if (ftype == Thrift.Type.STRING) {\n        this.trace_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.runtime_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.span_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size24 = 0;\n        var _rtmp328;\n        this.join_ids = [];\n        var _etype27 = 0;\n        _rtmp328 = input.readListBegin();\n        _etype27 = _rtmp328.etype;\n        _size24 = _rtmp328.size;\n        for (var _i29 = 0; _i29 < _size24; ++_i29)\n        {\n          var elem30 = null;\n          elem30 = new crouton_thrift.TraceJoinId();\n          elem30.read(input);\n          this.join_ids.push(elem30);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I64) {\n        this.oldest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.I64) {\n        this.youngest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.LIST) {\n        var _size31 = 0;\n        var _rtmp335;\n        this.attributes = [];\n        var _etype34 = 0;\n        _rtmp335 = input.readListBegin();\n        _etype34 = _rtmp335.etype;\n        _size31 = _rtmp335.size;\n        for (var _i36 = 0; _i36 < _size31; ++_i36)\n        {\n          var elem37 = null;\n          elem37 = new crouton_thrift.KeyValue();\n          elem37.read(input);\n          this.attributes.push(elem37);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.BOOL) {\n        this.error_flag = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.LIST) {\n        var _size38 = 0;\n        var _rtmp342;\n        this.log_records = [];\n        var _etype41 = 0;\n        _rtmp342 = input.readListBegin();\n        _etype41 = _rtmp342.etype;\n        _size38 = _rtmp342.size;\n        for (var _i43 = 0; _i43 < _size38; ++_i43)\n        {\n          var elem44 = null;\n          elem44 = new crouton_thrift.LogRecord();\n          elem44.read(input);\n          this.log_records.push(elem44);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.SpanRecord.prototype.write = false && function(output) {\n  output.writeStructBegin('SpanRecord');\n  if (this.span_guid !== null && this.span_guid !== undefined) {\n    output.writeFieldBegin('span_guid', Thrift.Type.STRING, 1);\n    output.writeString(this.span_guid);\n    output.writeFieldEnd();\n  }\n  if (this.trace_guid !== null && this.trace_guid !== undefined) {\n    output.writeFieldBegin('trace_guid', Thrift.Type.STRING, 11);\n    output.writeString(this.trace_guid);\n    output.writeFieldEnd();\n  }\n  if (this.runtime_guid !== null && this.runtime_guid !== undefined) {\n    output.writeFieldBegin('runtime_guid', Thrift.Type.STRING, 2);\n    output.writeString(this.runtime_guid);\n    output.writeFieldEnd();\n  }\n  if (this.span_name !== null && this.span_name !== undefined) {\n    output.writeFieldBegin('span_name', Thrift.Type.STRING, 3);\n    output.writeString(this.span_name);\n    output.writeFieldEnd();\n  }\n  if (this.join_ids !== null && this.join_ids !== undefined) {\n    output.writeFieldBegin('join_ids', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.join_ids.length);\n    for (var iter45 in this.join_ids)\n    {\n      if (this.join_ids.hasOwnProperty(iter45))\n      {\n        iter45 = this.join_ids[iter45];\n        iter45.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.oldest_micros !== null && this.oldest_micros !== undefined) {\n    output.writeFieldBegin('oldest_micros', Thrift.Type.I64, 5);\n    output.writeI64(this.oldest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.youngest_micros !== null && this.youngest_micros !== undefined) {\n    output.writeFieldBegin('youngest_micros', Thrift.Type.I64, 6);\n    output.writeI64(this.youngest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.attributes !== null && this.attributes !== undefined) {\n    output.writeFieldBegin('attributes', Thrift.Type.LIST, 8);\n    output.writeListBegin(Thrift.Type.STRUCT, this.attributes.length);\n    for (var iter46 in this.attributes)\n    {\n      if (this.attributes.hasOwnProperty(iter46))\n      {\n        iter46 = this.attributes[iter46];\n        iter46.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.error_flag !== null && this.error_flag !== undefined) {\n    output.writeFieldBegin('error_flag', Thrift.Type.BOOL, 9);\n    output.writeBool(this.error_flag);\n    output.writeFieldEnd();\n  }\n  if (this.log_records !== null && this.log_records !== undefined) {\n    output.writeFieldBegin('log_records', Thrift.Type.LIST, 10);\n    output.writeListBegin(Thrift.Type.STRUCT, this.log_records.length);\n    for (var iter47 in this.log_records)\n    {\n      if (this.log_records.hasOwnProperty(iter47))\n      {\n        iter47 = this.log_records[iter47];\n        iter47.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Auth = function(args) {\n  this.access_token = null;\n  if (args) {\n    if (args.access_token !== undefined) {\n      this.access_token = args.access_token;\n    }\n  }\n};\ncrouton_thrift.Auth.prototype = {};\ncrouton_thrift.Auth.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.access_token = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Auth.prototype.write = false && function(output) {\n  output.writeStructBegin('Auth');\n  if (this.access_token !== null && this.access_token !== undefined) {\n    output.writeFieldBegin('access_token', Thrift.Type.STRING, 1);\n    output.writeString(this.access_token);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Timing = function(args) {\n  this.receive_micros = null;\n  this.transmit_micros = null;\n  if (args) {\n    if (args.receive_micros !== undefined) {\n      this.receive_micros = args.receive_micros;\n    }\n    if (args.transmit_micros !== undefined) {\n      this.transmit_micros = args.transmit_micros;\n    }\n  }\n};\ncrouton_thrift.Timing.prototype = {};\ncrouton_thrift.Timing.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.receive_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.transmit_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Timing.prototype.write = false && function(output) {\n  output.writeStructBegin('Timing');\n  if (this.receive_micros !== null && this.receive_micros !== undefined) {\n    output.writeFieldBegin('receive_micros', Thrift.Type.I64, 1);\n    output.writeI64(this.receive_micros);\n    output.writeFieldEnd();\n  }\n  if (this.transmit_micros !== null && this.transmit_micros !== undefined) {\n    output.writeFieldBegin('transmit_micros', Thrift.Type.I64, 2);\n    output.writeI64(this.transmit_micros);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.SampleCount = function(args) {\n  this.oldest_micros = null;\n  this.youngest_micros = null;\n  this.count = null;\n  if (args) {\n    if (args.oldest_micros !== undefined) {\n      this.oldest_micros = args.oldest_micros;\n    }\n    if (args.youngest_micros !== undefined) {\n      this.youngest_micros = args.youngest_micros;\n    }\n    if (args.count !== undefined) {\n      this.count = args.count;\n    }\n  }\n};\ncrouton_thrift.SampleCount.prototype = {};\ncrouton_thrift.SampleCount.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.oldest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.youngest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.count = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.SampleCount.prototype.write = false && function(output) {\n  output.writeStructBegin('SampleCount');\n  if (this.oldest_micros !== null && this.oldest_micros !== undefined) {\n    output.writeFieldBegin('oldest_micros', Thrift.Type.I64, 1);\n    output.writeI64(this.oldest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.youngest_micros !== null && this.youngest_micros !== undefined) {\n    output.writeFieldBegin('youngest_micros', Thrift.Type.I64, 2);\n    output.writeI64(this.youngest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.count !== null && this.count !== undefined) {\n    output.writeFieldBegin('count', Thrift.Type.I64, 3);\n    output.writeI64(this.count);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.MetricsSample = function(args) {\n  this.name = null;\n  this.int64_value = null;\n  this.double_value = null;\n  if (args) {\n    if (args.name !== undefined) {\n      this.name = args.name;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field name is unset!');\n    }\n    if (args.int64_value !== undefined) {\n      this.int64_value = args.int64_value;\n    }\n    if (args.double_value !== undefined) {\n      this.double_value = args.double_value;\n    }\n  }\n};\ncrouton_thrift.MetricsSample.prototype = {};\ncrouton_thrift.MetricsSample.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.int64_value = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.DOUBLE) {\n        this.double_value = input.readDouble().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.MetricsSample.prototype.write = false && function(output) {\n  output.writeStructBegin('MetricsSample');\n  if (this.name !== null && this.name !== undefined) {\n    output.writeFieldBegin('name', Thrift.Type.STRING, 1);\n    output.writeString(this.name);\n    output.writeFieldEnd();\n  }\n  if (this.int64_value !== null && this.int64_value !== undefined) {\n    output.writeFieldBegin('int64_value', Thrift.Type.I64, 2);\n    output.writeI64(this.int64_value);\n    output.writeFieldEnd();\n  }\n  if (this.double_value !== null && this.double_value !== undefined) {\n    output.writeFieldBegin('double_value', Thrift.Type.DOUBLE, 3);\n    output.writeDouble(this.double_value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Metrics = function(args) {\n  this.counts = null;\n  this.gauges = null;\n  if (args) {\n    if (args.counts !== undefined) {\n      this.counts = args.counts;\n    }\n    if (args.gauges !== undefined) {\n      this.gauges = args.gauges;\n    }\n  }\n};\ncrouton_thrift.Metrics.prototype = {};\ncrouton_thrift.Metrics.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size48 = 0;\n        var _rtmp352;\n        this.counts = [];\n        var _etype51 = 0;\n        _rtmp352 = input.readListBegin();\n        _etype51 = _rtmp352.etype;\n        _size48 = _rtmp352.size;\n        for (var _i53 = 0; _i53 < _size48; ++_i53)\n        {\n          var elem54 = null;\n          elem54 = new crouton_thrift.MetricsSample();\n          elem54.read(input);\n          this.counts.push(elem54);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.LIST) {\n        var _size55 = 0;\n        var _rtmp359;\n        this.gauges = [];\n        var _etype58 = 0;\n        _rtmp359 = input.readListBegin();\n        _etype58 = _rtmp359.etype;\n        _size55 = _rtmp359.size;\n        for (var _i60 = 0; _i60 < _size55; ++_i60)\n        {\n          var elem61 = null;\n          elem61 = new crouton_thrift.MetricsSample();\n          elem61.read(input);\n          this.gauges.push(elem61);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Metrics.prototype.write = false && function(output) {\n  output.writeStructBegin('Metrics');\n  if (this.counts !== null && this.counts !== undefined) {\n    output.writeFieldBegin('counts', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.counts.length);\n    for (var iter62 in this.counts)\n    {\n      if (this.counts.hasOwnProperty(iter62))\n      {\n        iter62 = this.counts[iter62];\n        iter62.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.gauges !== null && this.gauges !== undefined) {\n    output.writeFieldBegin('gauges', Thrift.Type.LIST, 2);\n    output.writeListBegin(Thrift.Type.STRUCT, this.gauges.length);\n    for (var iter63 in this.gauges)\n    {\n      if (this.gauges.hasOwnProperty(iter63))\n      {\n        iter63 = this.gauges[iter63];\n        iter63.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportRequest = function(args) {\n  this.runtime = null;\n  this.span_records = null;\n  this.log_records = null;\n  this.timestamp_offset_micros = null;\n  this.oldest_micros = null;\n  this.youngest_micros = null;\n  this.counters = null;\n  this.internal_logs = null;\n  this.internal_metrics = null;\n  if (args) {\n    if (args.runtime !== undefined) {\n      this.runtime = args.runtime;\n    }\n    if (args.span_records !== undefined) {\n      this.span_records = args.span_records;\n    }\n    if (args.log_records !== undefined) {\n      this.log_records = args.log_records;\n    }\n    if (args.timestamp_offset_micros !== undefined) {\n      this.timestamp_offset_micros = args.timestamp_offset_micros;\n    }\n    if (args.oldest_micros !== undefined) {\n      this.oldest_micros = args.oldest_micros;\n    }\n    if (args.youngest_micros !== undefined) {\n      this.youngest_micros = args.youngest_micros;\n    }\n    if (args.counters !== undefined) {\n      this.counters = args.counters;\n    }\n    if (args.internal_logs !== undefined) {\n      this.internal_logs = args.internal_logs;\n    }\n    if (args.internal_metrics !== undefined) {\n      this.internal_metrics = args.internal_metrics;\n    }\n  }\n};\ncrouton_thrift.ReportRequest.prototype = {};\ncrouton_thrift.ReportRequest.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.runtime = new crouton_thrift.Runtime();\n        this.runtime.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size64 = 0;\n        var _rtmp368;\n        this.span_records = [];\n        var _etype67 = 0;\n        _rtmp368 = input.readListBegin();\n        _etype67 = _rtmp368.etype;\n        _size64 = _rtmp368.size;\n        for (var _i69 = 0; _i69 < _size64; ++_i69)\n        {\n          var elem70 = null;\n          elem70 = new crouton_thrift.SpanRecord();\n          elem70.read(input);\n          this.span_records.push(elem70);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size71 = 0;\n        var _rtmp375;\n        this.log_records = [];\n        var _etype74 = 0;\n        _rtmp375 = input.readListBegin();\n        _etype74 = _rtmp375.etype;\n        _size71 = _rtmp375.size;\n        for (var _i76 = 0; _i76 < _size71; ++_i76)\n        {\n          var elem77 = null;\n          elem77 = new crouton_thrift.LogRecord();\n          elem77.read(input);\n          this.log_records.push(elem77);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I64) {\n        this.timestamp_offset_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.I64) {\n        this.oldest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.I64) {\n        this.youngest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.LIST) {\n        var _size78 = 0;\n        var _rtmp382;\n        this.counters = [];\n        var _etype81 = 0;\n        _rtmp382 = input.readListBegin();\n        _etype81 = _rtmp382.etype;\n        _size78 = _rtmp382.size;\n        for (var _i83 = 0; _i83 < _size78; ++_i83)\n        {\n          var elem84 = null;\n          elem84 = new crouton_thrift.NamedCounter();\n          elem84.read(input);\n          this.counters.push(elem84);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.LIST) {\n        var _size85 = 0;\n        var _rtmp389;\n        this.internal_logs = [];\n        var _etype88 = 0;\n        _rtmp389 = input.readListBegin();\n        _etype88 = _rtmp389.etype;\n        _size85 = _rtmp389.size;\n        for (var _i90 = 0; _i90 < _size85; ++_i90)\n        {\n          var elem91 = null;\n          elem91 = new crouton_thrift.LogRecord();\n          elem91.read(input);\n          this.internal_logs.push(elem91);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 11:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.internal_metrics = new crouton_thrift.Metrics();\n        this.internal_metrics.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportRequest.prototype.write = false && function(output) {\n  output.writeStructBegin('ReportRequest');\n  if (this.runtime !== null && this.runtime !== undefined) {\n    output.writeFieldBegin('runtime', Thrift.Type.STRUCT, 1);\n    this.runtime.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.span_records !== null && this.span_records !== undefined) {\n    output.writeFieldBegin('span_records', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRUCT, this.span_records.length);\n    for (var iter92 in this.span_records)\n    {\n      if (this.span_records.hasOwnProperty(iter92))\n      {\n        iter92 = this.span_records[iter92];\n        iter92.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.log_records !== null && this.log_records !== undefined) {\n    output.writeFieldBegin('log_records', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.log_records.length);\n    for (var iter93 in this.log_records)\n    {\n      if (this.log_records.hasOwnProperty(iter93))\n      {\n        iter93 = this.log_records[iter93];\n        iter93.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.timestamp_offset_micros !== null && this.timestamp_offset_micros !== undefined) {\n    output.writeFieldBegin('timestamp_offset_micros', Thrift.Type.I64, 5);\n    output.writeI64(this.timestamp_offset_micros);\n    output.writeFieldEnd();\n  }\n  if (this.oldest_micros !== null && this.oldest_micros !== undefined) {\n    output.writeFieldBegin('oldest_micros', Thrift.Type.I64, 7);\n    output.writeI64(this.oldest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.youngest_micros !== null && this.youngest_micros !== undefined) {\n    output.writeFieldBegin('youngest_micros', Thrift.Type.I64, 8);\n    output.writeI64(this.youngest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.counters !== null && this.counters !== undefined) {\n    output.writeFieldBegin('counters', Thrift.Type.LIST, 9);\n    output.writeListBegin(Thrift.Type.STRUCT, this.counters.length);\n    for (var iter94 in this.counters)\n    {\n      if (this.counters.hasOwnProperty(iter94))\n      {\n        iter94 = this.counters[iter94];\n        iter94.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.internal_logs !== null && this.internal_logs !== undefined) {\n    output.writeFieldBegin('internal_logs', Thrift.Type.LIST, 10);\n    output.writeListBegin(Thrift.Type.STRUCT, this.internal_logs.length);\n    for (var iter95 in this.internal_logs)\n    {\n      if (this.internal_logs.hasOwnProperty(iter95))\n      {\n        iter95 = this.internal_logs[iter95];\n        iter95.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.internal_metrics !== null && this.internal_metrics !== undefined) {\n    output.writeFieldBegin('internal_metrics', Thrift.Type.STRUCT, 11);\n    this.internal_metrics.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Command = function(args) {\n  this.disable = null;\n  if (args) {\n    if (args.disable !== undefined) {\n      this.disable = args.disable;\n    }\n  }\n};\ncrouton_thrift.Command.prototype = {};\ncrouton_thrift.Command.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.BOOL) {\n        this.disable = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Command.prototype.write = false && function(output) {\n  output.writeStructBegin('Command');\n  if (this.disable !== null && this.disable !== undefined) {\n    output.writeFieldBegin('disable', Thrift.Type.BOOL, 1);\n    output.writeBool(this.disable);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportResponse = function(args) {\n  this.commands = null;\n  this.timing = null;\n  if (args) {\n    if (args.commands !== undefined) {\n      this.commands = args.commands;\n    }\n    if (args.timing !== undefined) {\n      this.timing = args.timing;\n    }\n  }\n};\ncrouton_thrift.ReportResponse.prototype = {};\ncrouton_thrift.ReportResponse.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size96 = 0;\n        var _rtmp3100;\n        this.commands = [];\n        var _etype99 = 0;\n        _rtmp3100 = input.readListBegin();\n        _etype99 = _rtmp3100.etype;\n        _size96 = _rtmp3100.size;\n        for (var _i101 = 0; _i101 < _size96; ++_i101)\n        {\n          var elem102 = null;\n          elem102 = new crouton_thrift.Command();\n          elem102.read(input);\n          this.commands.push(elem102);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.timing = new crouton_thrift.Timing();\n        this.timing.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportResponse.prototype.write = false && function(output) {\n  output.writeStructBegin('ReportResponse');\n  if (this.commands !== null && this.commands !== undefined) {\n    output.writeFieldBegin('commands', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.commands.length);\n    for (var iter103 in this.commands)\n    {\n      if (this.commands.hasOwnProperty(iter103))\n      {\n        iter103 = this.commands[iter103];\n        iter103.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.timing !== null && this.timing !== undefined) {\n    output.writeFieldBegin('timing', Thrift.Type.STRUCT, 2);\n    this.timing.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\n\nmodule.exports.crouton_thrift = crouton_thrift;\nmodule.exports.Thrift = {}\n})();","/* global WorkerGlobalScope */\n// Find the HTML element that included the tracing library (if there is one).\n// This relies on the fact that scripts are executed as soon as they are\n// included -- thus 'this' script is the last one in the array at the time\n// this is run.\nlet hostScriptElement = (function () {\n    // check to see if we're in a webworker\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        return null;\n    }\n    let scripts = document.getElementsByTagName('SCRIPT');\n    if (!(scripts.length > 0)) {\n        return null;\n    }\n    return scripts[scripts.length - 1];\n}());\n\nfunction urlQueryParameters(defaults) {\n    let vars = {};\n    let qi = window.location.href.indexOf('?');\n    if (qi < 0) {\n        return vars;\n    }\n    let slice = window.location.href.slice(qi + 1);\n    if (slice.indexOf('#') >= 0) {\n        slice = slice.slice(0, slice.indexOf('#'));\n    }\n    let hashes = slice.replace(/\\+/, '%20').split('&');\n    for (let i = 0; i < hashes.length; i++) {\n        let hash = hashes[i].split('=');\n        vars[decodeURIComponent(hash[0])] = decodeURIComponent(hash[1]);\n    }\n    return vars;\n}\n\n// Parses options out of the host <script> element. Allows for easy configuration\n// via the HTML element. Example:\n//\n// <script src='lightstep.min.js'\n//      data-access_token='{my_access_token}'\n//      data-component_name='my_component'></script>\n//\n// Note: relies on the global hostScriptElement variable defined above.\n//\nmodule.exports.parseScriptElementOptions = function (opts, browserOpts) {\n    if (!hostScriptElement) {\n        return;\n    }\n\n    let dataset = hostScriptElement.dataset;\n\n    let accessToken = dataset.access_token;\n    if (typeof accessToken === 'string' && accessToken.length > 0) {\n        opts.access_token = accessToken;\n    }\n\n    let componentName = dataset.component_name;\n    if (typeof componentName === 'string' && componentName.length > 0) {\n        opts.component_name = componentName;\n    }\n\n    let collectorHost = dataset.collector_host;\n    if (typeof collectorHost === 'string' && collectorHost.length > 0) {\n        opts.collector_host = collectorHost;\n    }\n    let collectorPort = dataset.collector_port;\n    if (collectorPort) {\n        opts.collector_port = parseInt(collectorPort, 10);\n    }\n    let collectorPath = dataset.collector_path;\n    if (typeof collectorPath === 'string' && collectorPath.length > 0) {\n        opts.collector_path = collectorPath;\n    }\n    let collectorEncryption = dataset.collector_encryption;\n    if (collectorEncryption) {\n        opts.collector_encryption = collectorEncryption;\n    }\n\n    let enable = dataset.enable;\n    if (typeof enable === 'string') {\n        if (enable === 'true') {\n            opts.enable = true;\n        } else if (enable === 'false') {\n            opts.enable = false;\n        }\n    }\n    let verbosity = dataset.verbosity;\n    if (typeof verbosity === 'string') {\n        opts.verbosity = parseInt(verbosity, 10);\n    }\n\n    let init = dataset.init_global_tracer;\n    if (typeof init === 'string') {\n        if (init === 'true') {\n            browserOpts.init_global_tracer = true;\n        } else if (init === 'false') {\n            browserOpts.init_global_tracer = false;\n        }\n    }\n\n    // NOTE: this is a little inelegant as this is hard-coding support for a\n    // \"plug-in\" option.\n    if (typeof dataset.xhr_instrumentation === 'string' && dataset.xhr_instrumentation === 'true') {\n        opts.xhr_instrumentation = true;\n    }\n\n    if (typeof dataset.instrument_page_load === 'string' && dataset.instrument_page_load === 'true') {\n        opts.instrument_page_load = true;\n    }\n};\n\n// Parses options out of the current URL query string. The query parameters use\n// the 'lightstep_' prefix to reduce the chance of collision with\n// application-specific query parameters.\n//\n// This mechanism is particularly useful for debugging purposes as it does not\n// require any code or configuration changes.\n//\nmodule.exports.parseURLQueryOptions = function (opts) {\n    if (!window) {\n        return;\n    }\n\n    let params = urlQueryParameters();\n    if (params.lightstep_verbosity) {\n        try {\n            opts.verbosity = parseInt(params.lightstep_verbosity, 10);\n        } catch (_ignored) { /* Ignored */ }\n    }\n    if (params.lightstep_log_to_console) {\n        opts.log_to_console = true;\n    }\n};\n","const optionsParser = require('./options_parser.js');\nconst util = require('./util');\n\nconst kRuntimeGUIDCookiePrefix = 'lightstep_guid';\nconst kSessionIDCookieKey = 'lightstep_session_id';\nconst kCookieTimeToLiveSeconds = 7 * 24 * 60 * 60;\n\nlet nowMicrosImp = (function () {\n    // Is a hi-res timer available?\n    if (window.performance &&\n        window.performance.now &&\n        window.performance.timing &&\n        window.performance.timing.navigationStart) {\n        let start = performance.timing.navigationStart;\n        return function () {\n            return Math.floor((start + performance.now()) * 1000.0);\n        };\n    }\n    // The low-res timer is the best we can do\n    return function () {\n        return Date.now() * 1000.0;\n    };\n}());\n\nclass PlatformBrowser {\n\n    name() {\n        return 'browser';\n    }\n\n    nowMicros() {\n        return nowMicrosImp();\n    }\n\n    // Return the GUID to use for the runtime. The intention is to reuse the\n    // GUID so that logically a single browser session looks like a single\n    // runtime.\n    runtimeGUID(groupName) {\n        // Account for the groupName in the same that multiple apps or services\n        // are running on the same domain (and should not share the same\n        // runtime GUID).\n        let cookieKey = `${kRuntimeGUIDCookiePrefix}/${groupName}`;\n        let uuid = util.cookie(cookieKey) || this._generateLongUUID();\n        util.cookie(cookieKey, uuid, kCookieTimeToLiveSeconds, '/');\n\n        // Also create a session ID as well to give the server more information\n        // to coordinate with.\n        let sessionID = util.cookie(kSessionIDCookieKey) || this._generateLongUUID();\n        util.cookie(kSessionIDCookieKey, sessionID, kCookieTimeToLiveSeconds, '/');\n\n        return uuid;\n    }\n\n    generateUUID() {\n        return this._generateLongUUID();\n    }\n\n    _generateLongUUID() {\n        let p0 = `00000000${Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)}`.substr(-8);\n        let p1 = `00000000${Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)}`.substr(-8);\n        return `${p0}${p1}`;\n    }\n\n    onBeforeExit(...args) {\n        if (window) {\n            window.addEventListener('beforeunload', ...args);\n        }\n    }\n\n    plugins(opts) {\n        return [\n            require('../../../plugins/instrument_xhr'),\n            require('../../../plugins/instrument_document_load'),\n        ];\n    }\n\n    options(imp) {\n        let tracerOpts = {};\n        let browserOpts = {};\n        optionsParser.parseScriptElementOptions(tracerOpts, browserOpts);\n        optionsParser.parseURLQueryOptions(tracerOpts, browserOpts);\n        return tracerOpts;\n    }\n\n    static initLibrary(lib) {\n        let tracerOpts = {};\n        let browserOpts = {};\n        optionsParser.parseScriptElementOptions(tracerOpts, browserOpts);\n\n        if (browserOpts.init_global_tracer) {\n            PlatformBrowser.initGlobalTracer(lib, tracerOpts);\n        }\n    }\n    static initGlobalTracer(lib, opts) {\n        if (typeof window !== 'object') {\n            return;\n        }\n        if (typeof window.opentracing !== 'object') {\n            return;\n        }\n        opentracing.initGlobalTracer(new lib.Tracer(opts));  // eslint-disable-line no-undef\n    }\n\n    tracerTags() {\n        return {\n            'lightstep.tracer_platform' : 'browser',\n        };\n    }\n\n    // There's no way to truly \"fatal\" on the browser; the best approximation\n    // is an Error exception.\n    fatal(message) {\n        throw new Error(message);\n    }\n\n    localStoreGet(key) {\n        if (!window.sessionStorage) {\n            return null;\n        }\n        try {\n            return JSON.parse(sessionStorage.getItem(`lightstep/${key}`));\n        } catch (_ignored) {\n            return null;\n        }\n    }\n\n    localStoreSet(key, value) {\n        if (!window.sessionStorage) {\n            return;\n        }\n        try {\n            sessionStorage.setItem(`lightstep/${key}`, JSON.stringify(value));\n        } catch (_ignored) { /* Ignored */ }\n    }\n}\n\nmodule.exports = PlatformBrowser;\n","module.exports = require('./generated/thrift_all.js').Thrift;\n","import { lightstep } from '../../generated_proto';\nlet proto = lightstep.collector;\n\nexport default class TransportBrowser {\n\n    constructor() {\n        this._host = '';\n        this._port = 0;\n        this._path = '';\n        this._encryption = '';\n    }\n\n    ensureConnection(opts) {\n        this._host = opts.collector_host;\n        this._port = opts.collector_port;\n        this._path = opts.collector_path;\n        this._encryption = opts.collector_encryption;\n    }\n\n    report(detached, auth, report, done) {\n        try {\n            if (!detached) {\n                this._reportAJAX(auth, report, done);\n            }\n        } catch (e) {\n            return done(e, null);\n        }\n    }\n\n    _reportAJAX(auth, report, done) {\n        let reportProto = report.toProto(auth);\n        let protocol = (this._encryption === 'none') ? 'http' : 'https';\n        let url = `${protocol}://${this._host}:${this._port}${this._path}/api/v2/reports`;\n        let xhr = new XMLHttpRequest();\n        xhr.responseType = 'arraybuffer';\n        xhr.open('POST', url);\n        // Note: the browser automatically sets 'Connection' and 'Content-Length'\n        // and *does not* allow they to be set manually\n        xhr.setRequestHeader('Accept', 'application/octet-stream');\n        xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n        xhr.onreadystatechange = function () {\n            if (this.readyState === 4) {\n                let err = null;\n                let resp = null;\n                let jsonResp = null;\n                if (this.status !== 200) {\n                    err = new Error(`status code = ${this.status}`);\n                } else if (!this.response) {\n                    err = new Error('unexpected empty response');\n                } else {\n                    try {\n                        resp = proto.ReportResponse.decode(new Uint8Array(this.response));\n\n                        jsonResp = {\n                            timing : {\n                                receive_micros  : resp.receiveTimestamp,\n                                transmit_micros : resp.transmitTimestamp,\n                            },\n                            errors : resp.errors,\n                        };\n                    } catch (exception) {\n                        err = exception;\n                    }\n                }\n                return done(err, jsonResp);\n            }\n        };\n        let serialized = proto.ReportRequest.encode(reportProto).finish();\n        xhr.send(serialized);\n    }\n}\n","export default class TransportBrowser {\n\n    constructor() {\n        this._host = '';\n        this._port = 0;\n        this._path = '';\n        this._encryption = '';\n    }\n\n    ensureConnection(opts) {\n        this._host = opts.collector_host;\n        this._port = opts.collector_port;\n        this._path = opts.collector_path;\n        this._encryption = opts.collector_encryption;\n    }\n\n    report(detached, auth, report, done) {\n        try {\n            if (!detached) {\n                this._reportAJAX(auth, report, done);\n            } else {\n                this._reportAsyncScript(auth, report, done);\n            }\n        } catch (e) {\n            return done(e, null);\n        }\n    }\n\n    _reportAJAX(auth, report, done) {\n        let payload = JSON.stringify(report.toThrift());\n        let protocol = (this._encryption === 'none') ? 'http' : 'https';\n        let url = `${protocol}://${this._host}:${this._port}${this._path}/api/v0/reports`;\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST', url);\n        // Note: the browser automatically sets 'Connection' and 'Content-Length'\n        // and *does not* allow they to be set manually\n        xhr.setRequestHeader('LightStep-Access-Token', auth.getAccessToken());\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        //req.setRequestHeader('Content-Encoding', 'gzip');\n        xhr.onreadystatechange = function () {\n            if (this.readyState === 4) {\n                let err = null;\n                let resp = null;\n                if (this.status !== 200) {\n                    err = new Error(`status code = ${this.status}`);\n                } else if (!this.responseText) {\n                    err = new Error('unexpected empty response');\n                } else {\n                    try {\n                        resp = JSON.parse(this.responseText);\n                    } catch (exception) {\n                        err = exception;\n                    }\n                }\n                return done(err, resp);\n            }\n        };\n        xhr.send(payload);\n    }\n\n    // Do a \"tail flush\" using an async browser script load.  This does not get\n    // interrupted as a normal Thirft RPC would when navigating away from\n    // the page.\n    _reportAsyncScript(auth, report, done) {\n        let authJSON   = JSON.stringify(auth.toThrift());\n        let reportJSON = JSON.stringify(report.toThrift());\n        let protocol = (this._encryption === 'none') ? 'http' : 'https';\n        let url = `${protocol}://${this._host}:${this._port}${this._path}/_rpc/v1/reports/uri_encoded` +\n            `?auth=${encodeURIComponent(authJSON)}` +\n            `&report=${encodeURIComponent(reportJSON)}`;\n\n        let elem = document.createElement('script');\n        elem.async = true;\n        elem.defer = true;\n        elem.src = url;\n        elem.type = 'text/javascript';\n\n        let hostElem = document.getElementsByTagName('head')[0];\n        if (hostElem) {\n            hostElem.appendChild(elem);\n        }\n        return done(null, null);\n    }\n}\n","/* eslint-disable */\n\n// This function is copied directly from https://github.com/litejs/browser-cookie-lite.\n// It is licensed under the MIT License and authored by Lauri Rooden.\nfunction cookie(name, value, ttl, path, domain, secure) {\n    if (arguments.length > 1) {\n        let newCookie = name + '=' + encodeURIComponent(value) +\n            (ttl ? \"; expires=\" + new Date(+new Date()+(ttl*1000)).toUTCString() : '') +\n            (path   ? \"; path=\" + path : '') +\n            (domain ? \"; domain=\" + domain : '') +\n            (secure ? \"; secure\" : '');\n        document.cookie = newCookie;\n        return newCookie;\n    }\n    return decodeURIComponent(((\"; \"+document.cookie).split(\"; \"+name+\"=\")[1]||\"\").split(\";\")[0]);\n}\n\n/* eslint-enable */\n\nmodule.exports = {\n    cookie : cookie,\n};\n","import { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport _each from '../_each'; // eslint-disable-line camelcase\nimport * as coerce from './coerce.js';\nimport { lightstep } from './generated_proto';\nlet proto = lightstep.collector;\n\nexport default class ReportImp {\n    constructor(runtime, oldestMicros, youngestMicros, spanRecords, internalLogs, counters, timestampOffsetMicros) {\n        this._runtime = runtime;\n        this._oldestMicros = oldestMicros;\n        this._youngestMicros = youngestMicros;\n        this._spanRecords = spanRecords;\n        this._internalLogs = internalLogs;\n        this._counters = counters;\n        this._timestampOffsetMicros = timestampOffsetMicros;\n    }\n\n    getSpanRecords() {\n        return this._spanRecords;\n    }\n\n    getInternalLogs() {\n        return this._internalLogs;\n    }\n\n    getCounters() {\n        return this._counters;\n    }\n\n    toThrift() {\n        _each(this._spanRecords, (span) => {\n            span.runtime_guid = this._runtimeGUID;\n        });\n\n        let thriftCounters = [];\n        _each(this._counters, (value, key) => {\n            if (value === 0) {\n                return;\n            }\n            thriftCounters.push(new crouton_thrift.MetricsSample({\n                name         : coerce.toString(key),\n                double_value : coerce.toNumber(value),\n            }));\n        });\n\n        let thriftSpanRecords = [];\n        _each(this._spanRecords, (spanRecord) => {\n            thriftSpanRecords.push(spanRecord._toThrift());\n        });\n\n        return new crouton_thrift.ReportRequest({\n            runtime          : this._runtime.toThrift(),\n            oldest_micros    : this._oldestMicros,\n            youngest_micros  : this._youngestMicros,\n            span_records     : thriftSpanRecords,\n            internal_logs    : this._internalLogs,\n            internal_metrics : new crouton_thrift.Metrics({\n                counts : thriftCounters,\n            }),\n            timestamp_offset_micros : this._timestampOffsetMicros,\n        });\n    }\n\n    toProto(auth) {\n        let spansList = [];\n        _each(this._spanRecords, (spanRecord) => {\n            spansList.push(spanRecord._toProto());\n        });\n\n        let countsList = [];\n        _each(this._counters, (count) => {\n            let metricSample = new proto.MetricsSample();\n            metricSample.name = count.name;\n            metricSample.intValue = count.int64_value;\n            metricSample.doubleValue = count.double_value;\n            countsList.push(metricSample);\n        });\n\n        let internalMetrics = new proto.InternalMetrics();\n        internalMetrics.counts = countsList;\n\n        let reportProto = new proto.ReportRequest();\n        reportProto.auth = auth.toProto();\n        reportProto.reporter = this._runtime.toProto();\n        reportProto.spans = spansList;\n        reportProto.timestampOffsetMicros = this._timestampOffsetMicros;\n        reportProto.internalMetrics = internalMetrics;\n        return reportProto;\n    }\n}\n","import { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport _each from '../_each'; // eslint-disable-line camelcase\nimport * as coerce from './coerce.js';\nimport { lightstep } from './generated_proto';\nlet proto = lightstep.collector;\nlet converter = require('hex2dec');\nconst packageObject = require('../../package.json');\n\nexport default class RuntimeImp {\n    constructor(runtimeGUID, startMicros, componentName, attributes) {\n        this._runtimeGUID = runtimeGUID;\n        this._startMicros = startMicros;\n        this._componentName = componentName;\n        this._attributes = attributes;\n    }\n\n    toThrift() {\n        let thriftAttrs = [];\n        _each(this._attributes, (val, key) => {\n            thriftAttrs.push(new crouton_thrift.KeyValue({\n                Key   : coerce.toString(key),\n                Value : coerce.toString(val),\n            }));\n        });\n\n        // NOTE: for legacy reasons, the Thrift field is called \"group_name\"\n        // but is semantically equivalent to the \"component_name\"\n        return new crouton_thrift.Runtime({\n            guid         : this._runtimeGUID,\n            start_micros : this._startMicros,\n            group_name   : this._componentName,\n            attrs        : thriftAttrs,\n        });\n    }\n\n    toProto() {\n        let tracerVersion = new proto.KeyValue();\n        tracerVersion.key = 'lightstep.tracer_version';\n        tracerVersion.stringValue = packageObject.version;\n\n        let tracerPlatform = new proto.KeyValue();\n        tracerPlatform.key = 'lightstep.tracer_platform';\n        tracerPlatform.stringValue = 'browser';\n\n        let componentName = new proto.KeyValue();\n        componentName.key = 'lightstep.component_name';\n        componentName.stringValue = this._componentName;\n\n        let reporterId = parseInt(converter.hexToDec(this._runtimeGUID), 10);\n\n        let reporterProto = new proto.Reporter();\n        reporterProto.reporterId = reporterId;\n        reporterProto.tags = [tracerVersion, tracerPlatform, componentName];\n        return reporterProto;\n    }\n}\n","import _each from '../_each';\n\nexport default class SpanContextImp {\n\n    // ---------------------------------------------------------------------- //\n    // OpenTracing Implementation\n    // ---------------------------------------------------------------------- //\n\n    setBaggageItem(key, value) {\n        this._baggage[key] = value;\n    }\n\n    getBaggageItem(key) {\n        return this._baggage[key];\n    }\n\n    // ---------------------------------------------------------------------- //\n    // LightStep Extensions\n    // ---------------------------------------------------------------------- //\n\n    // This is part of the formal OT API in Go; and will likely be supported\n    // across platforms.\n    //\n    // https://github.com/opentracing/opentracing.github.io/issues/103\n    forEachBaggageItem(f) {\n        _each(this._baggage, (val, key) => {\n            f(key, val);\n        });\n    }\n\n    // ---------------------------------------------------------------------- //\n    // Private methods\n    // ---------------------------------------------------------------------- //\n\n    constructor(spanGUID, traceGUID) {\n        this._baggage = {};\n        this._guid        = spanGUID;\n        this._traceGUID   = traceGUID;\n    }\n}\n","import * as coerce from './coerce.js';\nimport * as constants from '../constants';\nimport _each from '../_each';\nimport * as opentracing from 'opentracing';\nimport { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport LogRecordImp from './log_record_imp'; // eslint-disable-line camelcase\nimport { lightstep, google } from './generated_proto';\nlet converter = require('hex2dec');\nlet proto = lightstep.collector;\nlet googleProtobufTimestampPB = google.proto;\n\nexport default class SpanImp extends opentracing.Span {\n\n    // ---------------------------------------------------------------------- //\n    // opentracing.Span SPI\n    // ---------------------------------------------------------------------- //\n\n    _tracer() {\n        return this._tracerImp;\n    }\n\n    _context() {\n        return this._ctx;\n    }\n\n    _setOperationName(name) {\n        this._operationName = `${name}`;\n    }\n\n    _addTags(keyValuePairs) {\n        let self = this;\n        _each(keyValuePairs, (value, key) => {\n            self._tags[key] = value;\n        });\n    }\n\n    _log(keyValuePairs, timestamp) {\n        let self = this;\n        const argumentType = typeof keyValuePairs;\n        if (argumentType !== 'object') {\n            self._tracerImp._error('Span.log() expects an object as its first argument');\n            return;\n        }\n\n        let tsMicros = timestamp ?\n            (timestamp * 1000) :\n            self._tracerImp._platform.nowMicros();\n\n        let record = new LogRecordImp(\n            self._tracerImp.getLogFieldKeyHardLimit(),\n            self._tracerImp.getLogFieldValueHardLimit(),\n            tsMicros,\n            keyValuePairs);\n        self._log_records = self._log_records || [];\n        self._log_records.push(record);\n        self._tracerImp.emit('log_added', record);\n    }\n\n    _finish(finishTime) {\n        return this.end(finishTime);\n    }\n\n    // ---------------------------------------------------------------------- //\n    // Private methods\n    // ---------------------------------------------------------------------- //\n\n    constructor(tracer, name, spanContext) {\n        super();\n\n        console.assert(typeof tracer === 'object', 'Invalid runtime');  // eslint-disable-line no-console\n\n        this._tracerImp = tracer;\n        this._ctx = spanContext;\n        this._ended  = false;\n\n        this._operationName = name;\n        this._tags          = {};\n        this._beginMicros   = tracer._platform.nowMicros();\n        this._endMicros     = 0;\n        this._errorFlag     = false;\n        this._log_records   = null;\n    }\n\n    // ---------------------------------------------------------------------- //\n    // LightStep Extensions\n    // ---------------------------------------------------------------------- //\n\n    getOperationName() {\n        return this._operationName;\n    }\n\n    // Getter only. The GUID is immutable once set internally.\n    guid() {\n        return this._ctx._guid;\n    }\n\n    traceGUID() {\n        return this._ctx._traceGUID;\n    }\n\n    parentGUID() {\n        return this._tags.parent_span_guid;\n    }\n\n    setParentGUID(guid) {\n        this._tags.parent_span_guid = coerce.toString(guid);\n        return this;\n    }\n\n    beginMicros() {\n        return this._beginMicros;\n    }\n\n    setBeginMicros(micros) {\n        this._beginMicros = micros;\n        return this;\n    }\n\n    endMicros() {\n        return this._endMicros;\n    }\n\n    setEndMicros(micros) {\n        this._endMicros = micros;\n        return this;\n    }\n\n    /**\n     * Returns a URL to the trace containing this span.\n     *\n     * Unlike most methods, it *is* safe to call this method after `finish()`.\n     *\n     * @return {string} the absolute URL for the span\n     */\n    generateTraceURL() {\n        let micros;\n        if (this._beginMicros > 0 && this._endMicros > 0) {\n            micros = Math.floor((this._beginMicros + this._endMicros) / 2);\n        } else {\n            micros = this._tracerImp._platform.nowMicros();\n        }\n\n        let urlPrefix = constants.LIGHTSTEP_APP_URL_PREFIX;\n        let accessToken = encodeURIComponent(this._tracerImp.options().access_token);\n        let guid = encodeURIComponent(this.guid());\n        return `${urlPrefix}/${accessToken}/trace?span_guid=${guid}&at_micros=${micros}`;\n    }\n\n    getTags() {\n        return this._tags;\n    }\n\n    /**\n     * Finishes the span.\n     *\n     * @param  {Number} finishTime\n     *         \tOptional Unix timestamp in milliseconds setting an explicit\n     *         \tfinish time for the span.\n     */\n    end(finishTime) {\n        // Ensure a single span is not recorded multiple times\n        if (this._ended) {\n            return;\n        }\n        this._ended = true;\n\n        if (finishTime !== undefined) {\n            this._endMicros = finishTime * 1000;\n        }\n\n        // Do not set endMicros if it has already been set. This accounts for\n        // the case of a span that has had it's times set manually (i.e. allows\n        // for retroactively created spans that might not be possible to create\n        // in real-time).\n        if (this._endMicros === 0) {\n            this._endMicros = this._tracerImp._platform.nowMicros();\n        }\n        this._tracerImp._addSpanRecord(this);\n    }\n\n    _toThrift() {\n        let attributes = [];\n        _each(this._tags, (value, key) => {\n            attributes.push(new crouton_thrift.KeyValue({\n                Key   : coerce.toString(key),\n                Value : coerce.toString(value),\n            }));\n        });\n\n        let logs = [];\n        _each(this._log_records, (logRecord) => {\n            let logThrift = logRecord.toThrift();\n            this._tracerImp._counters['logs.keys.over_limit'] += logRecord.getNumKeysOverLimit();\n            this._tracerImp._counters['logs.values.over_limit'] += logRecord.getNumValuesOverLimit();\n            logs.push(logThrift);\n        });\n\n        return new crouton_thrift.SpanRecord({\n            span_guid       : this.guid(),\n            trace_guid      : this.traceGUID(),\n            runtime_guid    : this._tracerImp.guid(),\n            span_name       : this._operationName,\n            oldest_micros   : this._beginMicros,\n            youngest_micros : this._endMicros,\n            attributes      : attributes,\n            error_flag      : this._errorFlag,\n            log_records     : logs,\n        });\n    }\n\n    _toProto() {\n        let spanContextProto = new proto.SpanContext();\n\n        spanContextProto.traceId = converter.hexToDec(this.traceGUID());\n        spanContextProto.spanId = converter.hexToDec(this.guid());\n\n        let spanProto = new proto.Span();\n        spanProto.spanContext = spanContextProto;\n        spanProto.operationName = this._operationName;\n\n        let startTimestamp = new googleProtobufTimestampPB.Timestamp();\n        let startMillis = Math.floor(this._beginMicros / 1000);\n        let startSeconds = Math.floor(startMillis / 1000);\n        let startNanos = (startMillis % 1000) * 1000000;\n        startTimestamp.seconds = startSeconds;\n        startTimestamp.nanos = startNanos;\n        spanProto.startTimestamp = startTimestamp;\n        spanProto.durationMicros = this._endMicros - this._beginMicros;\n\n        let logs = [];\n        _each(this._log_records, (logRecord) => {\n            let logProto = logRecord.toProto();\n            this._tracerImp._counters['logs.keys.over_limit'] += logRecord.getNumKeysOverLimit();\n            this._tracerImp._counters['logs.values.over_limit'] += logRecord.getNumValuesOverLimit();\n            logs.push(logProto);\n        });\n        spanProto.logs = logs;\n\n        let parentSpanGUID = undefined;\n        let tags = [];\n        _each(this._tags, (value, key) => {\n            let strValue = coerce.toString(value);\n            let strKey = coerce.toString(key);\n            let tag = new proto.KeyValue();\n            if (strKey === 'parent_span_guid') {\n                parentSpanGUID = strValue;\n            }\n            tag.key = strKey;\n            tag.stringValue = strValue;\n            tags.push(tag);\n        });\n        spanProto.tags = tags;\n\n        if (parentSpanGUID !== undefined) {\n            let ref = new proto.Reference();\n            ref.relationship = proto.Reference.Relationship.CHILD_OF;\n            let parentSpanContext = new proto.SpanContext();\n            parentSpanContext.spanId = converter.hexToDec(parentSpanGUID);\n            ref.spanContext = parentSpanContext;\n            spanProto.references = [ref];\n        }\n\n        return spanProto;\n    }\n}\n","//============================================================================//\n// Imports\n//============================================================================//\n\nimport EventEmitter from 'eventemitter3';\nimport * as opentracing from 'opentracing';\n\nimport SpanContextImp from './span_context_imp';\nimport SpanImp from './span_imp';\nimport _each from '../_each';\nimport { Platform, ProtoTransport, ThriftTransport } from '../platform_abstraction_layer';\nimport AuthImp from './auth_imp';\nimport RuntimeImp from './runtime_imp';\nimport ReportImp from './report_imp';\n\nconst ClockState    = require('./util/clock_state');\nconst LogBuilder    = require('./log_builder');\nconst coerce        = require('./coerce');\nconst constants     = require('../constants');\nconst globals       = require('./globals');\nconst packageObject = require('../../package.json');\nconst util          = require('./util/util');\n\nconst CARRIER_TRACER_STATE_PREFIX = 'ot-tracer-';\nconst CARRIER_BAGGAGE_PREFIX = 'ot-baggage-';\n\nconst DEFAULT_COLLECTOR_HOSTNAME   = 'collector.lightstep.com';\nconst DEFAULT_COLLECTOR_PORT_TLS   = 443;\nconst DEFAULT_COLLECTOR_PORT_PLAIN = 80;\nconst DEFAULT_COLLECTOR_PATH       = '';\n\n// Internal errors should be rare. Set a low limit to ensure a cascading failure\n// does not compound an existing problem by trying to send a great deal of\n// internal error data.\nconst MAX_INTERNAL_LOGS = 20;\n\nlet _singleton = null;\n\nexport default class Tracer extends opentracing.Tracer {\n\n    constructor(opts) {\n        super();\n\n        this._delegateEventEmitterMethods();\n\n        opts = opts || {};\n\n        if (!_singleton) {\n            globals.setOptions(opts);\n            _singleton = this;\n        }\n\n        // Platform abstraction layer\n        this._platform = new Platform(this);\n        this._runtimeGUID = opts.guid || this.override_runtime_guid || null;  // Set once the group name is set\n        this._plugins = {};\n        this._options = {};\n        this._optionDescs = [];\n        this._makeOptionsTable();\n\n        this._opentracing = opentracing;\n        if (opts.opentracing_module) {\n            this._opentracing = opts.opentracing_module;\n        }\n\n        let now = this._platform.nowMicros();\n\n        // The thrift authentication and runtime struct are created as soon as\n        // the necessary initialization options are available.\n        this._startMicros = now;\n        this._auth = null;\n        this._runtime = null;\n\n        let logger = {\n            warn  : (msg, payload) => { this._warn(msg, payload); },\n            error : (err, payload) => { this._error(err, payload); },\n        };\n\n        if (opts) {\n            this._transport = opts.override_transport;\n        }\n\n        if (!this._transport) {\n            if (opts.transport && opts.transport === 'proto') {\n                this._transport = new ProtoTransport(logger);\n            } else {\n                this._transport = new ThriftTransport(logger);\n            }\n        }\n\n        this._reportingLoopActive = false;\n        this._reportYoungestMicros = now;\n        this._reportTimer = null;\n        this._reportErrorStreak = 0;    // Number of consecutive errors\n        this._lastVisibleErrorMillis = 0;\n        this._skippedVisibleErrors = 0;\n\n        // Set addActiveRootSpan() for detail\n        this._activeRootSpanSet = {};\n        this._activeRootSpan = null;\n\n        // Span reporting buffer and per-report data\n        // These data are reset on every successful report.\n        this._spanRecords = [];\n\n        // The counter names need to match those accepted by the collector.\n        // These are internal counters only.\n        this._counters = {\n            'internal.errors'        : 0,\n            'internal.warnings'      : 0,\n            'spans.dropped'          : 0,\n            'logs.dropped'           : 0,\n            'logs.keys.over_limit'   : 0,\n            'logs.values.over_limit' : 0,\n            'reports.errors.send'    : 0,\n        };\n\n        // For internal (not client) logs reported to the collector\n        this._internalLogs = [];\n\n        // Current runtime state / status\n        this._flushIsActive = false;\n\n        // Built-in plugins\n        this.addPlugin(require('../plugins/log_to_console'));\n\n        // Initialize the platform options after the built-in plugins in\n        // case any of those options affect the built-ins.\n        this.addPlatformPlugins(opts);\n        this.setPlatformOptions(opts);\n\n        // Set constructor arguments\n        if (opts) {\n            this.options(opts);\n        }\n\n        // For clock skew adjustment.\n        // Must be set after options have been set.\n        this._useClockState = !this._options.disable_clock_skew_correction;\n        this._clockState = new ClockState({\n            nowMicros     : () => this._platform.nowMicros(),\n            localStoreGet : () => {\n                let key = `clock_state/${this._options.collector_host}`;\n                return this._platform.localStoreGet(key);\n            },\n            localStoreSet : (value) => {\n                let key = `clock_state/${this._options.collector_host}`;\n                return this._platform.localStoreSet(key, value);\n            },\n        });\n\n        // This relies on the options being set: call this last.\n        this._setupReportOnExit();\n\n        this._info(`Tracer created with guid ${this._runtimeGUID}`);\n\n        this.startPlugins();\n    }\n\n    // Morally speaking, Tracer also inherits from EventEmmiter, but we must\n    // fake it via composition.\n    //\n    // If not obvious on inspection: a hack.\n    _delegateEventEmitterMethods() {\n        let self = this;\n        this._ee = new EventEmitter();\n        // The list of methods at https://nodejs.org/api/events.html\n        _each([\n            'addListener',\n            'emit',\n            'eventNames',\n            'getMaxListeners',\n            'listenerCount',\n            'listeners',\n            'on',\n            'once',\n            'prependListener',\n            'prependOnceListener',\n            'removeAllListeners',\n            'removeListener',\n            'setMaxListeners',\n        ], (methodName) => {\n            self[methodName] = function () {\n                if (self._ee[methodName]) {\n                    self._ee[methodName].apply(self._ee, arguments);\n                }\n            };\n        });\n    }\n\n    _makeOptionsTable() {\n        /* eslint-disable key-spacing, no-multi-spaces */\n\n        // NOTE: make 'verbosity' the first option so it is processed first on\n        // options changes and takes effect as soon as possible.\n        this.addOption('verbosity',             { type : 'int', min: 0, max: 9, defaultValue: 1 });\n\n        // Core options\n        this.addOption('access_token',          { type: 'string',  defaultValue: '' });\n        this.addOption('component_name',        { type: 'string',  defaultValue: '' });\n        this.addOption('collector_host',        { type: 'string',  defaultValue: DEFAULT_COLLECTOR_HOSTNAME });\n        this.addOption('collector_port',        { type: 'int',     defaultValue: DEFAULT_COLLECTOR_PORT_TLS });\n        this.addOption('collector_path',        { type: 'string',  defaultValue: DEFAULT_COLLECTOR_PATH });\n        this.addOption('collector_encryption',  { type: 'string',  defaultValue: 'tls' });\n        this.addOption('tags',                  { type: 'any',     defaultValue: {} });\n        this.addOption('max_reporting_interval_millis',  { type: 'int',     defaultValue: 2500 });\n        this.addOption('disable_clock_skew_correction', { type: 'bool', defaultValue: false });\n\n        // Non-standard, may be deprecated\n        this.addOption('disabled',              { type: 'bool',    defaultValue: false });\n        this.addOption('max_span_records',      { type: 'int',     defaultValue: 4096 });\n        this.addOption('default_span_tags',     { type: 'any',     defaultValue: {} });\n        this.addOption('report_timeout_millis', { type: 'int',     defaultValue: 30000 });\n        this.addOption('gzip_json_requests',    { type: 'bool',    defaultValue: true });\n        this.addOption('disable_reporting_loop', { type: 'bool',    defaultValue: false });\n        this.addOption('disable_report_on_exit', { type: 'bool',    defaultValue: false });\n        this.addOption('delay_initial_report_millis', { type: 'int', defaultValue: 1000 });\n        this.addOption('error_throttle_millis', { type: 'int',     defaultValue: 60000 });\n\n        // Debugging options\n        //\n        // These are not part of the supported public API.\n        //\n        // If false, SSL certificate verification is skipped. Useful for testing.\n        this.addOption('certificate_verification',      { type: 'bool',    defaultValue: true });\n        // I.e. report only on explicit calls to flush()\n\n        // Unit testing options\n        this.addOption('override_transport',            { type : 'any',    defaultValue: null });\n        this.addOption('silent',                        { type : 'bool',   defaultValue: false });\n\n        // Hard upper limits to protect against worst-case scenarios for log field sizes.\n        this.addOption('log_field_key_hard_limit',   { type: 'int',     defaultValue: 256 });\n        this.addOption('log_field_value_hard_limit', { type: 'int',     defaultValue: 1024 });\n\n        /* eslint-disable key-spacing, no-multi-spaces */\n    }\n\n    // ---------------------------------------------------------------------- //\n    // opentracing.Tracer SPI\n    // ---------------------------------------------------------------------- //\n\n    _startSpan(name, fields) {\n        // First, assemble the SpanContextImp for our SpanImp.\n        let parentCtxImp = null;\n        fields = fields || {};\n        if (fields.references) {\n            for (let i = 0; i < fields.references.length; i++) {\n                let ref = fields.references[i];\n                let type = ref.type();\n                if (type === this._opentracing.REFERENCE_CHILD_OF ||\n                    type === this._opentracing.REFERENCE_FOLLOWS_FROM) {\n                    let context = ref.referencedContext();\n                    if (!context) {\n                        this._error('Span reference has an invalid context', context);\n                        continue;\n                    }\n                    parentCtxImp = context;\n                    break;\n                }\n            }\n        }\n\n        let traceGUID = parentCtxImp ? parentCtxImp._traceGUID : this.generateTraceGUIDForRootSpan();\n        let spanImp = new SpanImp(this, name, new SpanContextImp(this._platform.generateUUID(), traceGUID));\n        spanImp.addTags(this._options.default_span_tags);\n\n        _each(fields, (value, key) => {\n            switch (key) {\n            case 'references':\n                // Ignore: handled before constructing the span\n                break;\n            case 'startTime':\n                // startTime is in milliseconds\n                spanImp.setBeginMicros(value * 1000);\n                break;\n            case 'tags':\n                spanImp.addTags(value);\n                break;\n            default:\n                this._warn(`Ignoring unknown field '${key}'`);\n                break;\n            }\n        });\n\n        if (parentCtxImp !== null) {\n            spanImp.setParentGUID(parentCtxImp._guid);\n        }\n\n        this.emit('start_span', spanImp);\n        return spanImp;\n    }\n\n    _inject(spanContext, format, carrier) {\n        switch (format) {\n        case this._opentracing.FORMAT_HTTP_HEADERS:\n        case this._opentracing.FORMAT_TEXT_MAP:\n            this._injectToTextMap(spanContext, carrier);\n            break;\n\n        case this._opentracing.FORMAT_BINARY:\n            this._error(`Unsupported format: ${format}`);\n            break;\n\n        default:\n            this._error(`Unknown format: ${format}`);\n            break;\n        }\n    }\n\n    _injectToTextMap(spanContext, carrier) {\n        if (!carrier) {\n            this._error('Unexpected null FORMAT_TEXT_MAP carrier in call to inject');\n            return;\n        }\n        if (typeof carrier !== 'object') {\n            this._error(`Unexpected '${typeof carrier}' FORMAT_TEXT_MAP carrier in call to inject`);\n            return;\n        }\n\n        carrier[`${CARRIER_TRACER_STATE_PREFIX}spanid`] = spanContext._guid;\n        carrier[`${CARRIER_TRACER_STATE_PREFIX}traceid`] = spanContext._traceGUID;\n        spanContext.forEachBaggageItem((key, value) => {\n            carrier[`${CARRIER_BAGGAGE_PREFIX}${key}`] = value;\n        });\n        carrier[`${CARRIER_TRACER_STATE_PREFIX}sampled`] = 'true';\n        return carrier;\n    }\n\n    _extract(format, carrier) {\n        switch (format) {\n        case this._opentracing.FORMAT_HTTP_HEADERS:\n        case this._opentracing.FORMAT_TEXT_MAP:\n            return this._extractTextMap(format, carrier);\n\n        case this._opentracing.FORMAT_BINARY:\n            this._error(`Unsupported format: ${format}`);\n            return null;\n\n        default:\n            this._error(`Unsupported format: ${format}`);\n            return null;\n        }\n    }\n\n    _extractTextMap(format, carrier) {\n        // Begin with the empty SpanContextImp\n        let spanContext = new SpanContextImp(null, null);\n\n        // Iterate over the contents of the carrier and set the properties\n        // accordingly.\n        let foundFields = 0;\n        _each(carrier, (value, key) => {\n            key = key.toLowerCase();\n            if (key.substr(0, CARRIER_TRACER_STATE_PREFIX.length) !== CARRIER_TRACER_STATE_PREFIX) {\n                return;\n            }\n            let suffix = key.substr(CARRIER_TRACER_STATE_PREFIX.length);\n\n            switch (suffix) {\n            case 'traceid':\n                foundFields++;\n                spanContext._traceGUID = value;\n                break;\n            case 'spanid':\n                foundFields++;\n                spanContext._guid = value;\n                break;\n            case 'sampled':\n                // Ignored. The carrier may be coming from a different client\n                // library that sends this (even though it's not used).\n                break;\n            default:\n                this._error(`Unrecognized carrier key '${key}' with recognized prefix. Ignoring.`);\n                break;\n            }\n        });\n\n        if (foundFields === 0) {\n            // This is not an error per se, there was simply no SpanContext\n            // in the carrier.\n            return null;\n        }\n        if (foundFields < 2) {\n            // A partial SpanContext suggests some sort of data corruption.\n            this._error(`Only found a partial SpanContext: ${format}, ${carrier}`);\n            return null;\n        }\n\n        _each(carrier, (value, key) => {\n            key = key.toLowerCase();\n            if (key.substr(0, CARRIER_BAGGAGE_PREFIX.length) !== CARRIER_BAGGAGE_PREFIX) {\n                return;\n            }\n            let suffix = key.substr(CARRIER_BAGGAGE_PREFIX.length);\n            spanContext.setBaggageItem(suffix, value);\n        });\n        return spanContext;\n    }\n\n\n    // ---------------------------------------------------------------------- //\n    // LightStep extensions\n    // ---------------------------------------------------------------------- //\n\n    /**\n     * Manually sends a report of all buffered data.\n     *\n     * @param  {Function} done - callback function invoked when the report\n     *         either succeeds or fails.\n     */\n    flush(done) {\n        if (!done) {\n            done = function () {};\n        }\n        if (this._options.disabled) {\n            this._warn('Manual flush() called in disabled state.');\n            return done(null);\n        }\n        this._flushReport(true, false, done);\n    }\n\n    //-----------------------------------------------------------------------//\n    // Options\n    //-----------------------------------------------------------------------//\n\n    guid() {\n        return this._runtimeGUID;\n    }\n\n    verbosity() {\n        // The 'undefined' handling below is for logs that may occur before the\n        // options are initialized.\n        let v = this._options.verbosity;\n        return (v === undefined) ? 1 : v;\n    }\n\n    // Call to generate a new Trace GUID\n    generateTraceGUIDForRootSpan() {\n        let guid = this._platform.generateUUID();\n        if (this._activeRootSpan) {\n            guid = this._activeRootSpan.traceGUID();\n        }\n        return guid;\n    }\n\n    setPlatformOptions(userOptions) {\n        let opts = this._platform.options(this) || {};\n        _each(userOptions, (val, key) => {\n            opts[key] = val;\n        });\n        this.options(opts);\n    }\n\n    // Register a new option.  Used by plug-ins.\n    addOption(name, desc) {\n        desc.name = name;\n        this._optionDescs.push(desc);\n        this._options[desc.name] = desc.defaultValue;\n    }\n\n    options(opts) {\n        if (arguments.length === 0) {\n            console.assert(typeof this._options === 'object',   // eslint-disable-line\n                'Internal error: _options field incorrect');\n            return this._options;\n        }\n        if (typeof opts !== 'object') {\n            throw new Error(`options() must be called with an object: type was ${typeof opts}`);\n        }\n\n        // \"collector_port\" 0 acts as an alias for \"use the default\".\n        if (opts.collector_port === 0) {\n            delete opts.collector_port;\n        }\n\n        // \"collector_encryption\" acts an alias for the common cases of 'collector_port'\n        if (opts.collector_encryption !== undefined && opts.collector_port === undefined) {\n            opts.collector_port = opts.collector_encryption !== 'none' ?\n                DEFAULT_COLLECTOR_PORT_TLS :\n                DEFAULT_COLLECTOR_PORT_PLAIN;\n        }\n\n        // Track what options have been modified\n        let modified = {};\n        let unchanged = {};\n        _each(this._optionDescs, (desc) => {\n            this._setOptionInternal(modified, unchanged, opts, desc);\n        });\n\n        // Check for any invalid options: is there a key in the specified operation\n        // that didn't result either in a change or a reset to the existing value?\n        for (let key in opts) {\n            if (modified[key] === undefined && unchanged[key] === undefined) {\n                this._warn(`Invalid option ${key} with value ${opts[key]}`);\n            }\n        }\n\n        //\n        // Update the state information based on the changes\n        //\n        this._initReportingDataIfNeeded(modified);\n\n        if (!this._reportingLoopActive) {\n            this._startReportingLoop();\n        }\n\n        if (this.verbosity() >= 3) {\n            let optionsString = '';\n            let count = 0;\n            _each(modified, (val, key) => {\n                optionsString += `\\t${JSON.stringify(key)}: ${JSON.stringify(val.newValue)}\\n`;\n                count++;\n            });\n            if (count > 0) {\n                this._debug(`Options modified:\\n${optionsString}`);\n            }\n        }\n        this.emit('options', modified, this._options, this);\n    }\n\n    _setOptionInternal(modified, unchanged, opts, desc) {\n        let name = desc.name;\n        let value = opts[name];\n        let valueType = typeof value;\n        if (value === undefined) {\n            return;\n        }\n\n        // Parse the option (and check constraints)\n        switch (desc.type) {\n\n        case 'any':\n            break;\n\n        case 'bool':\n            if (value !== true && value !== false) {\n                this._error(`Invalid boolean option '${name}' '${value}'`);\n                return;\n            }\n            break;\n\n        case 'int':\n            if (valueType !== 'number' || Math.floor(value) !== value) {\n                this._error(`Invalid int option '${name}' '${value}'`);\n                return;\n            }\n            if (desc.min !== undefined && desc.max !== undefined) {\n                if (!(value >= desc.min && value <= desc.max)) {\n                    this._error(`Option '${name}' out of range '${value}' is not between ${desc.min} and ${desc.max}`);  // eslint-disable-line max-len\n                    return;\n                }\n            }\n            break;\n\n        case 'string':\n            switch (valueType) {\n            case 'string':\n                break;\n            case 'number':\n                value = coerce.toString(value);\n                break;\n            default:\n                this._error(`Invalid string option ${name} ${value}`);\n                return;\n            }\n            break;\n\n        case 'array':\n            // Per http://stackoverflow.com/questions/4775722/check-if-object-is-array\n            if (Object.prototype.toString.call(value) !== '[object Array]') {\n                this._error(`Invalid type for array option ${name}: found '${valueType}'`);\n                return;\n            }\n            break;\n\n        default:\n            this._error(`Unknown option type '${desc.type}'`);\n            return;\n        }\n\n        // Set the new value, recording any modifications\n        let oldValue = this._options[name];\n        if (oldValue === undefined) {\n            throw new Error(`Attempt to set unknown option ${name}`);\n        }\n\n        // Ignore no-op changes for types that can be checked quickly\n        if (valueType !== 'object' && oldValue === value) {\n            unchanged[name] = true;\n            return;\n        }\n\n        modified[name] = {\n            oldValue : oldValue,\n            newValue : value,\n        };\n        this._options[name] = value;\n    }\n\n    // The authorization and runtime information is initialized as soon\n    // as it is available.  This allows logs and spans to be buffered before\n    // the library is initialized, which can be helpul in a complex setup with\n    // many subsystems.\n    //\n    _initReportingDataIfNeeded(modified) {\n        // Ignore redundant initialization; complaint on inconsistencies\n        if (this._auth !== null) {\n            if (!this._runtime) {\n                return this._error('Inconsistent state: auth initialized without runtime.');\n            }\n            if (modified.access_token) {\n                throw new Error('Cannot change access_token after it has been set.');\n            }\n            if (modified.component_name) {\n                throw new Error('Cannot change component_name after it has been set.');\n            }\n            if (modified.collector_host) {\n                throw new Error('Cannot change collector_host after the connection is established');\n            }\n            if (modified.collector_port) {\n                throw new Error('Cannot change collector_port after the connection is established');\n            }\n            if (modified.collector_path) {\n                throw new Error('Cannot change collector_path after the connection is established');\n            }\n            if (modified.collector_encryption) {\n                throw new Error('Cannot change collector_encryption after the connection is established');\n            }\n            return;\n        }\n\n        // See if the Thrift data can be initialized\n        if (this._options.access_token.length > 0 && this._options.component_name.length > 0) {\n            this._runtimeGUID = this._platform.runtimeGUID(this._options.component_name);\n\n            this._auth = new AuthImp(this._options.access_token);\n\n            //\n            // Assemble the tracer tags from the user-specified and automatic,\n            // internal tags.\n            //\n            let tags = {};\n            _each(this._options.tags, (value, key) => {\n                if (typeof value !== 'string') {\n                    this._error(`Tracer tag value is not a string: key=${key}`);\n                    return;\n                }\n                tags[key] = value;\n            });\n            tags['lightstep.tracer_version'] = packageObject.version;\n            let platformTags = this._platform.tracerTags();\n            _each(platformTags, (val, key) => {\n                tags[key] = val;\n            });\n\n            this._runtime = new RuntimeImp(this._runtimeGUID, this._startMicros, this._options.component_name, tags);\n\n            this._info('Initializing thrift reporting data', {\n                component_name : this._options.component_name,\n                access_token   : this._auth.getAccessToken(),\n            });\n            this.emit('reporting_initialized');\n        }\n    }\n\n    getLogFieldKeyHardLimit() {\n        return this._options.log_field_key_hard_limit;\n    }\n\n    getLogFieldValueHardLimit() {\n        return this._options.log_field_value_hard_limit;\n    }\n\n    //-----------------------------------------------------------------------//\n    // Plugins\n    //-----------------------------------------------------------------------//\n\n    addPlatformPlugins(opts) {\n        let pluginSet = this._platform.plugins(opts);\n        _each(pluginSet, (val) => {\n            this.addPlugin(val);\n        });\n    }\n\n    addPlugin(plugin) {\n        // Don't add plug-ins twice\n        let name = plugin.name();\n        if (this._plugins[name]) {\n            return;\n        }\n\n        this._plugins[name] = plugin;\n        plugin.addOptions(this);\n    }\n\n    startPlugins() {\n        _each(this._plugins, (val, key) => {\n            this._plugins[key].start(this);\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Spans\n    //-----------------------------------------------------------------------//\n\n    // This is a LightStep-specific feature that should be used sparingly. It\n    // sets a \"global\" root span such that spans that would *otherwise* be root\n    // span instead inherit the trace GUID of the active root span. This is\n    // best clarified by example:\n    //\n    // On document load in the browser, an \"active root span\" is created for\n    // the page load process. Any spans started without an explicit parent\n    // will the document load trace GUID instead of starting a trace GUID.\n    // This implicit root remains active only until the page is done loading.\n    //\n    // Any span adding itself as a root span *must* remove itself along with\n    // calling finish(). This will *not* be done automatically.\n    //\n    // NOTE: currently, only the trace GUID is transferred; it may or may not\n    // make sure to make this a proper parent.\n    //\n    // NOTE: the root span tracking is handled as a set rather than a single\n    // global to avoid conflicts between libraries.\n    addActiveRootSpan(span) {\n        this._activeRootSpanSet[span._guid] = span;\n        this._setActiveRootSpanToYoungest();\n    }\n\n    removeActiveRootSpan(span) {\n        delete this._activeRootSpanSet[span._guid];\n        this._setActiveRootSpanToYoungest();\n    }\n\n    _setActiveRootSpanToYoungest() {\n        // Set the _activeRootSpan to the youngest of the roots in case of\n        // multiple.\n        this._activeRootSpan = null;\n        _each(this._activeRootSpanSet, (span) => {\n            if (!this._activeRootSpan ||\n                span._beginMicros > this._activeRootSpan._beginMicros) {\n                this._activeRootSpan = span;\n            }\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Encoding / decoding\n    //-----------------------------------------------------------------------//\n\n    _objectToUint8Array(obj) {\n        let jsonString;\n        try {\n            // encodeURIComponent() is a *very* inefficient, but simple and\n            // well-supported way to avoid having to think about Unicode in\n            // in the conversion to a UInt8Array.\n            //\n            // Writing multiple bytes for String.charCodeAt and\n            // String.codePointAt would be an alternate approach; again,\n            // simplicitly is being preferred over efficiency for the moment.\n            jsonString = encodeURIComponent(JSON.stringify(obj));\n        } catch (e) {\n            this._error('Could not binary encode carrier data.');\n            return null;\n        }\n\n        let buffer = new ArrayBuffer(jsonString.length);\n        let view = new Uint8Array(buffer);\n        for (let i = 0; i < jsonString.length; i++) {\n            let code = jsonString.charCodeAt(i);\n            if (!(code >= 0 && code <= 255)) {\n                this._error('Unexpected character code');\n                return null;\n            }\n            view[i] = code;\n        }\n        return view;\n    }\n\n    _uint8ArrayToObject(arr) {\n        if (!arr) {\n            this._error('Array is null');\n            return null;\n        }\n\n        let jsonString = '';\n        for (let i = 0; i < arr.length; i++) {\n            jsonString += String.fromCharCode(arr[i]);\n        }\n        try {\n            return JSON.parse(decodeURIComponent(jsonString));\n        } catch (e) {\n            this._error('Could not decode binary data.');\n            return null;\n        }\n    }\n\n    //-----------------------------------------------------------------------//\n    // Logging\n    //-----------------------------------------------------------------------//\n\n    log() {\n        let b = new LogBuilder(this);\n        return b;\n    }\n\n    //-----------------------------------------------------------------------//\n    // Buffers\n    //-----------------------------------------------------------------------//\n\n    _clearBuffers() {\n        this._spanRecords = [];\n        this._internalLogs = [];\n\n        // Create a new object to avoid overwriting the values in any references\n        // to the old object\n        let counters = {};\n        _each(this._counters, (unused, key) => {\n            counters[key] = 0;\n        });\n        this._counters = counters;\n    }\n\n    _buffersAreEmpty() {\n        if (this._spanRecords.length > 0) {\n            return false;\n        }\n        if (this._internalLogs.length > 0) {\n            return false;\n        }\n\n        let countersAllZero = true;\n        _each(this._counters, (val) => {\n            if (val > 0) {\n                countersAllZero = false;\n            }\n        });\n        return countersAllZero;\n    }\n\n    _addSpanRecord(record) {\n        this._internalAddSpanRecord(record);\n        this.emit('span_added', record);\n    }\n\n    _internalAddSpanRecord(record) {\n        if (!record) {\n            this._error('Attempt to add null record to buffer');\n            return;\n        }\n\n        if (this._spanRecords.length >= this._options.max_span_records) {\n            let index = Math.floor(this._spanRecords.length * Math.random());\n            this._spanRecords[index] = record;\n            this._counters['spans.dropped']++;\n        } else {\n            this._spanRecords.push(record);\n        }\n    }\n\n    _restoreRecords(spans, internalLogs, counters) {\n        _each(spans, (span) => {\n            this._internalAddSpanRecord(span);\n        });\n\n        let currentInternalLogs = this._internalLogs;\n        this._internalLogs = [];\n        let toAdd = internalLogs.concat(currentInternalLogs);\n        _each(toAdd, (log) => {\n            this._pushInternalLog(log);\n        });\n\n        _each(counters, (value, key) => {\n            if (key in this._counters) {\n                this._counters[key] += value;\n            } else {\n                this._error(`Bad counter name: ${key}`);\n            }\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Reporting loop\n    //-----------------------------------------------------------------------//\n\n    _setupReportOnExit() {\n        if (this._options.disable_report_on_exit) {\n            this._debug('report-on-exit is disabled.');\n            return;\n        }\n\n        // Do a final explicit flush. Note that the final flush may enqueue\n        // asynchronous callbacks that cause the 'beforeExit' event to be\n        // re-emitted when those callbacks finish.\n        let finalFlushOnce = 0;\n        let finalFlush = () => {\n            if (finalFlushOnce++ > 0) { return; }\n            this._info('Final flush before exit.');\n            this._flushReport(false, true, (err) => {\n                if (err) {\n                    this._warn('Final report before exit failed', {\n                        error                  : err,\n                        unflushed_spans        : this._spanRecords.length,\n                        buffer_youngest_micros : this._reportYoungestMicros,\n                    });\n                }\n            });\n        };\n        this._platform.onBeforeExit(finalFlush);\n    }\n\n    _startReportingLoop() {\n        if (this._options.disabled) {\n            this._info('Not starting reporting loop: instrumentation is disabled.');\n            return;\n        }\n        if (this._options.disable_reporting_loop) {\n            this._info('Not starting reporting loop: reporting loop is disabled.');\n            return;\n        }\n        if (this._auth === null) {\n            // Don't start the loop until the thrift data necessary to do the\n            // report is set up.\n            return;\n        }\n        if (this._reportingLoopActive) {\n            this._info('Reporting loop already started!');\n            return;\n        }\n\n        this._info('Starting reporting loop:', this._runtime);\n        this._reportingLoopActive = true;\n\n        // Stop the reporting loop so the Node.js process does not become a\n        // zombie waiting for the timers.\n        let stopReportingOnce = 0;\n        let stopReporting = () => {\n            if (stopReportingOnce++ > 0) { return; }\n            this._stopReportingLoop();\n        };\n        this._platform.onBeforeExit(stopReporting);\n\n        // Begin the asynchronous reporting loop\n        let loop = () => {\n            this._enqueueNextReport((err) => {\n                if (this._reportingLoopActive) {\n                    loop();\n                }\n            });\n        };\n\n        const delay = Math.floor(Math.random() * this._options.delay_initial_report_millis);\n        util.detachedTimeout(() => {\n            loop();\n        }, delay);\n    }\n\n    _stopReportingLoop() {\n        this._debug('Stopping reporting loop');\n\n        this._reportingLoopActive = false;\n        clearTimeout(this._reportTimer);\n        this._reportTimer = null;\n    }\n\n    _enqueueNextReport(done) {\n        // If there's already a report request enqueued, ignore this new\n        // request.\n        if (this._reportTimer) {\n            return;\n        }\n\n        // If the clock state is still being primed, potentially use the\n        // shorted report interval.\n        //\n        // However, do not use the shorter interval in the case of an error.\n        // That does not provide sufficient backoff.\n        let reportInterval = this._options.max_reporting_interval_millis;\n        if (this._reportErrorStreak === 0 &&\n            this._useClockState &&\n            !this._clockState.isReady()) {\n            reportInterval = Math.min(constants.CLOCK_STATE_REFRESH_INTERVAL_MS, reportInterval);\n        }\n\n        // After 3 consecutive errors, expand the retry delay up to 8x the\n        // normal interval, jitter the delay by +/- 25%, and be sure to back off\n        // *at least* the standard reporting interval in the case of an error.\n        let backOff = 1 + Math.min(7, Math.max(0, this._reportErrorStreak));\n        let basis = backOff * reportInterval;\n        let jitter = 1.0 + (Math.random() * 0.5 - 0.25);\n        let delay = Math.floor(Math.max(0, jitter * basis));\n\n        this._debug(`Delaying next flush for ${delay}ms`);\n        this._reportTimer = util.detachedTimeout(() => {\n            this._reportTimer = null;\n            this._flushReport(false, false, done);\n        }, delay);\n    }\n\n    /**\n     * Internal worker for a flush of buffered data into a report.\n     *\n     * @param  {bool} manual - this is a manually invoked flush request. Don't\n     *         override this call with a clock state syncing flush, for example.\n     * @param  {bool} detached - this is an \"at exit\" flush that should not block\n     *         the calling process in any manner. This is specifically called\n     *         \"detached\" due to the browser use case where the report is done,\n     *         not just asynchronously, but as a script request that continues\n     *         to run even if the page is navigated away from mid-request.\n     * @param  {function} done - standard callback function called on success\n     *         or error.\n     */\n    _flushReport(manual, detached, done) {\n        done = done || function (err) {};\n\n        let clockReady = this._clockState.isReady();\n        let clockOffsetMicros = this._clockState.offsetMicros();\n\n        // Diagnostic information on the clock correction\n        this._debug('time correction state', {\n            offset_micros  : clockOffsetMicros,\n            active_samples : this._clockState.activeSampleCount(),\n            ready          : clockReady,\n        });\n\n        let spanRecords = this._spanRecords;\n        let counters = this._counters;\n        let internalLogs = this._internalLogs;\n\n        // If the clock is not ready, do an \"empty\" flush to build more clock\n        // samples before the real data is reported.\n        // A detached flush (i.e. one intended to fire at exit or other \"last\n        // ditch effort\" event) should always use the real data.\n        if (this._useClockState && !manual && !clockReady && !detached) {\n            this._debug('Flushing empty report to prime clock state');\n            spanRecords = [];\n            counters    = {};\n            internalLogs = [];\n        } else {\n            // Early out if we can.\n            if (this._buffersAreEmpty()) {\n                this._debug('Skipping empty report');\n                return done(null);\n            }\n\n            // Clear the object buffers as the data is now in the local\n            // variables\n            this._clearBuffers();\n            this._debug(`Flushing report (${spanRecords.length} spans)`);\n        }\n\n        this._transport.ensureConnection(this._options);\n\n        // Ensure the runtime GUID is set as it is possible buffer logs and\n        // spans before the GUID is necessarily set.\n        console.assert(this._runtimeGUID !== null, 'No runtime GUID for Tracer'); // eslint-disable-line no-console\n\n        let timestampOffset = this._useClockState ? clockOffsetMicros : 0;\n        let now = this._platform.nowMicros();\n        let report = new ReportImp(this._runtime, this._reportYoungestMicros, now,\n            spanRecords, internalLogs, counters, timestampOffset);\n\n        this.emit('prereport', report);\n        let originMicros = this._platform.nowMicros();\n\n        this._transport.report(detached, this._auth, report, (err, res) => {\n            let destinationMicros = this._platform.nowMicros();\n            let reportWindowSeconds = (now - report.oldest_micros) / 1e6;\n\n            if (err) {\n                // How many errors in a row? Influences the report backoff.\n                this._reportErrorStreak++;\n\n                // On a failed report, re-enqueue the data that was going to be\n                // sent.\n                let errString;\n                if (err.message) {\n                    errString = `${err.message}`;\n                } else {\n                    errString = `${err}`;\n                }\n                this._warn(`Error in report: ${errString}`, {\n                    last_report_seconds_ago : reportWindowSeconds,\n                });\n\n                this._restoreRecords(\n                    report.getSpanRecords(),\n                    report.getInternalLogs(),\n                    report.getCounters());\n\n                // Increment the counter *after* the counters are restored\n                this._counters['reports.errors.send']++;\n\n                this.emit('report_error', err, {\n                    error    : err,\n                    streak   : this._reportErrorStreak,\n                    detached : detached,\n                });\n            } else {\n                if (this.verbosity() >= 4) {\n                    this._debug(`Report flushed for last ${reportWindowSeconds} seconds`, {\n                        spans_reported : report.getSpanRecords().length,\n                    });\n                }\n\n                // Update internal data after the successful report\n                this._reportErrorStreak = 0;\n                this._reportYoungestMicros = now;\n\n                // Update the clock state if there's info from the report\n                if (res) {\n                    if (res.timing && res.timing.receive_micros && res.timing.transmit_micros) {\n                        this._clockState.addSample(\n                            originMicros,\n                            res.timing.receive_micros,\n                            res.timing.transmit_micros,\n                            destinationMicros);\n                    } else {\n                        // The response does not have timing information. Disable\n                        // the clock state assuming there'll never be timing data\n                        // to use.\n                        this._useClockState = false;\n                    }\n\n                    if (res.errors && res.errors.length > 0) {\n                        this._warn('Errors in report', res.errors);\n                    }\n                } else {\n                    this._useClockState = false;\n                }\n\n                this.emit('report', report, res);\n            }\n            return done(err);\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Stats and metrics\n    //-----------------------------------------------------------------------//\n\n    /**\n     * Internal API that returns some internal metrics.\n     */\n    stats() {\n        return {\n            counters : this._counters,\n        };\n    }\n\n    //-----------------------------------------------------------------------//\n    // Internal logging & errors\n    //-----------------------------------------------------------------------//\n    // The rules for how internal logs are processed:\n    //\n    // * Internal logs that are included in the Collector report:\n    //      - Always send errors logs along with the reports\n    //      - Never include any other logs\n    // * Internal logs that are echoed to the host application:\n    //      - See the README.md :)\n    //\n    _debug(msg, payload) {\n        if (this.verbosity() < 4) {\n            return;\n        }\n        this._printToConsole('log', `[LightStep:DEBUG] ${msg}`, payload);\n    }\n\n    _info(msg, payload) {\n        if (this.verbosity() < 3) {\n            return;\n        }\n        this._printToConsole('log', `[LightStep:INFO] ${msg}`, payload);\n    }\n\n    _warn(msg, payload) {\n        this._counters['internal.warnings']++;\n\n        if (this.verbosity() < 3) {\n            return;\n        }\n        this._printToConsole('warn', `[LightStep:WARN] ${msg}`, payload);\n    }\n\n    _error(msg, payload) {\n        this._counters['internal.errors']++;\n\n        // Internal errors are always reported to the collector\n        let record = this.log()\n            .level(constants.LOG_ERROR)\n            .message(msg)\n            .payload(payload)\n            .record();\n        this._pushInternalLog(record);\n\n        // Internal errors are reported to the host console conditionally based\n        // on the verbosity level.\n        let verbosity = this.verbosity();\n        if (verbosity === 0) {\n            return;\n        }\n\n        // Error messages are throttled in verbosity === 1 mode\n        const now = Date.now();\n        if (verbosity === 1) {\n            const nextVisible = this._lastVisibleErrorMillis + this._options.error_throttle_millis;\n            if (now < nextVisible) {\n                this._skippedVisibleErrors++;\n                return;\n            }\n            if (this._skippedVisibleErrors > 0) {\n                /* eslint-disable max-len */\n                const s = `${this._skippedVisibleErrors} errors masked since last logged error. Increase 'verbosity' option to see all errors.`;\n                /* eslint-enable max-len */\n                this._printToConsole('error', `[LightStep:ERROR] ${s}`, payload);\n            }\n        }\n\n        this._printToConsole('error', `[LightStep:ERROR] ${msg}`, payload);\n        this._lastVisibleErrorMillis = now;\n        this._skippedVisibleErrors = 0;\n    }\n\n    _printToConsole(type, msg, payload) {\n        // Internal option to silence intentional errors generated by the unit\n        // tests.\n        if (this._options.silent) {\n            return;\n        }\n\n        if (payload !== undefined) {\n            console[type](msg, payload); // eslint-disable-line no-console\n        }  else {\n            console[type](msg); // eslint-disable-line no-console\n        }\n    }\n\n    _pushInternalLog(record) {\n        if (!record) {\n            return;\n        }\n        if (this._internalLogs.length >= MAX_INTERNAL_LOGS) {\n            record.message = `MAX_INTERNAL_LOGS limit hit. Last error: ${record.message}`;\n            this._internalLogs[this._internalLogs.length - 1] = record;\n        } else {\n            this._internalLogs.push(record);\n        }\n    }\n}\n","import _each from '../../_each';\n\n// How many updates before a sample is considered old. This happens to\n// be one less than the number of samples in our buffer but that's\n// somewhat arbitrary.\nconst kMaxOffsetAge = 7;\n\nconst kStoredSamplesTTLMicros = 60 * 60 * 1000 * 1000; // 1 hour\n\nclass ClockState {\n\n    constructor(opts) {\n        this._nowMicros     = opts.nowMicros;\n        this._localStoreGet = opts.localStoreGet;\n        this._localStoreSet = opts.localStoreSet;\n\n        // The last eight samples, computed from timing information in\n        // RPCs.\n        this._samples = [];\n        this._currentOffsetMicros = 0;\n\n        // How many updates since we've updated currentOffsetMicros.\n        this._currentOffsetAge = kMaxOffsetAge + 1;\n\n        // Try to load samples from the local store.\n        // Only use the data if it's recent.\n        let storedData = this._localStoreGet();\n        if (storedData &&\n            storedData.timestamp_micros &&\n            storedData.timestamp_micros > this._nowMicros() - kStoredSamplesTTLMicros) {\n            // Make sure there are no more than (kMaxOffsetAge+1) elements\n            this._samples = storedData.samples.slice(-(kMaxOffsetAge + 1));\n        }\n        // Update the current offset based on these data.\n        this.update();\n    }\n\n    // Add a new timing sample and update the offset.\n    addSample(originMicros,\n              receiveMicros,\n              transmitMicros,\n              destinationMicros\n    ) {\n        let latestDelayMicros = Number.MAX_VALUE;\n        let latestOffsetMicros = 0;\n        // Ensure that all of the data are valid before using them. If\n        // not, we'll push a {0, MAX} record into the queue.\n        if (originMicros > 0 && receiveMicros > 0 &&\n            transmitMicros > 0 && destinationMicros > 0) {\n            latestDelayMicros = (destinationMicros - originMicros) -\n                (transmitMicros - receiveMicros);\n            latestOffsetMicros = ((receiveMicros - originMicros) +\n                           (transmitMicros - destinationMicros)) / 2;\n        }\n\n        // Discard the oldest sample and push the new one.\n        if (this._samples.length === kMaxOffsetAge + 1) {\n            this._samples.shift();\n        }\n        this._samples.push({\n            delayMicros  : latestDelayMicros,\n            offsetMicros : latestOffsetMicros,\n        });\n        this._currentOffsetAge++;\n\n        // Update the local store with this new sample.\n        this._localStoreSet({\n            timestamp_micros : this._nowMicros(),\n            samples          : this._samples,\n        });\n        this.update();\n    }\n\n    // Update the time offset based on the current samples.\n    update() {\n        // This is simplified version of the clock filtering in Simple\n        // NTP. It ignores precision and dispersion (frequency error). In\n        // brief, it keeps the 8 (kMaxOffsetAge+1) most recent\n        // delay-offset pairs, and considers the offset with the smallest\n        // delay to be the best one. However, it only uses this new offset\n        // if the change (relative to the last offset) is small compared\n        // to the estimated error.\n        //\n        // See:\n        // https://tools.ietf.org/html/rfc5905#appendix-A.5.2\n        // http://books.google.com/books?id=pdTcJBfnbq8C\n        //   esp. section 3.5\n        // http://www.eecis.udel.edu/~mills/ntp/html/filter.html\n        // http://www.eecis.udel.edu/~mills/database/brief/algor/algor.pdf\n        // http://www.eecis.udel.edu/~mills/ntp/html/stats.html\n\n        // TODO: Consider huff-n'-puff if the delays are highly asymmetric.\n        // http://www.eecis.udel.edu/~mills/ntp/html/huffpuff.html\n\n        // Find the sample with the smallest delay; the corresponding\n        // offset is the \"best\" one.\n        let minDelayMicros = Number.MAX_VALUE;\n        let bestOffsetMicros = 0;\n        _each(this._samples, (sample) => {\n            if (sample.delayMicros < minDelayMicros) {\n                minDelayMicros = sample.delayMicros;\n                bestOffsetMicros = sample.offsetMicros;\n            }\n        });\n\n        // No update.\n        if (bestOffsetMicros === this._currentOffsetMicros) {\n            return;\n        }\n\n        // Now compute the jitter, i.e. the error relative to the new\n        // offset were we to use it.\n        let jitter = 0;\n        _each(this._samples, (sample) => {\n            jitter += Math.pow(bestOffsetMicros - sample.offsetMicros, 2);\n        });\n        jitter = Math.sqrt(jitter / this._samples.length);\n\n        // Ignore spikes: only use the new offset if the change is not too\n        // large... unless the current offset is too old. The \"too old\"\n        // condition is also triggered when update() is called from the\n        // constructor.\n        const kSGATE = 3; // See RFC 5905\n        if (this._currentOffsetAge > kMaxOffsetAge ||\n            Math.abs(this._currentOffsetMicros - bestOffsetMicros) < kSGATE * jitter) {\n            this._currentOffsetMicros = bestOffsetMicros;\n            this._currentOffsetAge = 0;\n        }\n    }\n\n    // Returns the difference in microseconds between the server's clock\n    // and our clock. This should be added to any local timestamps before\n    // sending them to the server. Note that a negative offset means that\n    // the local clock is ahead of the server's.\n    offsetMicros() {\n        return Math.floor(this._currentOffsetMicros);\n    }\n\n    // Returns true if we've performed enough measurements to be confident\n    // in the current offset.\n    isReady() {\n        return this._samples.length > 3;\n    }\n\n    activeSampleCount() {\n        return this._samples.length;\n    }\n}\n\nmodule.exports = ClockState;\n","class Util {\n\n    // Similar to a regular setTimeout() call, but dereferences the timer so the\n    // program execution will not be held up by this timer.\n    detachedTimeout(callback, delay) {\n        let timer = setTimeout(callback, delay);\n        if (timer.unref) {\n            timer.unref();\n        }\n        return timer;\n    }\n}\n\nexport default new Util();\n","import Tracer from './imp/tracer_imp';\nimport { Platform } from './platform_abstraction_layer';\n\nconst library = {\n    Tracer : Tracer,\n};\n\nPlatform.initLibrary(library);\nmodule.exports = library;\n","/* global PLATFORM_BROWSER */\n\n// Hide the differences in how the Thrift compiler generates code for the\n// different platforms as well as expose a Platform class to abstract a few\n// general differences in the platforms.\nif ((typeof PLATFORM_BROWSER !== 'undefined') && PLATFORM_BROWSER) {\n    module.exports = {\n        Platform        : require('./imp/platform/browser/platform_browser.js'),\n        ThriftTransport : require('./imp/platform/browser/transport_httpthrift.js'),\n        ProtoTransport  : require('./imp/platform/browser/transport_httpproto.js'),\n        thrift          : require('./imp/platform/browser/thrift.js'),\n        crouton_thrift  : require('./imp/platform/browser/crouton_thrift.js'),\n        proto           : require('./imp/generated_proto').lightstep,\n    };\n} else {\n    module.exports = {\n        Platform        : require('./imp/platform/node/platform_node.js'),\n        ThriftTransport : require('./imp/platform/node/transport_httpthrift.js'),\n        ProtoTransport  : require('./imp/platform/node/transport_httpproto.js'),\n        thrift          : require('thrift'),\n        crouton_thrift  : require('./imp/platform/node/crouton_thrift.js'),\n        proto           : require('./imp/generated_proto').lightstep,\n    };\n}\n","import _each from '../_each';\n\nclass InstrumentPageLoad {\n    constructor() {\n        this._inited = false;\n        this._span = null;\n    }\n\n    name() {\n        return 'instrument_page_load';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('instrument_page_load', { type : 'bool', defaultValue : false });\n    }\n\n    start(tracerImp) {\n        if (this._inited) {\n            return;\n        }\n        this._inited = true;\n\n        if (typeof window !== 'object' || typeof document !== 'object') {\n            return;\n        }\n\n        const currentOptions = tracerImp.options();\n        if (currentOptions.instrument_page_load) {\n            this._ensureSpanStarted(tracerImp);\n            document.addEventListener('readystatechange', this._handleReadyStateChange.bind(this));\n        }\n    }\n\n    stop() {\n    }\n\n    _ensureSpanStarted(tracerImp) {\n        if (!this._span) {\n            this._span = tracerImp.startSpan('document/load');\n            tracerImp.addActiveRootSpan(this._span);\n        }\n    }\n\n    _handleReadyStateChange() {\n        if (!this._span) {\n            return;\n        }\n\n        let span = this._span;\n        let state = document.readyState;\n        let payload = undefined;\n        if (state === 'complete') {\n            payload = {};\n            if (window.performance && performance.timing) {\n                this._addTimingSpans(span, performance.timing);\n                payload['window.performance.timing'] = performance.timing;\n            }\n        }\n\n        span.logEvent(`document.readystatechange ${state}`, payload);\n\n        if (state === 'complete') {\n            if (span.tracer()) {\n                span.tracer().removeActiveRootSpan(span.tracer());\n            }\n            span.finish();\n        }\n    }\n\n    _copyNavigatorProperties(nav) {\n        let dst = {};\n        for (let key in nav) { // eslint-disable-line guard-for-in\n            try {\n                let value = nav[key];\n                switch (key) {\n\n                case 'plugins': {\n                    let p = [];\n                    for (let i = 0; i < value.length; i++) {\n                        let item = value.item(i);\n                        p.push({\n                            name        : item.name,\n                            description : item.description,\n                        });\n                    }\n                    dst[key] = p;\n                } break;\n\n                case 'mimeTypes': {\n                    let p = [];\n                    for (let i = 0; i < value.length; i++) {\n                        let item = value.item(i);\n                        p.push({\n                            type        : item.type,\n                            description : item.description,\n                            suffixes    : item.suffixes,\n                        });\n                    }\n                    dst[key] = p;\n                } break;\n\n                default:\n                    dst[key] = value;\n                    break;\n                }\n            } catch (e) {\n                // Skip, just in case\n            }\n        }\n        return dst;\n    }\n\n    // Retroactively create the appropriate spans and logs\n    _addTimingSpans(parentImp, timing) {\n        // NOTE: this currently relies on LightStep-specific APIs\n        if (!parentImp) {\n            return;\n        }\n\n        parentImp.setTag('user_agent', navigator.userAgent);\n\n        _each(timing, (value, key) => {\n            // e.g. secureConnectionStart is not always set\n            if (typeof value !== 'number' || value === 0) {\n                return;\n            }\n\n            let payload = undefined;\n\n            if (key === 'navigationStart' && typeof navigator === 'object') {\n                payload = {\n                    navigator : this._copyNavigatorProperties(navigator),\n                };\n            }\n            parentImp.log({\n                message : `document ${key}`,\n                payload : payload,\n            }, value);\n        });\n\n        if (window.chrome && window.chrome.loadTimes) {\n            let chromeTimes = window.chrome.loadTimes();\n            if (chromeTimes) {\n                parentImp.log({\n                    message : 'window.chrome.loadTimes()',\n                    payload : chromeTimes,\n                }, timing.domComplete);\n            }\n        }\n\n        parentImp.setBeginMicros(timing.navigationStart * 1000.0);\n\n        parentImp.tracer().startSpan('document/time_to_first_byte', { childOf : parentImp })\n            .setBeginMicros(timing.requestStart * 1000.0)\n            .setEndMicros(timing.responseStart * 1000.0)\n            .finish();\n        parentImp.tracer()\n            .startSpan('document/response_transfer', { childOf : parentImp })\n            .setBeginMicros(timing.responseStart * 1000.0)\n            .setEndMicros(timing.responseEnd * 1000.0)\n            .finish();\n        parentImp.tracer().startSpan('document/dom_load', { childOf : parentImp })\n            .setBeginMicros(timing.domLoading * 1000.0)\n            .setEndMicros(timing.domInteractive * 1000.0)\n            .finish();\n    }\n}\n\nmodule.exports = new InstrumentPageLoad();\n","import _each from '../_each';\nimport * as opentracing from 'opentracing';\n\n// Capture the proxied values on script load (i.e. ASAP) in case there are\n// multiple layers of instrumentation.\nlet proxied = {};\nif (typeof window === 'object' && typeof window.XMLHttpRequest !== 'undefined') {\n    proxied = {\n        XMLHttpRequest   : XMLHttpRequest,\n        open             : XMLHttpRequest.prototype.open,\n        send             : XMLHttpRequest.prototype.send,\n        setRequestHeader : XMLHttpRequest.prototype.setRequestHeader,\n    };\n}\n\nfunction getCookies() {\n    if (typeof document === 'undefined' || !document.cookie) {\n        return null;\n    }\n    let cookies = document.cookie.split(';');\n    let data = {};\n    let count = 0;\n    for (let i = 0; i < cookies.length; i++) {\n        let parts = cookies[i].split('=', 2);\n        if (parts.length === 2) {\n            let key = parts[0].replace(/^\\s+/, '').replace(/\\s+$/, '');\n            data[key] = decodeURIComponent(parts[1]);\n            try {\n                data[key] = JSON.parse(data[key]);\n            } catch (_ignored) { /* Ignored */ }\n            count++;\n        }\n    }\n    if (count > 0) {\n        return data;\n    }\n    return null;\n}\n\n// Normalize the getAllResponseHeaders output\nfunction getResponseHeaders(xhr) {\n    let raw = xhr.getAllResponseHeaders();\n    let parts = raw.replace(/\\s+$/, '').split(/\\n/);\n    for (let i = 0; i < parts.length; i++) {\n        parts[i] = parts[i].replace(/\\r/g, '').replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n    return parts;\n}\n\n// Automatically create spans for all XMLHttpRequest objects.\n//\n// NOTE: this code currently works only with a single Tracer.\n//\nclass InstrumentXHR {\n    constructor() {\n        this._enabled = this._isValidContext();\n        this._proxyInited = false;\n        this._internalExclusions = [];\n        this._tracer = null;\n        this._handleOptions = this._handleOptions.bind(this);\n\n        if (!this._enabled) {\n            return;\n        }\n    }\n\n    name() {\n        return 'instrument_xhr';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('xhr_instrumentation', { type : 'bool', defaultValue : false });\n        tracerImp.addOption('xhr_url_inclusion_patterns', { type : 'array', defaultValue : [/.*/] });\n        tracerImp.addOption('xhr_url_exclusion_patterns', { type : 'array', defaultValue : [] });\n    }\n\n    start(tracerImp) {\n        if (!this._enabled) {\n            return;\n        }\n        this._tracer = tracerImp;\n\n        let currentOptions = tracerImp.options();\n        this._addServiceHostToExclusions(currentOptions);\n        this._handleOptions({}, currentOptions);\n        tracerImp.on('options', this._handleOptions);\n    }\n\n    stop() {\n        if (!this._enabled) {\n            return;\n        }\n        let proto = proxied.XMLHttpRequest.prototype;\n        proto.open = proxied.open;\n        proto.send = proxied.send;\n    }\n\n    /**\n     * Respond to options changes on the Tracer.\n     *\n     * Note that `modified` is the options that have changed in this call,\n     * along with their previous and new values. `current` is the full set of\n     * current options *including* the newly modified values.\n     */\n    _handleOptions(modified, current) {\n        // Automatically add the service host itself to the list of exclusions\n        // to avoid reporting on the reports themselves\n        let serviceHost = modified.collector_host;\n        if (serviceHost) {\n            this._addServiceHostToExclusions(current);\n        }\n\n        // Set up the proxied XHR calls unless disabled\n        if (!this._proxyInited && current.xhr_instrumentation) {\n            this._proxyInited = true;\n            let proto = proxied.XMLHttpRequest.prototype;\n            proto.setRequestHeader = this._instrumentSetRequestHeader();\n            proto.open = this._instrumentOpen();\n            proto.send = this._instrumentSend();\n        }\n    }\n\n    /**\n     * Ensure that the reports to the collector don't get instrumented as well,\n     * as that recursive instrumentation is more confusing than valuable!\n     */\n    _addServiceHostToExclusions(opts) {\n        if (opts.collector_host.length === 0) {\n            return;\n        }\n\n        // http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n        function escapeRegExp(str) {\n            return (`${str}`).replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n        }\n\n        // Check against the hostname without the port as well as the canonicalized\n        // URL may drop the standard port.\n        let host = escapeRegExp(opts.collector_host);\n        let port = escapeRegExp(opts.collector_port);\n        let set = [new RegExp(`^https?://${host}:${port}`)];\n        if (port === '80') {\n            set.push(new RegExp(`^http://${host}`));\n        } else if (port === '443') {\n            set.push(new RegExp(`^https://${host}`));\n        }\n        this._internalExclusions = set;\n    }\n\n    /**\n     * Check preconditions for the auto-instrumentation of XHRs to work properly.\n     * There are a lot of potential JavaScript platforms.\n     */\n    _isValidContext() {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (!window.XMLHttpRequest) {\n            return false;\n        }\n        if (!window.XMLHttpRequest.prototype) {\n            return false;\n        }\n        return true;\n    }\n\n    _instrumentSetRequestHeader() {\n        return function (header, value) {\n            this.__requestHeaders = this.__requestHeaders || {};\n            this.__requestHeaders[header] = value;\n            return proxied.setRequestHeader.apply(this, arguments);\n        };\n    }\n\n    _instrumentOpen() {\n        let self = this;\n        let tracer = this._tracer;\n\n        return function (method, url, asyncArg, user, password) {\n            if (!self._shouldTrace(tracer, this, url)) {\n                return proxied.open.apply(this, arguments);\n            }\n\n            let span = tracer.startSpan('XMLHttpRequest');\n            tracer.addActiveRootSpan(span);\n            this.__tracer_span = span;\n            this.__tracer_url = url;\n\n            let tags = {\n                method : method,\n                url    : url,\n                async  : asyncArg,\n                user   : user,\n            };\n            if (url) {\n                tags.url_pathname = url.split('?')[0];\n            }\n\n            let openPayload = {};\n            _each(tags, (val, key) => {\n                openPayload[key] = val;\n            });\n            openPayload.cookies = getCookies();\n\n            // Note: async defaults to true\n            let async = (asyncArg === undefined ? true : asyncArg);\n            if (async) {\n                this.addEventListener('readystatechange', function () {\n                    if (this.readyState === 0) {\n                        span.log({\n                            readyState : 0,\n                            event      : 'unsent',\n                        });\n                    } else if (this.readyState === 1) {\n                        span.log({\n                            readyState : 1,\n                            event      : 'sending',\n                        });\n                    } else if (this.readyState === 2) {\n                        span.log({\n                            readyState  : 2,\n                            event       : 'headers received',\n                            method      : method,\n                            url         : url,\n                            openPayload : openPayload,\n                            headers     : getResponseHeaders(this),\n                        });\n                        span.addTags(tags);\n                    } else if (this.readyState === 3) {\n                        span.log({\n                            readyState : 3,\n                            event      : 'loading',\n                        });\n                    } else if (this.readyState === 4) {\n                        let responseType = this.responseType;\n                        span.log({\n                            readyState   : 4,\n                            url          : url,\n                            method       : method,\n                            headers      : getResponseHeaders(this),\n                            status       : this.status,\n                            statusText   : this.statusText,\n                            responseType : responseType,\n                        });\n                        tracer.removeActiveRootSpan(span);\n                        span.finish();\n                    } else {\n                        span.log({\n                            readyState : this.readyState,\n                        });\n                    }\n                });\n            }\n\n            let result = proxied.open.apply(this, arguments);\n            if (!async) {\n                tracer.removeActiveRootSpan(span);\n                span.finish();\n            }\n            return result;\n        };\n    }\n\n    _instrumentSend() {\n        let self = this;\n        let tracer = this._tracer;\n        return function () {\n            if (!self._shouldTrace(tracer, this, this.__tracer_url)) {\n                return proxied.send.apply(this, arguments);\n            }\n\n            let span = this.__tracer_span;\n            if (!span) {\n                return proxied.send.apply(this, arguments);\n            }\n\n            let data = Array.prototype.slice.call(arguments);\n            let len = undefined;\n            if (data.length === 1) {\n                if (data[0] && data[0].length) {\n                    len = data[0].length;\n                }\n                try {\n                    data = JSON.parse(data[0]);\n                } catch (e) {\n                    // Ignore the error\n                }\n            }\n            let lenStr = (len === undefined) ? '' : `, data length=${len}`;\n            span.log({\n                event       : 'send',\n                data_length : lenStr,\n            });\n\n            // Add Open-Tracing headers\n            const headersCarrier = {};\n            tracer.inject(span.context(), opentracing.FORMAT_HTTP_HEADERS, headersCarrier);\n            const keys = Object.keys(headersCarrier);\n            keys.forEach((key) => {\n                proxied.setRequestHeader.call(this, key, headersCarrier[key]);\n            });\n\n            return proxied.send.apply(this, arguments);\n        };\n    }\n\n    _shouldTrace(tracer, xhr, url) {\n        // This shouldn't be possible, but let's be paranoid\n        if (!tracer) {\n            return false;\n        }\n\n        let opts = tracer.options();\n        if (opts.disabled) {\n            return false;\n        }\n        if (!url) {\n            return false;\n        }\n        for (let key in this._internalExclusions) {\n            if (!this._internalExclusions.hasOwnProperty(key)) {\n                continue;\n            }\n            const ex = this._internalExclusions[key];\n            if (ex.test(url)) {\n                return false;\n            }\n        }\n        let include = false;\n        for (let key in opts.xhr_url_inclusion_patterns) {\n            if (!opts.xhr_url_inclusion_patterns.hasOwnProperty(key)) {\n                continue;\n            }\n            const inc = opts.xhr_url_inclusion_patterns[key];\n            if (inc.test(url)) {\n                include = true;\n                break;\n            }\n        }\n        if (!include) {\n            return false;\n        }\n        for (let key in opts.xhr_url_exclusion_patterns) {\n            if (!opts.xhr_url_exclusion_patterns.hasOwnProperty(key)) {\n                continue;\n            }\n            const ex = opts.xhr_url_exclusion_patterns[key];\n            if (ex.test(url)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nmodule.exports = new InstrumentXHR();\n","const constants = require('../constants');\n\nclass LogToConsole {\n    constructor() {\n        this._enabled = false;\n        this._tracer = null;\n        this._optionsCb = this._handleOptions.bind(this);\n        this._logAddedCb = this._handleLogAdded.bind(this);\n    }\n\n    name() {\n        return 'log_to_console';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('log_to_console', {\n            type         : 'bool',\n            defaultValue : false,\n        });\n        tracerImp.on('options', this._optionsCb);\n    }\n\n    start(tracer, tracerImp) {\n        this._tracer = tracer;\n    }\n\n    stop() {\n        this._tracer.removeListener('options', this._optionsCb);\n    }\n\n    _handleOptions(modified, current, tracerImp) {\n        let enabled = current.log_to_console;\n        if (this._enabled === enabled) {\n            return;\n        }\n        this._enabled = enabled;\n        if (this._enabled) {\n            tracerImp.on('log_added', this._logAddedCb);\n        } else {\n            tracerImp.removeListener('log_added', this._logAddedCb);\n        }\n    }\n\n    _handleLogAdded(record) {\n        let level = constants.LOG_STRING_TO_LEVEL[record.level];\n        let message = record.message;\n\n        // Ignore records without a message (e.g. a stable_name log record)\n        if (!message) {\n            return;\n        }\n\n        let payload = record.payload_json;\n        if (payload) {\n            try {\n                payload = JSON.parse(payload);\n            } catch (_ignored) { /* ignored */ }\n        }\n\n        switch (level) {\n        case constants.LOG_ERROR:\n        case constants.LOG_FATAL:\n            if (payload !== undefined) {\n                console.error(message, payload); // eslint-disable-line no-console\n            } else {\n                console.error(message); // eslint-disable-line no-console\n            }\n            break;\n        case constants.LOG_WARN:\n            if (payload !== undefined) {\n                console.warn(message, payload); // eslint-disable-line no-console\n            } else {\n                console.warn(message); // eslint-disable-line no-console\n            }\n            break;\n        case constants.LOG_INFO:\n        default:\n            if (payload !== undefined) {\n                console.log(message, payload); // eslint-disable-line no-console\n            } else {\n                console.log(message); // eslint-disable-line no-console\n            }\n            break;\n        }\n    }\n}\n\nmodule.exports = new LogToConsole();\n"],"sourceRoot":""}