{"version":3,"sources":["webpack://lightstep/webpack/universalModuleDefinition","webpack://lightstep/webpack/bootstrap","webpack://lightstep/./node_modules/eventemitter3/index.js","webpack://lightstep/./node_modules/opentracing/lib/binary_carrier.js","webpack://lightstep/./node_modules/opentracing/lib/constants.js","webpack://lightstep/./node_modules/opentracing/lib/ext/tags.js","webpack://lightstep/./node_modules/opentracing/lib/functions.js","webpack://lightstep/./node_modules/opentracing/lib/global_tracer.js","webpack://lightstep/./node_modules/opentracing/lib/index.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/index.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_context.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_report.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_span.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_tracer.js","webpack://lightstep/./node_modules/opentracing/lib/noop.js","webpack://lightstep/./node_modules/opentracing/lib/reference.js","webpack://lightstep/./node_modules/opentracing/lib/span.js","webpack://lightstep/./node_modules/opentracing/lib/span_context.js","webpack://lightstep/./node_modules/opentracing/lib/tracer.js","webpack://lightstep/./src/_each.js","webpack://lightstep/./src/constants.js","webpack://lightstep/./src/imp/auth_imp.js","webpack://lightstep/./src/imp/coerce.js","webpack://lightstep/./src/imp/globals.js","webpack://lightstep/./src/imp/log_builder.js","webpack://lightstep/./src/imp/log_record_imp.js","webpack://lightstep/./src/imp/platform/browser/crouton_thrift.js","webpack://lightstep/./src/imp/platform/browser/generated/thrift_all.js","webpack://lightstep/./src/imp/platform/browser/options_parser.js","webpack://lightstep/./src/imp/platform/browser/platform_browser.js","webpack://lightstep/./src/imp/platform/browser/thrift.js","webpack://lightstep/./src/imp/platform/browser/transport_httpthrift.js","webpack://lightstep/./src/imp/platform/browser/util.js","webpack://lightstep/./src/imp/report_imp.js","webpack://lightstep/./src/imp/runtime_imp.js","webpack://lightstep/./src/imp/span_context_imp.js","webpack://lightstep/./src/imp/span_imp.js","webpack://lightstep/./src/imp/tracer_imp.js","webpack://lightstep/./src/imp/util/clock_state.js","webpack://lightstep/./src/imp/util/util.js","webpack://lightstep/./src/lib.js","webpack://lightstep/./src/platform_abstraction_layer.js","webpack://lightstep/./src/plugins/instrument_document_load.js","webpack://lightstep/./src/plugins/instrument_xhr.js","webpack://lightstep/./src/plugins/log_to_console.js"],"names":["_each","obj","cb","key","hasOwnProperty","call","LOG_INFO","LOG_WARN","LOG_ERROR","LOG_FATAL","LOG_LEVEL_TO_STRING","LOG_STRING_TO_LEVEL","I","W","E","F","CLOCK_STATE_REFRESH_INTERVAL_MS","LIGHTSTEP_APP_URL_PREFIX","JOIN_ID_PREFIX","croutonThrift","proto","require","crouton_thrift","AuthImp","accessToken","_accessToken","Auth","access_token","toString","toNumber","toBoolean","value","Number","PackageGlobals","options","opts","val","module","exports","constants","coerce","LogBuilder","runtime","_runtime","_record","timestamp_micros","_platform","nowMicros","_addLogRecord","micros","msg","message","num","level","error","guid","undefined","span_guid","stableName","stable_name","flag","error_flag","data","payload_json","_encodePayload","payloadJSON","JSON","stringify","_ignored","googleProtobufTimestampPB","LogRecordImp","logFieldKeyHardLimit","logFieldValueHardLimit","timestampMicros","fields","_logFieldKeyHardLimit","_logFieldValueHardLimit","_timestampMicros","_fields","_keysOverLimit","_valuesOverLimit","_clearOverLimits","thriftFields","keyStr","getFieldKey","valStr","getFieldValue","push","KeyValue","Key","Value","LogRecord","length","substr","Object","e","Thrift","args","TProtocolException","TProtocolExceptionType","UNKNOWN","prototype","read","write","NamedCounter","Name","Runtime","start_micros","group_name","attrs","runtime_guid","thread_id","filename","line_number","stack_frames","TraceJoinId","TraceKey","SpanRecord","trace_guid","span_name","join_ids","oldest_micros","youngest_micros","attributes","log_records","Timing","receive_micros","transmit_micros","SampleCount","count","MetricsSample","name","int64_value","double_value","Metrics","counts","gauges","ReportRequest","span_records","timestamp_offset_micros","counters","internal_logs","internal_metrics","Command","disable","ReportResponse","commands","timing","hostScriptElement","scripts","document","getElementsByTagName","urlQueryParameters","defaults","vars","qi","window","location","href","indexOf","slice","hashes","replace","split","i","hash","decodeURIComponent","parseScriptElementOptions","browserOpts","dataset","componentName","component_name","collectorHost","collector_host","collectorPort","collector_port","parseInt","collectorPath","collector_path","collectorEncryption","collector_encryption","transport","enable","verbosity","init","init_global_tracer","xhr_instrumentation","instrument_page_load","parseURLQueryOptions","params","lightstep_verbosity","lightstep_log_to_console","log_to_console","optionsParser","util","kRuntimeGUIDCookiePrefix","kSessionIDCookieKey","kCookieTimeToLiveSeconds","nowMicrosImp","performance","now","navigationStart","start","Math","floor","Date","PlatformBrowser","groupName","cookieKey","uuid","cookie","_generateLongUUID","sessionID","p0","abs","random","p1","addEventListener","imp","tracerOpts","Error","sessionStorage","parse","getItem","setItem","lib","initGlobalTracer","opentracing","Tracer","TransportBrowser","_host","_port","_path","_encryption","detached","auth","report","done","_reportAJAX","_reportAsyncScript","payload","toThrift","protocol","url","xhr","XMLHttpRequest","open","setRequestHeader","getAccessToken","onreadystatechange","readyState","err","resp","status","responseText","exception","send","authJSON","reportJSON","encodeURIComponent","elem","createElement","async","defer","src","type","hostElem","appendChild","ttl","path","domain","secure","arguments","newCookie","toUTCString","ReportImp","oldestMicros","youngestMicros","spanRecords","internalLogs","timestampOffsetMicros","_oldestMicros","_youngestMicros","_spanRecords","_internalLogs","_counters","_timestampOffsetMicros","span","_runtimeGUID","thriftCounters","thriftSpanRecords","spanRecord","_toThrift","packageObject","converter","RuntimeImp","runtimeGUID","startMicros","_startMicros","_componentName","_attributes","thriftAttrs","SpanContextImp","_baggage","f","spanGUID","traceGUID","_guid","_traceGUID","SpanImp","_tracerImp","_ctx","_operationName","keyValuePairs","self","_tags","timestamp","argumentType","_error","tsMicros","record","getLogFieldKeyHardLimit","getLogFieldValueHardLimit","_log_records","emit","finishTime","end","tracer","spanContext","console","assert","_ended","_beginMicros","_endMicros","_errorFlag","parent_span_guid","urlPrefix","_addSpanRecord","logs","logRecord","logThrift","getNumKeysOverLimit","getNumValuesOverLimit","Span","Platform","ProtoTransport","ThriftTransport","ClockState","globals","CARRIER_TRACER_STATE_PREFIX","CARRIER_BAGGAGE_PREFIX","DEFAULT_COLLECTOR_HOSTNAME","DEFAULT_COLLECTOR_PORT_TLS","DEFAULT_COLLECTOR_PORT_PLAIN","DEFAULT_COLLECTOR_PATH","MAX_INTERNAL_LOGS","_singleton","_delegateEventEmitterMethods","setOptions","override_runtime_guid","_plugins","_options","_optionDescs","_makeOptionsTable","_opentracing","opentracing_module","_auth","logger","warn","_warn","_transport","override_transport","_reportingLoopActive","_reportYoungestMicros","_reportTimer","_reportErrorStreak","_lastVisibleErrorMillis","_skippedVisibleErrors","_activeRootSpanSet","_activeRootSpan","_useClockState","_clockState","localStoreGet","localStoreSet","_flushIsActive","addPlugin","addPlatformPlugins","setPlatformOptions","_setupReportOnExit","_info","startPlugins","_ee","methodName","apply","addOption","min","max","defaultValue","parentCtxImp","references","ref","REFERENCE_CHILD_OF","REFERENCE_FOLLOWS_FROM","context","referencedContext","generateTraceGUIDForRootSpan","spanImp","generateUUID","addTags","default_span_tags","setBeginMicros","setParentGUID","format","carrier","FORMAT_HTTP_HEADERS","FORMAT_TEXT_MAP","_injectToTextMap","FORMAT_BINARY","forEachBaggageItem","_extractTextMap","foundFields","toLowerCase","suffix","setBaggageItem","disabled","_flushReport","v","userOptions","desc","modified","unchanged","_setOptionInternal","_initReportingDataIfNeeded","_startReportingLoop","optionsString","newValue","_debug","valueType","oldValue","tags","version","platformTags","tracerTags","log_field_key_hard_limit","log_field_value_hard_limit","pluginSet","plugins","plugin","addOptions","_setActiveRootSpanToYoungest","jsonString","buffer","ArrayBuffer","view","Uint8Array","code","charCodeAt","arr","String","fromCharCode","b","unused","countersAllZero","_internalAddSpanRecord","max_span_records","index","spans","currentInternalLogs","toAdd","concat","log","_pushInternalLog","disable_report_on_exit","finalFlushOnce","finalFlush","unflushed_spans","buffer_youngest_micros","onBeforeExit","disable_reporting_loop","stopReportingOnce","stopReporting","_stopReportingLoop","loop","_enqueueNextReport","delay","delay_initial_report_millis","detachedTimeout","clearTimeout","reportInterval","max_reporting_interval_millis","isReady","backOff","basis","jitter","manual","clockReady","clockOffsetMicros","offsetMicros","offset_micros","active_samples","activeSampleCount","ready","_buffersAreEmpty","_clearBuffers","ensureConnection","timestampOffset","originMicros","res","destinationMicros","reportWindowSeconds","errString","last_report_seconds_ago","_restoreRecords","getSpanRecords","getInternalLogs","getCounters","streak","spans_reported","addSample","errors","_printToConsole","nextVisible","error_throttle_millis","s","silent","kMaxOffsetAge","kStoredSamplesTTLMicros","_nowMicros","_localStoreGet","_localStoreSet","_samples","_currentOffsetMicros","_currentOffsetAge","storedData","samples","update","receiveMicros","transmitMicros","latestDelayMicros","MAX_VALUE","latestOffsetMicros","shift","delayMicros","minDelayMicros","bestOffsetMicros","sample","pow","sqrt","kSGATE","Util","callback","timer","setTimeout","unref","library","initLibrary","thrift","InstrumentPageLoad","_inited","_span","tracerImp","currentOptions","_ensureSpanStarted","_handleReadyStateChange","bind","startSpan","addActiveRootSpan","state","_addTimingSpans","logEvent","removeActiveRootSpan","finish","nav","dst","p","item","description","suffixes","parentImp","setTag","navigator","userAgent","_copyNavigatorProperties","chrome","loadTimes","chromeTimes","domComplete","childOf","requestStart","setEndMicros","responseStart","responseEnd","domLoading","domInteractive","proxied","getCookies","cookies","parts","getResponseHeaders","raw","getAllResponseHeaders","InstrumentXHR","_enabled","_isValidContext","_proxyInited","_internalExclusions","_tracer","_handleOptions","_addServiceHostToExclusions","on","current","serviceHost","_instrumentSetRequestHeader","_instrumentOpen","_instrumentSend","escapeRegExp","str","host","port","set","RegExp","header","__requestHeaders","method","asyncArg","user","password","_shouldTrace","__tracer_span","__tracer_url","url_pathname","openPayload","event","headers","responseType","statusText","result","Array","len","lenStr","data_length","headersCarrier","inject","keys","forEach","ex","test","include","xhr_url_inclusion_patterns","inc","xhr_url_exclusion_patterns","LogToConsole","_optionsCb","_logAddedCb","_handleLogAdded","removeListener","enabled"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gDAAgD,YAAY;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;;;;;;ACrQa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AC9Da;AACb,8CAA8C,cAAcgC;;;;;;;;;;;;AC3Ga;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,gEAAa;AACrC,kBAAkB,mBAAO,CAAC,gEAAa;AACvC,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACnCa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACpEa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0EAAkB;AACjD;AACA,WAAW,mBAAO,CAAC,8DAAY;AAC/B;AACA,WAAW,mBAAO,CAAC,sDAAQ;AAC3B,kBAAkB,mBAAO,CAAC,gEAAa;AACvC;AACA,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA,qBAAqB,mBAAO,CAAC,sEAAgB;AAC7C;AACA,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA,oBAAoB,mBAAO,CAAC,0EAAe;AAC3C;AACA,SAAS,mBAAO,CAAC,wEAAiB;AAClC,SAAS,mBAAO,CAAC,gEAAa;AAC9B,SAAS,mBAAO,CAAC,gEAAa;AAC9B;AACA;AACA,iC;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C;AACA,kBAAkB,mBAAO,CAAC,4EAAa;AACvC;AACA,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C;AACA,iC;;;;;;;;;;;;ACRa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yDAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,wC;;;;;;;;;;;;ACjCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,uC;;;;;;;;;;;;AC5Ca;AACb;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yDAAU;AACpC,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,qC;;;;;;;;;;;;ACnGa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,yDAAU;AACpC,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C,kBAAkB,mBAAO,CAAC,4EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,uC;;;;;;;;;;;;AC3Ea;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B,qBAAqB,mBAAO,CAAC,sEAAgB;AAC7C,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,sDAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,IAAI;AACnB;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qCAAqC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gC;;;;;;;;;;;;AC9Ma;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,wC;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,gEAAa;AACrC,WAAW,mBAAO,CAAC,sDAAQ;AAC3B,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,eAAe,OAAO;AACtB,eAAe,YAAY;AAC3B,gBAAgB,KAAK;AACrB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,oBAAoB;AACz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","file":"lightstep-tracer-thrift.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lightstep\"] = factory();\n\telse\n\t\troot[\"lightstep\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/lib.js\");\n","'use strict';\n\n//\n// We store our EE objects in a plain object whose properties are event names.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// `~` to make sure that the built-in object properties are not overridden or\n// used as an attack vector.\n// We also assume that `Object.create(null)` is available when the event name\n// is an ES6 Symbol.\n//\nvar prefix = typeof Object.create !== 'function' ? '~' : false;\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @param {Boolean} exists We only need to know if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events && this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Mixed} context Only remove listeners matching this context.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return this;\n\n  var listeners = this._events[evt]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn) {\n      if (\n           listeners.fn !== fn\n        || (once && !listeners.once)\n        || (context && listeners.context !== context)\n      ) {\n        events.push(listeners);\n      }\n    } else {\n      for (var i = 0, length = listeners.length; i < length; i++) {\n        if (\n             listeners[i].fn !== fn\n          || (once && !listeners[i].once)\n          || (context && listeners[i].context !== context)\n        ) {\n          events.push(listeners[i]);\n        }\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[evt] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[prefix ? prefix + event : event];\n  else this._events = prefix ? {} : Object.create(null);\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Convenience class to use as a binary carrier.\n *\n * Any valid Object with a field named `buffer` may be used as a binary carrier;\n * this class is only one such type of object that can be used.\n */\nvar BinaryCarrier = /** @class */ (function () {\n    function BinaryCarrier(buffer) {\n        this.buffer = buffer;\n    }\n    return BinaryCarrier;\n}());\nexports.default = BinaryCarrier;\n//# sourceMappingURL=binary_carrier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The FORMAT_BINARY format represents SpanContexts in an opaque binary\n * carrier.\n *\n * Tracer.inject() will set the buffer field to an Array-like (Array,\n * ArrayBuffer, or TypedBuffer) object containing the injected binary data.\n * Any valid Object can be used as long as the buffer field of the object\n * can be set.\n *\n * Tracer.extract() will look for `carrier.buffer`, and that field is\n * expected to be an Array-like object (Array, ArrayBuffer, or\n * TypedBuffer).\n */\nexports.FORMAT_BINARY = 'binary';\n/**\n * The FORMAT_TEXT_MAP format represents SpanContexts using a\n * string->string map (backed by a Javascript Object) as a carrier.\n *\n * NOTE: Unlike FORMAT_HTTP_HEADERS, FORMAT_TEXT_MAP places no restrictions\n * on the characters used in either the keys or the values of the map\n * entries.\n *\n * The FORMAT_TEXT_MAP carrier map may contain unrelated data (e.g.,\n * arbitrary gRPC metadata); as such, the Tracer implementation should use\n * a prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_TEXT_MAP = 'text_map';\n/**\n * The FORMAT_HTTP_HEADERS format represents SpanContexts using a\n * character-restricted string->string map (backed by a Javascript Object)\n * as a carrier.\n *\n * Keys and values in the FORMAT_HTTP_HEADERS carrier must be suitable for\n * use as HTTP headers (without modification or further escaping). That is,\n * the keys have a greatly restricted character set, casing for the keys\n * may not be preserved by various intermediaries, and the values should be\n * URL-escaped.\n *\n * The FORMAT_HTTP_HEADERS carrier map may contain unrelated data (e.g.,\n * arbitrary HTTP headers); as such, the Tracer implementation should use a\n * prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_HTTP_HEADERS = 'http_headers';\n/**\n * A Span may be the \"child of\" a parent Span. In a “child of” reference,\n * the parent Span depends on the child Span in some capacity.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_CHILD_OF = 'child_of';\n/**\n * Some parent Spans do not depend in any way on the result of their child\n * Spans. In these cases, we say merely that the child Span “follows from”\n * the parent Span in a causal sense.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_FOLLOWS_FROM = 'follows_from';\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** SPAN_KIND hints at relationship between spans, e.g. client/server */\nexports.SPAN_KIND = 'span.kind';\n/** Marks a span representing the client-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_CLIENT = 'client';\n/** Marks a span representing the server-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_SERVER = 'server';\n/** Marks a span representing the producing-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_PRODUCER = 'producer';\n/** Marks a span representing the consuming-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_CONSUMER = 'consumer';\n/**\n * ERROR (boolean) true if and only if the application considers the operation\n * represented by the Span to have failed\n */\nexports.ERROR = 'error';\n/**\n * COMPONENT (string) ia s low-cardinality identifier of the module, library,\n * or package that is generating a span.\n */\nexports.COMPONENT = 'component';\n/**\n * SAMPLING_PRIORITY (number) determines the priority of sampling this Span.\n * If greater than 0, a hint to the Tracer to do its best to capture the trace.\n * If 0, a hint to the trace to not-capture the trace. If absent, the Tracer\n * should use its default sampling mechanism.\n */\nexports.SAMPLING_PRIORITY = 'sampling.priority';\n// ---------------------------------------------------------------------------\n// PEER_* tags can be emitted by either client-side of server-side to describe\n// the other side/service in a peer-to-peer communications, like an RPC call.\n// ---------------------------------------------------------------------------\n/**\n * PEER_SERVICE (string) Remote service name (for some unspecified\n * definition of \"service\"). E.g., \"elasticsearch\", \"a_custom_microservice\", \"memcache\"\n */\nexports.PEER_SERVICE = 'peer.service';\n/** PEER_HOSTNAME (string) Remote hostname. E.g., \"opentracing.io\", \"internal.dns.name\" */\nexports.PEER_HOSTNAME = 'peer.hostname';\n/**\n * PEER_ADDRESS (string) Remote \"address\", suitable for use in a\n * networking client library. This may be a \"ip:port\", a bare\n * \"hostname\", a FQDN, or even a JDBC substring like \"mysql://prod-db:3306\"\n */\nexports.PEER_ADDRESS = 'peer.address';\n/**\n * PEER_HOST_IPV4 (number) Remote IPv4 address as a .-separated tuple.\n * E.g., \"127.0.0.1\"\n */\nexports.PEER_HOST_IPV4 = 'peer.ipv4';\n// PEER_HOST_IPV6 (string) Remote IPv6 address as a string of\n// colon-separated 4-char hex tuples. E.g., \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"\nexports.PEER_HOST_IPV6 = 'peer.ipv6';\n// PEER_PORT (number) Remote port. E.g., 80\nexports.PEER_PORT = 'peer.port';\n// ---------------------------------------------------------------------------\n// HTTP tags\n// ---------------------------------------------------------------------------\n/**\n * HTTP_URL (string) URL of the request being handled in this segment of the\n * trace, in standard URI format. E.g., \"https://domain.net/path/to?resource=here\"\n */\nexports.HTTP_URL = 'http.url';\n/**\n * HTTP_METHOD (string) HTTP method of the request for the associated Span. E.g.,\n * \"GET\", \"POST\"\n */\nexports.HTTP_METHOD = 'http.method';\n/**\n * HTTP_STATUS_CODE (number) HTTP response status code for the associated Span.\n * E.g., 200, 503, 404\n */\nexports.HTTP_STATUS_CODE = 'http.status_code';\n// -------------------------------------------------------------------------\n// Messaging tags\n// -------------------------------------------------------------------------\n/**\n * MESSAGE_BUS_DESTINATION (string) An address at which messages can be exchanged.\n * E.g. A Kafka record has an associated \"topic name\" that can be extracted\n * by the instrumented producer or consumer and stored using this tag.\n */\nexports.MESSAGE_BUS_DESTINATION = 'message_bus.destination';\n// --------------------------------------------------------------------------\n// Database tags\n// --------------------------------------------------------------------------\n/**\n * DB_INSTANCE (string) Database instance name. E.g., In java, if the\n * jdbc.url=\"jdbc:mysql://127.0.0.1:3306/customers\", the instance name is \"customers\".\n */\nexports.DB_INSTANCE = 'db.instance';\n/**\n * DB_STATEMENT (string) A database statement for the given database type.\n * E.g., for db.type=\"SQL\", \"SELECT * FROM wuser_table\";\n * for db.type=\"redis\", \"SET mykey 'WuValue'\".\n */\nexports.DB_STATEMENT = 'db.statement';\n/**\n * DB_TYPE (string) Database type. For any SQL database, \"sql\". For others,\n * the lower-case database category, e.g. \"cassandra\", \"hbase\", or \"redis\".\n */\nexports.DB_TYPE = 'db.type';\n/**\n * DB_USER (string) Username for accessing database. E.g., \"readonly_user\"\n * or \"reporting_user\"\n */\nexports.DB_USER = 'db.user';\n//# sourceMappingURL=tags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants = require(\"./constants\");\nvar reference_1 = require(\"./reference\");\nvar span_1 = require(\"./span\");\n/**\n * Return a new REFERENCE_CHILD_OF reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_CHILD_OF reference pointing to `spanContext`\n */\nfunction childOf(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_CHILD_OF, spanContext);\n}\nexports.childOf = childOf;\n/**\n * Return a new REFERENCE_FOLLOWS_FROM reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_FOLLOWS_FROM reference pointing to `spanContext`\n */\nfunction followsFrom(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_FOLLOWS_FROM, spanContext);\n}\nexports.followsFrom = followsFrom;\n//# sourceMappingURL=functions.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tracer_1 = require(\"./tracer\");\nvar noopTracer = new tracer_1.default();\nvar _globalTracer = null;\n// Allows direct importing/requiring of the global tracer:\n//\n// let globalTracer = require('opentracing/global');\n//      OR\n// import globalTracer from 'opentracing/global';\n//\n// Acts a bridge to the global tracer that can be safely called before the\n// global tracer is initialized. The purpose of the delegation is to avoid the\n// sometimes nearly intractible initialization order problems that can arise in\n// applications with a complex set of dependencies, while also avoiding the\n// case where\nvar GlobalTracerDelegate = /** @class */ (function (_super) {\n    __extends(GlobalTracerDelegate, _super);\n    function GlobalTracerDelegate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalTracerDelegate.prototype.startSpan = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.startSpan.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.inject = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.inject.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.extract = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.extract.apply(tracer, arguments);\n    };\n    return GlobalTracerDelegate;\n}(tracer_1.default));\nvar globalTracerDelegate = new GlobalTracerDelegate();\n/**\n * Set the global Tracer.\n *\n * The behavior is undefined if this function is called more than once.\n *\n * @param {Tracer} tracer - the Tracer implementation\n */\nfunction initGlobalTracer(tracer) {\n    _globalTracer = tracer;\n}\nexports.initGlobalTracer = initGlobalTracer;\n/**\n * Returns the global tracer.\n */\nfunction globalTracer() {\n    // Return the delegate.  Since the global tracer is largely a convenience\n    // (the user can always create their own tracers), the delegate is used to\n    // give the added convenience of not needing to worry about initialization\n    // order.\n    return globalTracerDelegate;\n}\nexports.globalTracer = globalTracer;\n//# sourceMappingURL=global_tracer.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_carrier_1 = require(\"./binary_carrier\");\nexports.BinaryCarrier = binary_carrier_1.default;\nvar Tags = require(\"./ext/tags\");\nexports.Tags = Tags;\nvar Noop = require(\"./noop\");\nvar reference_1 = require(\"./reference\");\nexports.Reference = reference_1.default;\nvar span_1 = require(\"./span\");\nexports.Span = span_1.default;\nvar span_context_1 = require(\"./span_context\");\nexports.SpanContext = span_context_1.default;\nvar tracer_1 = require(\"./tracer\");\nexports.Tracer = tracer_1.Tracer;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.MockTracer;\n__export(require(\"./global_tracer\"));\n__export(require(\"./constants\"));\n__export(require(\"./functions\"));\n// Initialize the noops last to avoid a dependecy cycle between the classes.\nNoop.initialize();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mock_context_1 = require(\"./mock_context\");\nexports.MockContext = mock_context_1.default;\nvar mock_span_1 = require(\"./mock_span\");\nexports.MockSpan = mock_span_1.default;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\n/**\n * OpenTracing Context implementation designed for use in\n * unit tests.\n */\nvar MockContext = /** @class */ (function (_super) {\n    __extends(MockContext, _super);\n    function MockContext(span) {\n        var _this = _super.call(this) || this;\n        // Store a reference to the span itself since this is a mock tracer\n        // intended to make debugging and unit testing easier.\n        _this._span = span;\n        return _this;\n    }\n    MockContext.prototype.span = function () {\n        return this._span;\n    };\n    return MockContext;\n}(opentracing.SpanContext));\nexports.MockContext = MockContext;\nexports.default = MockContext;\n//# sourceMappingURL=mock_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Index a collection of reported MockSpans in a way that's easy to run unit\n * test assertions against.\n */\nvar MockReport = /** @class */ (function () {\n    function MockReport(spans) {\n        var _this = this;\n        this.spans = spans;\n        this.spansByUUID = {};\n        this.spansByTag = {};\n        this.debugSpans = [];\n        this.unfinishedSpans = [];\n        spans.forEach(function (span) {\n            if (span._finishMs === 0) {\n                _this.unfinishedSpans.push(span);\n            }\n            _this.spansByUUID[span.uuid()] = span;\n            _this.debugSpans.push(span.debug());\n            var tags = span.tags();\n            Object.keys(tags).forEach(function (key) {\n                var val = tags[key];\n                _this.spansByTag[key] = _this.spansByTag[key] || {};\n                _this.spansByTag[key][val] = _this.spansByTag[key][val] || [];\n                _this.spansByTag[key][val].push(span);\n            });\n        });\n    }\n    MockReport.prototype.firstSpanWithTagValue = function (key, val) {\n        var m = this.spansByTag[key];\n        if (!m) {\n            return null;\n        }\n        var n = m[val];\n        if (!n) {\n            return null;\n        }\n        return n[0];\n    };\n    return MockReport;\n}());\nexports.MockReport = MockReport;\nexports.default = MockReport;\n//# sourceMappingURL=mock_report.js.map","\"use strict\";\n/* eslint-disable import/no-extraneous-dependencies */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\nvar mock_context_1 = require(\"./mock_context\");\n/**\n * OpenTracing Span implementation designed for use in unit tests.\n */\nvar MockSpan = /** @class */ (function (_super) {\n    __extends(MockSpan, _super);\n    //------------------------------------------------------------------------//\n    // MockSpan-specific\n    //------------------------------------------------------------------------//\n    function MockSpan(tracer) {\n        var _this = _super.call(this) || this;\n        _this._mockTracer = tracer;\n        _this._uuid = _this._generateUUID();\n        _this._startMs = Date.now();\n        _this._finishMs = 0;\n        _this._operationName = '';\n        _this._tags = {};\n        _this._logs = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockSpan.prototype._context = function () {\n        return new mock_context_1.default(this);\n    };\n    MockSpan.prototype._setOperationName = function (name) {\n        this._operationName = name;\n    };\n    MockSpan.prototype._addTags = function (set) {\n        var keys = Object.keys(set);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this._tags[key] = set[key];\n        }\n    };\n    MockSpan.prototype._log = function (fields, timestamp) {\n        this._logs.push({\n            fields: fields,\n            timestamp: timestamp\n        });\n    };\n    MockSpan.prototype._finish = function (finishTime) {\n        this._finishMs = finishTime || Date.now();\n    };\n    MockSpan.prototype.uuid = function () {\n        return this._uuid;\n    };\n    MockSpan.prototype.operationName = function () {\n        return this._operationName;\n    };\n    MockSpan.prototype.durationMs = function () {\n        return this._finishMs - this._startMs;\n    };\n    MockSpan.prototype.tags = function () {\n        return this._tags;\n    };\n    MockSpan.prototype.tracer = function () {\n        return this._mockTracer;\n    };\n    MockSpan.prototype._generateUUID = function () {\n        var p0 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        var p1 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        return \"\" + p0 + p1;\n    };\n    MockSpan.prototype.addReference = function (ref) {\n    };\n    /**\n     * Returns a simplified object better for console.log()'ing.\n     */\n    MockSpan.prototype.debug = function () {\n        var obj = {\n            uuid: this._uuid,\n            operation: this._operationName,\n            millis: [this._finishMs - this._startMs, this._startMs, this._finishMs]\n        };\n        if (Object.keys(this._tags).length) {\n            obj.tags = this._tags;\n        }\n        return obj;\n    };\n    return MockSpan;\n}(opentracing.Span));\nexports.MockSpan = MockSpan;\nexports.default = MockSpan;\n//# sourceMappingURL=mock_span.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: Move mock-tracer to its own NPM package once it is complete and tested.\nvar opentracing = require(\"../index\");\nvar mock_report_1 = require(\"./mock_report\");\nvar mock_span_1 = require(\"./mock_span\");\n/**\n * OpenTracing Tracer implementation designed for use in unit tests.\n */\nvar MockTracer = /** @class */ (function (_super) {\n    __extends(MockTracer, _super);\n    //------------------------------------------------------------------------//\n    // MockTracer-specific\n    //------------------------------------------------------------------------//\n    function MockTracer() {\n        var _this = _super.call(this) || this;\n        _this._spans = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockTracer.prototype._startSpan = function (name, fields) {\n        // _allocSpan is given it's own method so that derived classes can\n        // allocate any type of object they want, but not have to duplicate\n        // the other common logic in startSpan().\n        var span = this._allocSpan();\n        span.setOperationName(name);\n        this._spans.push(span);\n        if (fields.references) {\n            for (var _i = 0, _a = fields.references; _i < _a.length; _i++) {\n                var ref = _a[_i];\n                span.addReference(ref);\n            }\n        }\n        // Capture the stack at the time the span started\n        span._startStack = new Error().stack;\n        return span;\n    };\n    MockTracer.prototype._inject = function (span, format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._extract = function (format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._allocSpan = function () {\n        return new mock_span_1.default(this);\n    };\n    /**\n     * Discard any buffered data.\n     */\n    MockTracer.prototype.clear = function () {\n        this._spans = [];\n    };\n    /**\n     * Return the buffered data in a format convenient for making unit test\n     * assertions.\n     */\n    MockTracer.prototype.report = function () {\n        return new mock_report_1.default(this._spans);\n    };\n    return MockTracer;\n}(opentracing.Tracer));\nexports.MockTracer = MockTracer;\nexports.default = MockTracer;\n//# sourceMappingURL=mock_tracer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\nvar span_context_1 = require(\"./span_context\");\nvar tracer_1 = require(\"./tracer\");\nexports.tracer = null;\nexports.spanContext = null;\nexports.span = null;\n// Deferred initialization to avoid a dependency cycle where Tracer depends on\n// Span which depends on the noop tracer.\nfunction initialize() {\n    exports.tracer = new tracer_1.default();\n    exports.span = new span_1.default();\n    exports.spanContext = new span_context_1.default();\n}\nexports.initialize = initialize;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\n/**\n * Reference pairs a reference type constant (e.g., REFERENCE_CHILD_OF or\n * REFERENCE_FOLLOWS_FROM) with the SpanContext it points to.\n *\n * See the exported childOf() and followsFrom() functions at the package level.\n */\nvar Reference = /** @class */ (function () {\n    /**\n     * Initialize a new Reference instance.\n     *\n     * @param {string} type - the Reference type constant (e.g.,\n     *        REFERENCE_CHILD_OF or REFERENCE_FOLLOWS_FROM).\n     * @param {SpanContext} referencedContext - the SpanContext being referred\n     *        to. As a convenience, a Span instance may be passed in instead\n     *        (in which case its .context() is used here).\n     */\n    function Reference(type, referencedContext) {\n        this._type = type;\n        this._referencedContext = (referencedContext instanceof span_1.default ?\n            referencedContext.context() :\n            referencedContext);\n    }\n    /**\n     * @return {string} The Reference type (e.g., REFERENCE_CHILD_OF or\n     *         REFERENCE_FOLLOWS_FROM).\n     */\n    Reference.prototype.type = function () {\n        return this._type;\n    };\n    /**\n     * @return {SpanContext} The SpanContext being referred to (e.g., the\n     *         parent in a REFERENCE_CHILD_OF Reference).\n     */\n    Reference.prototype.referencedContext = function () {\n        return this._referencedContext;\n    };\n    return Reference;\n}());\nexports.default = Reference;\n//# sourceMappingURL=reference.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar noop = require(\"./noop\");\n/**\n * Span represents a logical unit of work as part of a broader Trace. Examples\n * of span might include remote procedure calls or a in-process function calls\n * to sub-components. A Trace has a single, top-level \"root\" Span that in turn\n * may have zero or more child Spans, which in turn may have children.\n */\nvar Span = /** @class */ (function () {\n    function Span() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Returns the SpanContext object associated with this Span.\n     *\n     * @return {SpanContext}\n     */\n    Span.prototype.context = function () {\n        return this._context();\n    };\n    /**\n     * Returns the Tracer object used to create this Span.\n     *\n     * @return {Tracer}\n     */\n    Span.prototype.tracer = function () {\n        return this._tracer();\n    };\n    /**\n     * Sets the string name for the logical operation this span represents.\n     *\n     * @param {string} name\n     */\n    Span.prototype.setOperationName = function (name) {\n        this._setOperationName(name);\n        return this;\n    };\n    /**\n     * Sets a key:value pair on this Span that also propagates to future\n     * children of the associated Span.\n     *\n     * setBaggageItem() enables powerful functionality given a full-stack\n     * opentracing integration (e.g., arbitrary application data from a web\n     * client can make it, transparently, all the way into the depths of a\n     * storage system), and with it some powerful costs: use this feature with\n     * care.\n     *\n     * IMPORTANT NOTE #1: setBaggageItem() will only propagate baggage items to\n     * *future* causal descendants of the associated Span.\n     *\n     * IMPORTANT NOTE #2: Use this thoughtfully and with care. Every key and\n     * value is copied into every local *and remote* child of the associated\n     * Span, and that can add up to a lot of network and cpu overhead.\n     *\n     * @param {string} key\n     * @param {string} value\n     */\n    Span.prototype.setBaggageItem = function (key, value) {\n        this._setBaggageItem(key, value);\n        return this;\n    };\n    /**\n     * Returns the value for a baggage item given its key.\n     *\n     * @param  {string} key\n     *         The key for the given trace attribute.\n     * @return {string}\n     *         String value for the given key, or undefined if the key does not\n     *         correspond to a set trace attribute.\n     */\n    Span.prototype.getBaggageItem = function (key) {\n        return this._getBaggageItem(key);\n    };\n    /**\n     * Adds a single tag to the span.  See `addTags()` for details.\n     *\n     * @param {string} key\n     * @param {any} value\n     */\n    Span.prototype.setTag = function (key, value) {\n        // NOTE: the call is normalized to a call to _addTags()\n        this._addTags((_a = {}, _a[key] = value, _a));\n        return this;\n        var _a;\n    };\n    /**\n     * Adds the given key value pairs to the set of span tags.\n     *\n     * Multiple calls to addTags() results in the tags being the superset of\n     * all calls.\n     *\n     * The behavior of setting the same key multiple times on the same span\n     * is undefined.\n     *\n     * The supported type of the values is implementation-dependent.\n     * Implementations are expected to safely handle all types of values but\n     * may choose to ignore unrecognized / unhandle-able values (e.g. objects\n     * with cyclic references, function objects).\n     *\n     * @return {[type]} [description]\n     */\n    Span.prototype.addTags = function (keyValueMap) {\n        this._addTags(keyValueMap);\n        return this;\n    };\n    /**\n     * Add a log record to this Span, optionally at a user-provided timestamp.\n     *\n     * For example:\n     *\n     *     span.log({\n     *         size: rpc.size(),  // numeric value\n     *         URI: rpc.URI(),  // string value\n     *         payload: rpc.payload(),  // Object value\n     *         \"keys can be arbitrary strings\": rpc.foo(),\n     *     });\n     *\n     *     span.log({\n     *         \"error.description\": someError.description(),\n     *     }, someError.timestampMillis());\n     *\n     * @param {object} keyValuePairs\n     *        An object mapping string keys to arbitrary value types. All\n     *        Tracer implementations should support bool, string, and numeric\n     *        value types, and some may also support Object values.\n     * @param {number} timestamp\n     *        An optional parameter specifying the timestamp in milliseconds\n     *        since the Unix epoch. Fractional values are allowed so that\n     *        timestamps with sub-millisecond accuracy can be represented. If\n     *        not specified, the implementation is expected to use its notion\n     *        of the current time of the call.\n     */\n    Span.prototype.log = function (keyValuePairs, timestamp) {\n        this._log(keyValuePairs, timestamp);\n        return this;\n    };\n    /**\n     * DEPRECATED\n     */\n    Span.prototype.logEvent = function (eventName, payload) {\n        return this._log({ event: eventName, payload: payload });\n    };\n    /**\n     * Sets the end timestamp and finalizes Span state.\n     *\n     * With the exception of calls to Span.context() (which are always allowed),\n     * finish() must be the last call made to any span instance, and to do\n     * otherwise leads to undefined behavior.\n     *\n     * @param  {number} finishTime\n     *         Optional finish time in milliseconds as a Unix timestamp. Decimal\n     *         values are supported for timestamps with sub-millisecond accuracy.\n     *         If not specified, the current time (as defined by the\n     *         implementation) will be used.\n     */\n    Span.prototype.finish = function (finishTime) {\n        this._finish(finishTime);\n        // Do not return `this`. The Span generally should not be used after it\n        // is finished so chaining is not desired in this context.\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // By default returns a no-op SpanContext.\n    Span.prototype._context = function () {\n        return noop.spanContext;\n    };\n    // By default returns a no-op tracer.\n    //\n    // The base class could store the tracer that created it, but it does not\n    // in order to ensure the no-op span implementation has zero members,\n    // which allows V8 to aggressively optimize calls to such objects.\n    Span.prototype._tracer = function () {\n        return noop.tracer;\n    };\n    // By default does nothing\n    Span.prototype._setOperationName = function (name) {\n    };\n    // By default does nothing\n    Span.prototype._setBaggageItem = function (key, value) {\n    };\n    // By default does nothing\n    Span.prototype._getBaggageItem = function (key) {\n        return undefined;\n    };\n    // By default does nothing\n    //\n    // NOTE: both setTag() and addTags() map to this function. keyValuePairs\n    // will always be an associative array.\n    Span.prototype._addTags = function (keyValuePairs) {\n    };\n    // By default does nothing\n    Span.prototype._log = function (keyValuePairs, timestamp) {\n    };\n    // By default does nothing\n    //\n    // finishTime is expected to be either a number or undefined.\n    Span.prototype._finish = function (finishTime) {\n    };\n    return Span;\n}());\nexports.Span = Span;\nexports.default = Span;\n//# sourceMappingURL=span.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * SpanContext represents Span state that must propagate to descendant Spans\n * and across process boundaries.\n *\n * SpanContext is logically divided into two pieces: the user-level \"Baggage\"\n * (see setBaggageItem and getBaggageItem) that propagates across Span\n * boundaries and any Tracer-implementation-specific fields that are needed to\n * identify or otherwise contextualize the associated Span instance (e.g., a\n * <trace_id, span_id, sampled> tuple).\n */\nvar SpanContext = /** @class */ (function () {\n    function SpanContext() {\n    }\n    return SpanContext;\n}());\nexports.SpanContext = SpanContext;\nexports.default = SpanContext;\n//# sourceMappingURL=span_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Functions = require(\"./functions\");\nvar Noop = require(\"./noop\");\nvar span_1 = require(\"./span\");\n/**\n * Tracer is the entry-point between the instrumentation API and the tracing\n * implementation.\n *\n * The default object acts as a no-op implementation.\n *\n * Note to implementators: derived classes can choose to directly implement the\n * methods in the \"OpenTracing API methods\" section, or optionally the subset of\n * underscore-prefixed methods to pick up the argument checking and handling\n * automatically from the base class.\n */\nvar Tracer = /** @class */ (function () {\n    function Tracer() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Starts and returns a new Span representing a logical unit of work.\n     *\n     * For example:\n     *\n     *     // Start a new (parentless) root Span:\n     *     var parent = Tracer.startSpan('DoWork');\n     *\n     *     // Start a new (child) Span:\n     *     var child = Tracer.startSpan('load-from-db', {\n     *         childOf: parent.context(),\n     *     });\n     *\n     *     // Start a new async (FollowsFrom) Span:\n     *     var child = Tracer.startSpan('async-cache-write', {\n     *         references: [\n     *             opentracing.followsFrom(parent.context())\n     *         ],\n     *     });\n     *\n     * @param {string} name - the name of the operation (REQUIRED).\n     * @param {SpanOptions} [options] - options for the newly created span.\n     * @return {Span} - a new Span object.\n     */\n    Tracer.prototype.startSpan = function (name, options) {\n        if (options === void 0) { options = {}; }\n        // Convert options.childOf to fields.references as needed.\n        if (options.childOf) {\n            // Convert from a Span or a SpanContext into a Reference.\n            var childOf = Functions.childOf(options.childOf);\n            if (options.references) {\n                options.references.push(childOf);\n            }\n            else {\n                options.references = [childOf];\n            }\n            delete (options.childOf);\n        }\n        return this._startSpan(name, options);\n    };\n    /**\n     * Injects the given SpanContext instance for cross-process propagation\n     * within `carrier`. The expected type of `carrier` depends on the value of\n     * `format.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     var clientSpan = ...;\n     *     ...\n     *     // Inject clientSpan into a text carrier.\n     *     var headersCarrier = {};\n     *     Tracer.inject(clientSpan.context(), Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     // Incorporate the textCarrier into the outbound HTTP request header\n     *     // map.\n     *     Object.assign(outboundHTTPReq.headers, headersCarrier);\n     *     // ... send the httpReq\n     *\n     * @param  {SpanContext} spanContext - the SpanContext to inject into the\n     *         carrier object. As a convenience, a Span instance may be passed\n     *         in instead (in which case its .context() is used for the\n     *         inject()).\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - see the documentation for the chosen `format`\n     *         for a description of the carrier object.\n     */\n    Tracer.prototype.inject = function (spanContext, format, carrier) {\n        // Allow the user to pass a Span instead of a SpanContext\n        if (spanContext instanceof span_1.default) {\n            spanContext = spanContext.context();\n        }\n        return this._inject(spanContext, format, carrier);\n    };\n    /**\n     * Returns a SpanContext instance extracted from `carrier` in the given\n     * `format`.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     // Use the inbound HTTP request's headers as a text map carrier.\n     *     var headersCarrier = inboundHTTPReq.headers;\n     *     var wireCtx = Tracer.extract(Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     var serverSpan = Tracer.startSpan('...', { childOf : wireCtx });\n     *\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - the type of the carrier object is determined by\n     *         the format.\n     * @return {SpanContext}\n     *         The extracted SpanContext, or null if no such SpanContext could\n     *         be found in `carrier`\n     */\n    Tracer.prototype.extract = function (format, carrier) {\n        return this._extract(format, carrier);\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // NOTE: the input to this method is *always* an associative array. The\n    // public-facing startSpan() method normalizes the arguments so that\n    // all N implementations do not need to worry about variations in the call\n    // signature.\n    //\n    // The default behavior returns a no-op span.\n    Tracer.prototype._startSpan = function (name, fields) {\n        return Noop.span;\n    };\n    // The default behavior is a no-op.\n    Tracer.prototype._inject = function (spanContext, format, carrier) {\n    };\n    // The default behavior is to return a no-op SpanContext.\n    Tracer.prototype._extract = function (format, carrier) {\n        return Noop.spanContext;\n    };\n    return Tracer;\n}());\nexports.Tracer = Tracer;\nexports.default = Tracer;\n//# sourceMappingURL=tracer.js.map","// Underscore.js-like wrapper to iterate object key-values. Note that even for completely\n// internal objects, packages may modify default Object prototypes and properties\n// (e.g. Ember.js) so it's almost never safe to assume a particular object can\n// iterated with for-in.\nexport default function _each(obj, cb) {\n    if (!obj) {\n        return;\n    }\n    for (let key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            cb(obj[key], key);\n        }\n    }\n}\n","\nexport const LOG_INFO = 0;\nexport const LOG_WARN = 1;\nexport const LOG_ERROR = 2;\nexport const LOG_FATAL = 3;\n\nexport const LOG_LEVEL_TO_STRING = {\n    LOG_INFO  : 'I',\n    LOG_WARN  : 'W',\n    LOG_ERROR : 'E',\n    LOG_FATAL : 'F',\n};\nexport const LOG_STRING_TO_LEVEL = {\n    I : LOG_INFO,\n    W : LOG_WARN,\n    E : LOG_ERROR,\n    F : LOG_FATAL,\n};\n\n// The report interval for empty reports used to sample the clock skew\nexport const CLOCK_STATE_REFRESH_INTERVAL_MS = 350;\n\nexport const LIGHTSTEP_APP_URL_PREFIX = 'https://app.lightstep.com';\n\nexport const JOIN_ID_PREFIX = 'join:';\n","/* global TRANSPORT_PROTO */\n\nlet croutonThrift = null;\nlet proto  = null;\nif ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n    proto = require('./generated_proto/collector_pb.js'); // eslint-disable-line global-require\n}\nif ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n    croutonThrift = require('../platform_abstraction_layer').crouton_thrift; // eslint-disable-line global-require\n}\n\nexport default class AuthImp {\n    constructor(accessToken) {\n        this._accessToken = accessToken;\n    }\n\n    getAccessToken() {\n        return this._accessToken;\n    }\n\n    toThrift() {\n        if ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n            return new croutonThrift.Auth({\n                access_token : this._accessToken,\n            });\n        }\n    }\n\n    toProto() {\n        if ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n            let authProto = new proto.Auth();\n            authProto.setAccessToken(this._accessToken);\n            return authProto;\n        }\n    }\n}\n","\nexport function toString(value) {\n    return '' + value;  // eslint-disable-line prefer-template\n}\n\nexport function toNumber(value) {\n    return Number(value);\n}\n\nexport function toBoolean(value) {\n    return !!value;\n}\n","import _each from '../_each';\n\nclass PackageGlobals {\n    constructor() {\n        this.options = {};\n    }\n\n    setOptions(opts) {\n        _each(opts, (val, key) => {\n            this.options[key] = val;\n        });\n    }\n}\n\nmodule.exports = new PackageGlobals();\n","import LogRecordImp from './log_record_imp';\n\nconst constants = require('../constants');\nconst coerce    = require('./coerce');\n\n// Facade on the thrift log data structure to make constructing log records more\n// convenient.\nclass LogBuilder {\n\n    constructor(runtime) {\n        this._runtime = runtime;\n        this._record = new LogRecordImp();\n        this._record.timestamp_micros = runtime._platform.nowMicros();\n    }\n\n    record() {\n        return this._record;\n    }\n\n    end() {\n        this._runtime._addLogRecord(this._record);\n    }\n\n    timestamp(micros) {\n        this._record.timestamp_micros = coerce.toNumber(micros);\n        return this;\n    }\n\n    message(msg) {\n        this._record.message = coerce.toString(msg);\n        return this;\n    }\n\n    level(num) {\n        this._record.level = constants.LOG_LEVEL_TO_STRING[num] || null;\n        if (num >= constants.LOG_ERROR) {\n            this.error(true);\n        }\n        return this;\n    }\n\n    span(guid) {\n        if (guid !== undefined) {\n            this._record.span_guid = coerce.toString(guid);\n        }\n        return this;\n    }\n\n    name(stableName) {\n        this._record.stable_name = coerce.toString(stableName);\n        return this;\n    }\n\n    error(flag) {\n        this._record.error_flag = coerce.toBoolean(flag);\n        return this;\n    }\n\n    payload(data) {\n        if (data !== undefined) {\n            this._record.payload_json = this._encodePayload(data);\n        }\n        return this;\n    }\n\n    _encodePayload(data) {\n        let payloadJSON = null;\n        try {\n            payloadJSON = JSON.stringify(data);\n        } catch (_ignored) {\n            // TODO: this should log an internal warning that a payload could\n            // not be encoded as JSON.\n            return undefined;\n        }\n        return payloadJSON;\n    }\n}\n\nmodule.exports = LogBuilder;\n","/* global TRANSPORT_PROTO */\n\nimport _each from '../_each';\nimport * as coerce from './coerce';\n\nlet croutonThrift = null;\nlet googleProtobufTimestampPB = null;\nlet proto = null;\nif ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n    googleProtobufTimestampPB =\n        require('google-protobuf/google/protobuf/timestamp_pb.js'); // eslint-disable-line global-require\n    proto = require('./generated_proto/collector_pb.js'); // eslint-disable-line global-require\n}\nif ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n    croutonThrift = require('../platform_abstraction_layer').crouton_thrift; // eslint-disable-line global-require\n}\n\nexport default class LogRecordImp {\n    constructor(logFieldKeyHardLimit, logFieldValueHardLimit, timestampMicros, fields) {\n        this._logFieldKeyHardLimit = logFieldKeyHardLimit;\n        this._logFieldValueHardLimit = logFieldValueHardLimit;\n        this._timestampMicros = timestampMicros;\n        this._fields = fields;\n        this._keysOverLimit = 0;\n        this._valuesOverLimit = 0;\n    }\n\n    _clearOverLimits() {\n        this._keysOverLimit = 0;\n        this._valuesOverLimit = 0;\n    }\n\n    getNumKeysOverLimit() {\n        return this._keysOverLimit;\n    }\n\n    getNumValuesOverLimit() {\n        return this._valuesOverLimit;\n    }\n\n    toThrift() {\n        if ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n            this._clearOverLimits();\n            let thriftFields = [];\n            _each(this._fields, (value, key) => {\n                if (!key || !value) {\n                    return;\n                }\n                let keyStr = this.getFieldKey(key);\n                let valStr = this.getFieldValue(value);\n                thriftFields.push(new croutonThrift.KeyValue({\n                    Key   : keyStr,\n                    Value : valStr,\n                }));\n            });\n\n            return new croutonThrift.LogRecord({\n                timestamp_micros : this._timestampMicros,\n                fields           : thriftFields,\n            });\n        }\n    }\n\n    getFieldKey(key) {\n        let keyStr = coerce.toString(key);\n        if (keyStr.length > this._logFieldKeyHardLimit) {\n            this._keysOverLimit += 1;\n            keyStr = `${keyStr.substr(0, this._logFieldKeyHardLimit)}...`;\n        }\n        return keyStr;\n    }\n\n    getFieldValue(value) {\n        let valStr = null;\n        if (value instanceof Object) {\n            try {\n                valStr = JSON.stringify(value, null, '  ');\n            } catch (e) {\n                valStr = `Could not encode value. Exception: ${e}`;\n            }\n        } else {\n            valStr = coerce.toString(value);\n        }\n        if (valStr.length > this._logFieldValueHardLimit) {\n            this._valuesOverLimit += 1;\n            valStr = `${valStr.substr(0, this._logFieldValueHardLimit)}...`;\n        }\n        return valStr;\n    }\n\n    toProto() {\n        if ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n            this._clearOverLimits();\n            let log = new proto.Log();\n            let ts = new googleProtobufTimestampPB.Timestamp();\n            let millis = Math.floor(this._timestampMicros / 1000);\n            let secs = Math.floor(millis / 1000);\n            let nanos = (millis % 1000) * 1000000;\n            ts.setSeconds(secs);\n            ts.setNanos(nanos);\n            log.setTimestamp(ts);\n            let keyValues = [];\n            _each(this._fields, (value, key) => {\n                if (!key || !value) {\n                    return;\n                }\n                let keyStr = this.getFieldKey(key);\n                let valStr = this.getFieldValue(value);\n\n                let keyValue = new proto.KeyValue();\n                keyValue.setKey(keyStr);\n                keyValue.setStringValue(valStr);\n                keyValues.push(keyValue);\n            });\n\n            log.setFieldsList(keyValues);\n\n            return log;\n        }\n    }\n}\n","module.exports = require('./generated/thrift_all.js').crouton_thrift;\n","//\n// GENERATED FILE - DO NOT EDIT DIRECTLY\n//\n// See scripts/build_browser_thrift_lib.js\n//\n//\n(function() {\nvar Thrift = {};\nvar crouton_thrift = {};\n//\n// Autogenerated by Thrift Compiler (0.9.2)\n//\n// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n//\n\n\nif (typeof crouton_thrift === 'undefined') {\n  crouton_thrift = {};\n}\ncrouton_thrift.KeyValue = function(args) {\n  this.Key = null;\n  this.Value = null;\n  if (args) {\n    if (args.Key !== undefined) {\n      this.Key = args.Key;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Key is unset!');\n    }\n    if (args.Value !== undefined) {\n      this.Value = args.Value;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Value is unset!');\n    }\n  }\n};\ncrouton_thrift.KeyValue.prototype = {};\ncrouton_thrift.KeyValue.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.Key = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.Value = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.KeyValue.prototype.write = false && function(output) {\n  output.writeStructBegin('KeyValue');\n  if (this.Key !== null && this.Key !== undefined) {\n    output.writeFieldBegin('Key', Thrift.Type.STRING, 1);\n    output.writeString(this.Key);\n    output.writeFieldEnd();\n  }\n  if (this.Value !== null && this.Value !== undefined) {\n    output.writeFieldBegin('Value', Thrift.Type.STRING, 2);\n    output.writeString(this.Value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.NamedCounter = function(args) {\n  this.Name = null;\n  this.Value = null;\n  if (args) {\n    if (args.Name !== undefined) {\n      this.Name = args.Name;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Name is unset!');\n    }\n    if (args.Value !== undefined) {\n      this.Value = args.Value;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Value is unset!');\n    }\n  }\n};\ncrouton_thrift.NamedCounter.prototype = {};\ncrouton_thrift.NamedCounter.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.Name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.Value = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.NamedCounter.prototype.write = false && function(output) {\n  output.writeStructBegin('NamedCounter');\n  if (this.Name !== null && this.Name !== undefined) {\n    output.writeFieldBegin('Name', Thrift.Type.STRING, 1);\n    output.writeString(this.Name);\n    output.writeFieldEnd();\n  }\n  if (this.Value !== null && this.Value !== undefined) {\n    output.writeFieldBegin('Value', Thrift.Type.I64, 2);\n    output.writeI64(this.Value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Runtime = function(args) {\n  this.guid = null;\n  this.start_micros = null;\n  this.group_name = null;\n  this.attrs = null;\n  if (args) {\n    if (args.guid !== undefined) {\n      this.guid = args.guid;\n    }\n    if (args.start_micros !== undefined) {\n      this.start_micros = args.start_micros;\n    }\n    if (args.group_name !== undefined) {\n      this.group_name = args.group_name;\n    }\n    if (args.attrs !== undefined) {\n      this.attrs = args.attrs;\n    }\n  }\n};\ncrouton_thrift.Runtime.prototype = {};\ncrouton_thrift.Runtime.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.start_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.group_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size0 = 0;\n        var _rtmp34;\n        this.attrs = [];\n        var _etype3 = 0;\n        _rtmp34 = input.readListBegin();\n        _etype3 = _rtmp34.etype;\n        _size0 = _rtmp34.size;\n        for (var _i5 = 0; _i5 < _size0; ++_i5)\n        {\n          var elem6 = null;\n          elem6 = new crouton_thrift.KeyValue();\n          elem6.read(input);\n          this.attrs.push(elem6);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Runtime.prototype.write = false && function(output) {\n  output.writeStructBegin('Runtime');\n  if (this.guid !== null && this.guid !== undefined) {\n    output.writeFieldBegin('guid', Thrift.Type.STRING, 1);\n    output.writeString(this.guid);\n    output.writeFieldEnd();\n  }\n  if (this.start_micros !== null && this.start_micros !== undefined) {\n    output.writeFieldBegin('start_micros', Thrift.Type.I64, 2);\n    output.writeI64(this.start_micros);\n    output.writeFieldEnd();\n  }\n  if (this.group_name !== null && this.group_name !== undefined) {\n    output.writeFieldBegin('group_name', Thrift.Type.STRING, 3);\n    output.writeString(this.group_name);\n    output.writeFieldEnd();\n  }\n  if (this.attrs !== null && this.attrs !== undefined) {\n    output.writeFieldBegin('attrs', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.attrs.length);\n    for (var iter7 in this.attrs)\n    {\n      if (this.attrs.hasOwnProperty(iter7))\n      {\n        iter7 = this.attrs[iter7];\n        iter7.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.LogRecord = function(args) {\n  this.timestamp_micros = null;\n  this.fields = null;\n  this.runtime_guid = null;\n  this.span_guid = null;\n  this.stable_name = null;\n  this.message = null;\n  this.level = null;\n  this.thread_id = null;\n  this.filename = null;\n  this.line_number = null;\n  this.stack_frames = null;\n  this.payload_json = null;\n  this.error_flag = null;\n  if (args) {\n    if (args.timestamp_micros !== undefined) {\n      this.timestamp_micros = args.timestamp_micros;\n    }\n    if (args.fields !== undefined) {\n      this.fields = args.fields;\n    }\n    if (args.runtime_guid !== undefined) {\n      this.runtime_guid = args.runtime_guid;\n    }\n    if (args.span_guid !== undefined) {\n      this.span_guid = args.span_guid;\n    }\n    if (args.stable_name !== undefined) {\n      this.stable_name = args.stable_name;\n    }\n    if (args.message !== undefined) {\n      this.message = args.message;\n    }\n    if (args.level !== undefined) {\n      this.level = args.level;\n    }\n    if (args.thread_id !== undefined) {\n      this.thread_id = args.thread_id;\n    }\n    if (args.filename !== undefined) {\n      this.filename = args.filename;\n    }\n    if (args.line_number !== undefined) {\n      this.line_number = args.line_number;\n    }\n    if (args.stack_frames !== undefined) {\n      this.stack_frames = args.stack_frames;\n    }\n    if (args.payload_json !== undefined) {\n      this.payload_json = args.payload_json;\n    }\n    if (args.error_flag !== undefined) {\n      this.error_flag = args.error_flag;\n    }\n  }\n};\ncrouton_thrift.LogRecord.prototype = {};\ncrouton_thrift.LogRecord.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.timestamp_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 13:\n      if (ftype == Thrift.Type.LIST) {\n        var _size8 = 0;\n        var _rtmp312;\n        this.fields = [];\n        var _etype11 = 0;\n        _rtmp312 = input.readListBegin();\n        _etype11 = _rtmp312.etype;\n        _size8 = _rtmp312.size;\n        for (var _i13 = 0; _i13 < _size8; ++_i13)\n        {\n          var elem14 = null;\n          elem14 = new crouton_thrift.KeyValue();\n          elem14.read(input);\n          this.fields.push(elem14);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.runtime_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.span_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.stable_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRING) {\n        this.message = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.STRING) {\n        this.level = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.I64) {\n        this.thread_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.STRING) {\n        this.filename = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.I64) {\n        this.line_number = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.LIST) {\n        var _size15 = 0;\n        var _rtmp319;\n        this.stack_frames = [];\n        var _etype18 = 0;\n        _rtmp319 = input.readListBegin();\n        _etype18 = _rtmp319.etype;\n        _size15 = _rtmp319.size;\n        for (var _i20 = 0; _i20 < _size15; ++_i20)\n        {\n          var elem21 = null;\n          elem21 = input.readString().value;\n          this.stack_frames.push(elem21);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 11:\n      if (ftype == Thrift.Type.STRING) {\n        this.payload_json = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 12:\n      if (ftype == Thrift.Type.BOOL) {\n        this.error_flag = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.LogRecord.prototype.write = false && function(output) {\n  output.writeStructBegin('LogRecord');\n  if (this.timestamp_micros !== null && this.timestamp_micros !== undefined) {\n    output.writeFieldBegin('timestamp_micros', Thrift.Type.I64, 1);\n    output.writeI64(this.timestamp_micros);\n    output.writeFieldEnd();\n  }\n  if (this.fields !== null && this.fields !== undefined) {\n    output.writeFieldBegin('fields', Thrift.Type.LIST, 13);\n    output.writeListBegin(Thrift.Type.STRUCT, this.fields.length);\n    for (var iter22 in this.fields)\n    {\n      if (this.fields.hasOwnProperty(iter22))\n      {\n        iter22 = this.fields[iter22];\n        iter22.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.runtime_guid !== null && this.runtime_guid !== undefined) {\n    output.writeFieldBegin('runtime_guid', Thrift.Type.STRING, 2);\n    output.writeString(this.runtime_guid);\n    output.writeFieldEnd();\n  }\n  if (this.span_guid !== null && this.span_guid !== undefined) {\n    output.writeFieldBegin('span_guid', Thrift.Type.STRING, 3);\n    output.writeString(this.span_guid);\n    output.writeFieldEnd();\n  }\n  if (this.stable_name !== null && this.stable_name !== undefined) {\n    output.writeFieldBegin('stable_name', Thrift.Type.STRING, 4);\n    output.writeString(this.stable_name);\n    output.writeFieldEnd();\n  }\n  if (this.message !== null && this.message !== undefined) {\n    output.writeFieldBegin('message', Thrift.Type.STRING, 5);\n    output.writeString(this.message);\n    output.writeFieldEnd();\n  }\n  if (this.level !== null && this.level !== undefined) {\n    output.writeFieldBegin('level', Thrift.Type.STRING, 6);\n    output.writeString(this.level);\n    output.writeFieldEnd();\n  }\n  if (this.thread_id !== null && this.thread_id !== undefined) {\n    output.writeFieldBegin('thread_id', Thrift.Type.I64, 7);\n    output.writeI64(this.thread_id);\n    output.writeFieldEnd();\n  }\n  if (this.filename !== null && this.filename !== undefined) {\n    output.writeFieldBegin('filename', Thrift.Type.STRING, 8);\n    output.writeString(this.filename);\n    output.writeFieldEnd();\n  }\n  if (this.line_number !== null && this.line_number !== undefined) {\n    output.writeFieldBegin('line_number', Thrift.Type.I64, 9);\n    output.writeI64(this.line_number);\n    output.writeFieldEnd();\n  }\n  if (this.stack_frames !== null && this.stack_frames !== undefined) {\n    output.writeFieldBegin('stack_frames', Thrift.Type.LIST, 10);\n    output.writeListBegin(Thrift.Type.STRING, this.stack_frames.length);\n    for (var iter23 in this.stack_frames)\n    {\n      if (this.stack_frames.hasOwnProperty(iter23))\n      {\n        iter23 = this.stack_frames[iter23];\n        output.writeString(iter23);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.payload_json !== null && this.payload_json !== undefined) {\n    output.writeFieldBegin('payload_json', Thrift.Type.STRING, 11);\n    output.writeString(this.payload_json);\n    output.writeFieldEnd();\n  }\n  if (this.error_flag !== null && this.error_flag !== undefined) {\n    output.writeFieldBegin('error_flag', Thrift.Type.BOOL, 12);\n    output.writeBool(this.error_flag);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.TraceJoinId = function(args) {\n  this.TraceKey = null;\n  this.Value = null;\n  if (args) {\n    if (args.TraceKey !== undefined) {\n      this.TraceKey = args.TraceKey;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field TraceKey is unset!');\n    }\n    if (args.Value !== undefined) {\n      this.Value = args.Value;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Value is unset!');\n    }\n  }\n};\ncrouton_thrift.TraceJoinId.prototype = {};\ncrouton_thrift.TraceJoinId.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.TraceKey = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.Value = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.TraceJoinId.prototype.write = false && function(output) {\n  output.writeStructBegin('TraceJoinId');\n  if (this.TraceKey !== null && this.TraceKey !== undefined) {\n    output.writeFieldBegin('TraceKey', Thrift.Type.STRING, 1);\n    output.writeString(this.TraceKey);\n    output.writeFieldEnd();\n  }\n  if (this.Value !== null && this.Value !== undefined) {\n    output.writeFieldBegin('Value', Thrift.Type.STRING, 2);\n    output.writeString(this.Value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.SpanRecord = function(args) {\n  this.span_guid = null;\n  this.trace_guid = null;\n  this.runtime_guid = null;\n  this.span_name = null;\n  this.join_ids = null;\n  this.oldest_micros = null;\n  this.youngest_micros = null;\n  this.attributes = null;\n  this.error_flag = null;\n  this.log_records = null;\n  if (args) {\n    if (args.span_guid !== undefined) {\n      this.span_guid = args.span_guid;\n    }\n    if (args.trace_guid !== undefined) {\n      this.trace_guid = args.trace_guid;\n    }\n    if (args.runtime_guid !== undefined) {\n      this.runtime_guid = args.runtime_guid;\n    }\n    if (args.span_name !== undefined) {\n      this.span_name = args.span_name;\n    }\n    if (args.join_ids !== undefined) {\n      this.join_ids = args.join_ids;\n    }\n    if (args.oldest_micros !== undefined) {\n      this.oldest_micros = args.oldest_micros;\n    }\n    if (args.youngest_micros !== undefined) {\n      this.youngest_micros = args.youngest_micros;\n    }\n    if (args.attributes !== undefined) {\n      this.attributes = args.attributes;\n    }\n    if (args.error_flag !== undefined) {\n      this.error_flag = args.error_flag;\n    }\n    if (args.log_records !== undefined) {\n      this.log_records = args.log_records;\n    }\n  }\n};\ncrouton_thrift.SpanRecord.prototype = {};\ncrouton_thrift.SpanRecord.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.span_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 11:\n      if (ftype == Thrift.Type.STRING) {\n        this.trace_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.runtime_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.span_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size24 = 0;\n        var _rtmp328;\n        this.join_ids = [];\n        var _etype27 = 0;\n        _rtmp328 = input.readListBegin();\n        _etype27 = _rtmp328.etype;\n        _size24 = _rtmp328.size;\n        for (var _i29 = 0; _i29 < _size24; ++_i29)\n        {\n          var elem30 = null;\n          elem30 = new crouton_thrift.TraceJoinId();\n          elem30.read(input);\n          this.join_ids.push(elem30);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I64) {\n        this.oldest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.I64) {\n        this.youngest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.LIST) {\n        var _size31 = 0;\n        var _rtmp335;\n        this.attributes = [];\n        var _etype34 = 0;\n        _rtmp335 = input.readListBegin();\n        _etype34 = _rtmp335.etype;\n        _size31 = _rtmp335.size;\n        for (var _i36 = 0; _i36 < _size31; ++_i36)\n        {\n          var elem37 = null;\n          elem37 = new crouton_thrift.KeyValue();\n          elem37.read(input);\n          this.attributes.push(elem37);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.BOOL) {\n        this.error_flag = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.LIST) {\n        var _size38 = 0;\n        var _rtmp342;\n        this.log_records = [];\n        var _etype41 = 0;\n        _rtmp342 = input.readListBegin();\n        _etype41 = _rtmp342.etype;\n        _size38 = _rtmp342.size;\n        for (var _i43 = 0; _i43 < _size38; ++_i43)\n        {\n          var elem44 = null;\n          elem44 = new crouton_thrift.LogRecord();\n          elem44.read(input);\n          this.log_records.push(elem44);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.SpanRecord.prototype.write = false && function(output) {\n  output.writeStructBegin('SpanRecord');\n  if (this.span_guid !== null && this.span_guid !== undefined) {\n    output.writeFieldBegin('span_guid', Thrift.Type.STRING, 1);\n    output.writeString(this.span_guid);\n    output.writeFieldEnd();\n  }\n  if (this.trace_guid !== null && this.trace_guid !== undefined) {\n    output.writeFieldBegin('trace_guid', Thrift.Type.STRING, 11);\n    output.writeString(this.trace_guid);\n    output.writeFieldEnd();\n  }\n  if (this.runtime_guid !== null && this.runtime_guid !== undefined) {\n    output.writeFieldBegin('runtime_guid', Thrift.Type.STRING, 2);\n    output.writeString(this.runtime_guid);\n    output.writeFieldEnd();\n  }\n  if (this.span_name !== null && this.span_name !== undefined) {\n    output.writeFieldBegin('span_name', Thrift.Type.STRING, 3);\n    output.writeString(this.span_name);\n    output.writeFieldEnd();\n  }\n  if (this.join_ids !== null && this.join_ids !== undefined) {\n    output.writeFieldBegin('join_ids', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.join_ids.length);\n    for (var iter45 in this.join_ids)\n    {\n      if (this.join_ids.hasOwnProperty(iter45))\n      {\n        iter45 = this.join_ids[iter45];\n        iter45.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.oldest_micros !== null && this.oldest_micros !== undefined) {\n    output.writeFieldBegin('oldest_micros', Thrift.Type.I64, 5);\n    output.writeI64(this.oldest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.youngest_micros !== null && this.youngest_micros !== undefined) {\n    output.writeFieldBegin('youngest_micros', Thrift.Type.I64, 6);\n    output.writeI64(this.youngest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.attributes !== null && this.attributes !== undefined) {\n    output.writeFieldBegin('attributes', Thrift.Type.LIST, 8);\n    output.writeListBegin(Thrift.Type.STRUCT, this.attributes.length);\n    for (var iter46 in this.attributes)\n    {\n      if (this.attributes.hasOwnProperty(iter46))\n      {\n        iter46 = this.attributes[iter46];\n        iter46.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.error_flag !== null && this.error_flag !== undefined) {\n    output.writeFieldBegin('error_flag', Thrift.Type.BOOL, 9);\n    output.writeBool(this.error_flag);\n    output.writeFieldEnd();\n  }\n  if (this.log_records !== null && this.log_records !== undefined) {\n    output.writeFieldBegin('log_records', Thrift.Type.LIST, 10);\n    output.writeListBegin(Thrift.Type.STRUCT, this.log_records.length);\n    for (var iter47 in this.log_records)\n    {\n      if (this.log_records.hasOwnProperty(iter47))\n      {\n        iter47 = this.log_records[iter47];\n        iter47.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Auth = function(args) {\n  this.access_token = null;\n  if (args) {\n    if (args.access_token !== undefined) {\n      this.access_token = args.access_token;\n    }\n  }\n};\ncrouton_thrift.Auth.prototype = {};\ncrouton_thrift.Auth.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.access_token = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Auth.prototype.write = false && function(output) {\n  output.writeStructBegin('Auth');\n  if (this.access_token !== null && this.access_token !== undefined) {\n    output.writeFieldBegin('access_token', Thrift.Type.STRING, 1);\n    output.writeString(this.access_token);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Timing = function(args) {\n  this.receive_micros = null;\n  this.transmit_micros = null;\n  if (args) {\n    if (args.receive_micros !== undefined) {\n      this.receive_micros = args.receive_micros;\n    }\n    if (args.transmit_micros !== undefined) {\n      this.transmit_micros = args.transmit_micros;\n    }\n  }\n};\ncrouton_thrift.Timing.prototype = {};\ncrouton_thrift.Timing.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.receive_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.transmit_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Timing.prototype.write = false && function(output) {\n  output.writeStructBegin('Timing');\n  if (this.receive_micros !== null && this.receive_micros !== undefined) {\n    output.writeFieldBegin('receive_micros', Thrift.Type.I64, 1);\n    output.writeI64(this.receive_micros);\n    output.writeFieldEnd();\n  }\n  if (this.transmit_micros !== null && this.transmit_micros !== undefined) {\n    output.writeFieldBegin('transmit_micros', Thrift.Type.I64, 2);\n    output.writeI64(this.transmit_micros);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.SampleCount = function(args) {\n  this.oldest_micros = null;\n  this.youngest_micros = null;\n  this.count = null;\n  if (args) {\n    if (args.oldest_micros !== undefined) {\n      this.oldest_micros = args.oldest_micros;\n    }\n    if (args.youngest_micros !== undefined) {\n      this.youngest_micros = args.youngest_micros;\n    }\n    if (args.count !== undefined) {\n      this.count = args.count;\n    }\n  }\n};\ncrouton_thrift.SampleCount.prototype = {};\ncrouton_thrift.SampleCount.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.oldest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.youngest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.count = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.SampleCount.prototype.write = false && function(output) {\n  output.writeStructBegin('SampleCount');\n  if (this.oldest_micros !== null && this.oldest_micros !== undefined) {\n    output.writeFieldBegin('oldest_micros', Thrift.Type.I64, 1);\n    output.writeI64(this.oldest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.youngest_micros !== null && this.youngest_micros !== undefined) {\n    output.writeFieldBegin('youngest_micros', Thrift.Type.I64, 2);\n    output.writeI64(this.youngest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.count !== null && this.count !== undefined) {\n    output.writeFieldBegin('count', Thrift.Type.I64, 3);\n    output.writeI64(this.count);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.MetricsSample = function(args) {\n  this.name = null;\n  this.int64_value = null;\n  this.double_value = null;\n  if (args) {\n    if (args.name !== undefined) {\n      this.name = args.name;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field name is unset!');\n    }\n    if (args.int64_value !== undefined) {\n      this.int64_value = args.int64_value;\n    }\n    if (args.double_value !== undefined) {\n      this.double_value = args.double_value;\n    }\n  }\n};\ncrouton_thrift.MetricsSample.prototype = {};\ncrouton_thrift.MetricsSample.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.int64_value = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.DOUBLE) {\n        this.double_value = input.readDouble().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.MetricsSample.prototype.write = false && function(output) {\n  output.writeStructBegin('MetricsSample');\n  if (this.name !== null && this.name !== undefined) {\n    output.writeFieldBegin('name', Thrift.Type.STRING, 1);\n    output.writeString(this.name);\n    output.writeFieldEnd();\n  }\n  if (this.int64_value !== null && this.int64_value !== undefined) {\n    output.writeFieldBegin('int64_value', Thrift.Type.I64, 2);\n    output.writeI64(this.int64_value);\n    output.writeFieldEnd();\n  }\n  if (this.double_value !== null && this.double_value !== undefined) {\n    output.writeFieldBegin('double_value', Thrift.Type.DOUBLE, 3);\n    output.writeDouble(this.double_value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Metrics = function(args) {\n  this.counts = null;\n  this.gauges = null;\n  if (args) {\n    if (args.counts !== undefined) {\n      this.counts = args.counts;\n    }\n    if (args.gauges !== undefined) {\n      this.gauges = args.gauges;\n    }\n  }\n};\ncrouton_thrift.Metrics.prototype = {};\ncrouton_thrift.Metrics.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size48 = 0;\n        var _rtmp352;\n        this.counts = [];\n        var _etype51 = 0;\n        _rtmp352 = input.readListBegin();\n        _etype51 = _rtmp352.etype;\n        _size48 = _rtmp352.size;\n        for (var _i53 = 0; _i53 < _size48; ++_i53)\n        {\n          var elem54 = null;\n          elem54 = new crouton_thrift.MetricsSample();\n          elem54.read(input);\n          this.counts.push(elem54);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.LIST) {\n        var _size55 = 0;\n        var _rtmp359;\n        this.gauges = [];\n        var _etype58 = 0;\n        _rtmp359 = input.readListBegin();\n        _etype58 = _rtmp359.etype;\n        _size55 = _rtmp359.size;\n        for (var _i60 = 0; _i60 < _size55; ++_i60)\n        {\n          var elem61 = null;\n          elem61 = new crouton_thrift.MetricsSample();\n          elem61.read(input);\n          this.gauges.push(elem61);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Metrics.prototype.write = false && function(output) {\n  output.writeStructBegin('Metrics');\n  if (this.counts !== null && this.counts !== undefined) {\n    output.writeFieldBegin('counts', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.counts.length);\n    for (var iter62 in this.counts)\n    {\n      if (this.counts.hasOwnProperty(iter62))\n      {\n        iter62 = this.counts[iter62];\n        iter62.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.gauges !== null && this.gauges !== undefined) {\n    output.writeFieldBegin('gauges', Thrift.Type.LIST, 2);\n    output.writeListBegin(Thrift.Type.STRUCT, this.gauges.length);\n    for (var iter63 in this.gauges)\n    {\n      if (this.gauges.hasOwnProperty(iter63))\n      {\n        iter63 = this.gauges[iter63];\n        iter63.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportRequest = function(args) {\n  this.runtime = null;\n  this.span_records = null;\n  this.log_records = null;\n  this.timestamp_offset_micros = null;\n  this.oldest_micros = null;\n  this.youngest_micros = null;\n  this.counters = null;\n  this.internal_logs = null;\n  this.internal_metrics = null;\n  if (args) {\n    if (args.runtime !== undefined) {\n      this.runtime = args.runtime;\n    }\n    if (args.span_records !== undefined) {\n      this.span_records = args.span_records;\n    }\n    if (args.log_records !== undefined) {\n      this.log_records = args.log_records;\n    }\n    if (args.timestamp_offset_micros !== undefined) {\n      this.timestamp_offset_micros = args.timestamp_offset_micros;\n    }\n    if (args.oldest_micros !== undefined) {\n      this.oldest_micros = args.oldest_micros;\n    }\n    if (args.youngest_micros !== undefined) {\n      this.youngest_micros = args.youngest_micros;\n    }\n    if (args.counters !== undefined) {\n      this.counters = args.counters;\n    }\n    if (args.internal_logs !== undefined) {\n      this.internal_logs = args.internal_logs;\n    }\n    if (args.internal_metrics !== undefined) {\n      this.internal_metrics = args.internal_metrics;\n    }\n  }\n};\ncrouton_thrift.ReportRequest.prototype = {};\ncrouton_thrift.ReportRequest.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.runtime = new crouton_thrift.Runtime();\n        this.runtime.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size64 = 0;\n        var _rtmp368;\n        this.span_records = [];\n        var _etype67 = 0;\n        _rtmp368 = input.readListBegin();\n        _etype67 = _rtmp368.etype;\n        _size64 = _rtmp368.size;\n        for (var _i69 = 0; _i69 < _size64; ++_i69)\n        {\n          var elem70 = null;\n          elem70 = new crouton_thrift.SpanRecord();\n          elem70.read(input);\n          this.span_records.push(elem70);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size71 = 0;\n        var _rtmp375;\n        this.log_records = [];\n        var _etype74 = 0;\n        _rtmp375 = input.readListBegin();\n        _etype74 = _rtmp375.etype;\n        _size71 = _rtmp375.size;\n        for (var _i76 = 0; _i76 < _size71; ++_i76)\n        {\n          var elem77 = null;\n          elem77 = new crouton_thrift.LogRecord();\n          elem77.read(input);\n          this.log_records.push(elem77);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I64) {\n        this.timestamp_offset_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.I64) {\n        this.oldest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.I64) {\n        this.youngest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.LIST) {\n        var _size78 = 0;\n        var _rtmp382;\n        this.counters = [];\n        var _etype81 = 0;\n        _rtmp382 = input.readListBegin();\n        _etype81 = _rtmp382.etype;\n        _size78 = _rtmp382.size;\n        for (var _i83 = 0; _i83 < _size78; ++_i83)\n        {\n          var elem84 = null;\n          elem84 = new crouton_thrift.NamedCounter();\n          elem84.read(input);\n          this.counters.push(elem84);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.LIST) {\n        var _size85 = 0;\n        var _rtmp389;\n        this.internal_logs = [];\n        var _etype88 = 0;\n        _rtmp389 = input.readListBegin();\n        _etype88 = _rtmp389.etype;\n        _size85 = _rtmp389.size;\n        for (var _i90 = 0; _i90 < _size85; ++_i90)\n        {\n          var elem91 = null;\n          elem91 = new crouton_thrift.LogRecord();\n          elem91.read(input);\n          this.internal_logs.push(elem91);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 11:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.internal_metrics = new crouton_thrift.Metrics();\n        this.internal_metrics.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportRequest.prototype.write = false && function(output) {\n  output.writeStructBegin('ReportRequest');\n  if (this.runtime !== null && this.runtime !== undefined) {\n    output.writeFieldBegin('runtime', Thrift.Type.STRUCT, 1);\n    this.runtime.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.span_records !== null && this.span_records !== undefined) {\n    output.writeFieldBegin('span_records', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRUCT, this.span_records.length);\n    for (var iter92 in this.span_records)\n    {\n      if (this.span_records.hasOwnProperty(iter92))\n      {\n        iter92 = this.span_records[iter92];\n        iter92.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.log_records !== null && this.log_records !== undefined) {\n    output.writeFieldBegin('log_records', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.log_records.length);\n    for (var iter93 in this.log_records)\n    {\n      if (this.log_records.hasOwnProperty(iter93))\n      {\n        iter93 = this.log_records[iter93];\n        iter93.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.timestamp_offset_micros !== null && this.timestamp_offset_micros !== undefined) {\n    output.writeFieldBegin('timestamp_offset_micros', Thrift.Type.I64, 5);\n    output.writeI64(this.timestamp_offset_micros);\n    output.writeFieldEnd();\n  }\n  if (this.oldest_micros !== null && this.oldest_micros !== undefined) {\n    output.writeFieldBegin('oldest_micros', Thrift.Type.I64, 7);\n    output.writeI64(this.oldest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.youngest_micros !== null && this.youngest_micros !== undefined) {\n    output.writeFieldBegin('youngest_micros', Thrift.Type.I64, 8);\n    output.writeI64(this.youngest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.counters !== null && this.counters !== undefined) {\n    output.writeFieldBegin('counters', Thrift.Type.LIST, 9);\n    output.writeListBegin(Thrift.Type.STRUCT, this.counters.length);\n    for (var iter94 in this.counters)\n    {\n      if (this.counters.hasOwnProperty(iter94))\n      {\n        iter94 = this.counters[iter94];\n        iter94.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.internal_logs !== null && this.internal_logs !== undefined) {\n    output.writeFieldBegin('internal_logs', Thrift.Type.LIST, 10);\n    output.writeListBegin(Thrift.Type.STRUCT, this.internal_logs.length);\n    for (var iter95 in this.internal_logs)\n    {\n      if (this.internal_logs.hasOwnProperty(iter95))\n      {\n        iter95 = this.internal_logs[iter95];\n        iter95.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.internal_metrics !== null && this.internal_metrics !== undefined) {\n    output.writeFieldBegin('internal_metrics', Thrift.Type.STRUCT, 11);\n    this.internal_metrics.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Command = function(args) {\n  this.disable = null;\n  if (args) {\n    if (args.disable !== undefined) {\n      this.disable = args.disable;\n    }\n  }\n};\ncrouton_thrift.Command.prototype = {};\ncrouton_thrift.Command.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.BOOL) {\n        this.disable = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Command.prototype.write = false && function(output) {\n  output.writeStructBegin('Command');\n  if (this.disable !== null && this.disable !== undefined) {\n    output.writeFieldBegin('disable', Thrift.Type.BOOL, 1);\n    output.writeBool(this.disable);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportResponse = function(args) {\n  this.commands = null;\n  this.timing = null;\n  if (args) {\n    if (args.commands !== undefined) {\n      this.commands = args.commands;\n    }\n    if (args.timing !== undefined) {\n      this.timing = args.timing;\n    }\n  }\n};\ncrouton_thrift.ReportResponse.prototype = {};\ncrouton_thrift.ReportResponse.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size96 = 0;\n        var _rtmp3100;\n        this.commands = [];\n        var _etype99 = 0;\n        _rtmp3100 = input.readListBegin();\n        _etype99 = _rtmp3100.etype;\n        _size96 = _rtmp3100.size;\n        for (var _i101 = 0; _i101 < _size96; ++_i101)\n        {\n          var elem102 = null;\n          elem102 = new crouton_thrift.Command();\n          elem102.read(input);\n          this.commands.push(elem102);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.timing = new crouton_thrift.Timing();\n        this.timing.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportResponse.prototype.write = false && function(output) {\n  output.writeStructBegin('ReportResponse');\n  if (this.commands !== null && this.commands !== undefined) {\n    output.writeFieldBegin('commands', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.commands.length);\n    for (var iter103 in this.commands)\n    {\n      if (this.commands.hasOwnProperty(iter103))\n      {\n        iter103 = this.commands[iter103];\n        iter103.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.timing !== null && this.timing !== undefined) {\n    output.writeFieldBegin('timing', Thrift.Type.STRUCT, 2);\n    this.timing.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\n\nmodule.exports.crouton_thrift = crouton_thrift;\nmodule.exports.Thrift = {}\n})();","// Find the HTML element that included the tracing library (if there is one).\n// This relies on the fact that scripts are executed as soon as they are\n// included -- thus 'this' script is the last one in the array at the time\n// this is run.\nlet hostScriptElement = (function () {\n    let scripts = document.getElementsByTagName('SCRIPT');\n    if (!(scripts.length > 0)) {\n        return null;\n    }\n    return scripts[scripts.length - 1];\n}());\n\nfunction urlQueryParameters(defaults) {\n    let vars = {};\n    let qi = window.location.href.indexOf('?');\n    if (qi < 0) {\n        return vars;\n    }\n    let slice = window.location.href.slice(qi + 1);\n    if (slice.indexOf('#') >= 0) {\n        slice = slice.slice(0, slice.indexOf('#'));\n    }\n    let hashes = slice.replace(/\\+/, '%20').split('&');\n    for (let i = 0; i < hashes.length; i++) {\n        let hash = hashes[i].split('=');\n        vars[decodeURIComponent(hash[0])] = decodeURIComponent(hash[1]);\n    }\n    return vars;\n}\n\n// Parses options out of the host <script> element. Allows for easy configuration\n// via the HTML element. Example:\n//\n// <script src='lightstep.min.js'\n//      data-access_token='{my_access_token}'\n//      data-component_name='my_component'></script>\n//\n// Note: relies on the global hostScriptElement variable defined above.\n//\nmodule.exports.parseScriptElementOptions = function (opts, browserOpts) {\n    if (!hostScriptElement) {\n        return;\n    }\n\n    let dataset = hostScriptElement.dataset;\n\n    let accessToken = dataset.access_token;\n    if (typeof accessToken === 'string' && accessToken.length > 0) {\n        opts.access_token = accessToken;\n    }\n\n    let componentName = dataset.component_name;\n    if (typeof componentName === 'string' && componentName.length > 0) {\n        opts.component_name = componentName;\n    }\n\n    let collectorHost = dataset.collector_host;\n    if (typeof collectorHost === 'string' && collectorHost.length > 0) {\n        opts.collector_host = collectorHost;\n    }\n    let collectorPort = dataset.collector_port;\n    if (collectorPort) {\n        opts.collector_port = parseInt(collectorPort, 10);\n    }\n    let collectorPath = dataset.collector_path;\n    if (typeof collectorPath === 'string' && collectorPath.length > 0) {\n        opts.collector_path = collectorPath;\n    }\n    let collectorEncryption = dataset.collector_encryption;\n    if (collectorEncryption) {\n        opts.collector_encryption = collectorEncryption;\n    }\n    if (dataset.transport) {\n        opts.transport = dataset.transport;\n    }\n\n    let enable = dataset.enable;\n    if (typeof enable === 'string') {\n        if (enable === 'true') {\n            opts.enable = true;\n        } else if (enable === 'false') {\n            opts.enable = false;\n        }\n    }\n    let verbosity = dataset.verbosity;\n    if (typeof verbosity === 'string') {\n        opts.verbosity = parseInt(verbosity, 10);\n    }\n\n    let init = dataset.init_global_tracer;\n    if (typeof init === 'string') {\n        if (init === 'true') {\n            browserOpts.init_global_tracer = true;\n        } else if (init === 'false') {\n            browserOpts.init_global_tracer = false;\n        }\n    }\n\n    // NOTE: this is a little inelegant as this is hard-coding support for a\n    // \"plug-in\" option.\n    if (typeof dataset.xhr_instrumentation === 'string' && dataset.xhr_instrumentation === 'true') {\n        opts.xhr_instrumentation = true;\n    }\n\n    if (typeof dataset.instrument_page_load === 'string' && dataset.instrument_page_load === 'true') {\n        opts.instrument_page_load = true;\n    }\n};\n\n// Parses options out of the current URL query string. The query parameters use\n// the 'lightstep_' prefix to reduce the chance of collision with\n// application-specific query parameters.\n//\n// This mechanism is particularly useful for debugging purposes as it does not\n// require any code or configuration changes.\n//\nmodule.exports.parseURLQueryOptions = function (opts) {\n    if (!window) {\n        return;\n    }\n\n    let params = urlQueryParameters();\n    if (params.lightstep_verbosity) {\n        try {\n            opts.verbosity = parseInt(params.lightstep_verbosity, 10);\n        } catch (_ignored) { /* Ignored */ }\n    }\n    if (params.lightstep_log_to_console) {\n        opts.log_to_console = true;\n    }\n};\n","const optionsParser = require('./options_parser.js');\nconst util = require('./util');\n\nconst kRuntimeGUIDCookiePrefix = 'lightstep_guid';\nconst kSessionIDCookieKey = 'lightstep_session_id';\nconst kCookieTimeToLiveSeconds = 7 * 24 * 60 * 60;\n\nlet nowMicrosImp = (function () {\n    // Is a hi-res timer available?\n    if (window.performance &&\n        window.performance.now &&\n        window.performance.timing &&\n        window.performance.timing.navigationStart) {\n        let start = performance.timing.navigationStart;\n        return function () {\n            return Math.floor((start + performance.now()) * 1000.0);\n        };\n    }\n    // The low-res timer is the best we can do\n    return function () {\n        return Date.now() * 1000.0;\n    };\n}());\n\nclass PlatformBrowser {\n\n    name() {\n        return 'browser';\n    }\n\n    nowMicros() {\n        return nowMicrosImp();\n    }\n\n    // Return the GUID to use for the runtime. The intention is to reuse the\n    // GUID so that logically a single browser session looks like a single\n    // runtime.\n    runtimeGUID(groupName) {\n        // Account for the groupName in the same that multiple apps or services\n        // are running on the same domain (and should not share the same\n        // runtime GUID).\n        let cookieKey = `${kRuntimeGUIDCookiePrefix}/${groupName}`;\n        let uuid = util.cookie(cookieKey) || this._generateLongUUID();\n        util.cookie(cookieKey, uuid, kCookieTimeToLiveSeconds, '/');\n\n        // Also create a session ID as well to give the server more information\n        // to coordinate with.\n        let sessionID = util.cookie(kSessionIDCookieKey) || this._generateLongUUID();\n        util.cookie(kSessionIDCookieKey, sessionID, kCookieTimeToLiveSeconds, '/');\n\n        return uuid;\n    }\n\n    generateUUID() {\n        return this._generateLongUUID();\n    }\n\n    _generateLongUUID() {\n        let p0 = `00000000${Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)}`.substr(-8);\n        let p1 = `00000000${Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)}`.substr(-8);\n        return `${p0}${p1}`;\n    }\n\n    onBeforeExit(...args) {\n        if (window) {\n            window.addEventListener('beforeunload', ...args);\n        }\n    }\n\n    plugins(opts) {\n        return [\n            require('../../../plugins/instrument_xhr'),\n            require('../../../plugins/instrument_document_load'),\n        ];\n    }\n\n    options(imp) {\n        let tracerOpts = {};\n        let browserOpts = {};\n        optionsParser.parseScriptElementOptions(tracerOpts, browserOpts);\n        optionsParser.parseURLQueryOptions(tracerOpts, browserOpts);\n        return tracerOpts;\n    }\n\n    static initLibrary(lib) {\n        let tracerOpts = {};\n        let browserOpts = {};\n        optionsParser.parseScriptElementOptions(tracerOpts, browserOpts);\n\n        if (browserOpts.init_global_tracer) {\n            PlatformBrowser.initGlobalTracer(lib, tracerOpts);\n        }\n    }\n    static initGlobalTracer(lib, opts) {\n        if (typeof window !== 'object') {\n            return;\n        }\n        if (typeof window.opentracing !== 'object') {\n            return;\n        }\n        opentracing.initGlobalTracer(new lib.Tracer(opts));  // eslint-disable-line no-undef\n    }\n\n    tracerTags() {\n        return {\n            'lightstep.tracer_platform' : 'browser',\n        };\n    }\n\n    // There's no way to truly \"fatal\" on the browser; the best approximation\n    // is an Error exception.\n    fatal(message) {\n        throw new Error(message);\n    }\n\n    localStoreGet(key) {\n        if (!window.sessionStorage) {\n            return null;\n        }\n        try {\n            return JSON.parse(sessionStorage.getItem(`lightstep/${key}`));\n        } catch (_ignored) {\n            return null;\n        }\n    }\n\n    localStoreSet(key, value) {\n        if (!window.sessionStorage) {\n            return;\n        }\n        try {\n            sessionStorage.setItem(`lightstep/${key}`, JSON.stringify(value));\n        } catch (_ignored) { /* Ignored */ }\n    }\n}\n\nmodule.exports = PlatformBrowser;\n","module.exports = require('./generated/thrift_all.js').Thrift;\n","export default class TransportBrowser {\n\n    constructor() {\n        this._host = '';\n        this._port = 0;\n        this._path = '';\n        this._encryption = '';\n    }\n\n    ensureConnection(opts) {\n        this._host = opts.collector_host;\n        this._port = opts.collector_port;\n        this._path = opts.collector_path;\n        this._encryption = opts.collector_encryption;\n    }\n\n    report(detached, auth, report, done) {\n        try {\n            if (!detached) {\n                this._reportAJAX(auth, report, done);\n            } else {\n                this._reportAsyncScript(auth, report, done);\n            }\n        } catch (e) {\n            return done(e, null);\n        }\n    }\n\n    _reportAJAX(auth, report, done) {\n        let payload = JSON.stringify(report.toThrift());\n        let protocol = (this._encryption === 'none') ? 'http' : 'https';\n        let url = `${protocol}://${this._host}:${this._port}${this._path}/api/v0/reports`;\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST', url);\n        // Note: the browser automatically sets 'Connection' and 'Content-Length'\n        // and *does not* allow they to be set manually\n        xhr.setRequestHeader('LightStep-Access-Token', auth.getAccessToken());\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        //req.setRequestHeader('Content-Encoding', 'gzip');\n        xhr.onreadystatechange = function () {\n            if (this.readyState === 4) {\n                let err = null;\n                let resp = null;\n                if (this.status !== 200) {\n                    err = new Error(`status code = ${this.status}`);\n                } else if (!this.responseText) {\n                    err = new Error('unexpected empty response');\n                } else {\n                    try {\n                        resp = JSON.parse(this.responseText);\n                    } catch (exception) {\n                        err = exception;\n                    }\n                }\n                return done(err, resp);\n            }\n        };\n        xhr.send(payload);\n    }\n\n    // Do a \"tail flush\" using an async browser script load.  This does not get\n    // interrupted as a normal Thirft RPC would when navigating away from\n    // the page.\n    _reportAsyncScript(auth, report, done) {\n        let authJSON   = JSON.stringify(auth.toThrift());\n        let reportJSON = JSON.stringify(report.toThrift());\n        let protocol = (this._encryption === 'none') ? 'http' : 'https';\n        let url = `${protocol}://${this._host}:${this._port}${this._path}/_rpc/v1/reports/uri_encoded` +\n            `?auth=${encodeURIComponent(authJSON)}` +\n            `&report=${encodeURIComponent(reportJSON)}`;\n\n        let elem = document.createElement('script');\n        elem.async = true;\n        elem.defer = true;\n        elem.src = url;\n        elem.type = 'text/javascript';\n\n        let hostElem = document.getElementsByTagName('head')[0];\n        if (hostElem) {\n            hostElem.appendChild(elem);\n        }\n        return done(null, null);\n    }\n}\n","/* eslint-disable */\n\n// This function is copied directly from https://github.com/litejs/browser-cookie-lite.\n// It is licensed under the MIT License and authored by Lauri Rooden.\nfunction cookie(name, value, ttl, path, domain, secure) {\n    if (arguments.length > 1) {\n        let newCookie = name + '=' + encodeURIComponent(value) +\n            (ttl ? \"; expires=\" + new Date(+new Date()+(ttl*1000)).toUTCString() : '') +\n            (path   ? \"; path=\" + path : '') +\n            (domain ? \"; domain=\" + domain : '') +\n            (secure ? \"; secure\" : '');\n        document.cookie = newCookie;\n        return newCookie;\n    }\n    return decodeURIComponent(((\"; \"+document.cookie).split(\"; \"+name+\"=\")[1]||\"\").split(\";\")[0]);\n}\n\n/* eslint-enable */\n\nmodule.exports = {\n    cookie : cookie,\n};\n","/* global TRANSPORT_PROTO */\n\nimport _each from '../_each'; // eslint-disable-line camelcase\nimport * as coerce from './coerce.js';\n\nlet croutonThrift = null;\nlet proto = null;\nif ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n    proto = require('./generated_proto/collector_pb.js'); // eslint-disable-line global-require\n}\nif ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n    croutonThrift = require('../platform_abstraction_layer').crouton_thrift; // eslint-disable-line global-require\n}\n\nexport default class ReportImp {\n    constructor(runtime, oldestMicros, youngestMicros, spanRecords, internalLogs, counters, timestampOffsetMicros) {\n        this._runtime = runtime;\n        this._oldestMicros = oldestMicros;\n        this._youngestMicros = youngestMicros;\n        this._spanRecords = spanRecords;\n        this._internalLogs = internalLogs;\n        this._counters = counters;\n        this._timestampOffsetMicros = timestampOffsetMicros;\n    }\n\n    getSpanRecords() {\n        return this._spanRecords;\n    }\n\n    getInternalLogs() {\n        return this._internalLogs;\n    }\n\n    getCounters() {\n        return this._counters;\n    }\n\n    toThrift() {\n        if ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n            _each(this._spanRecords, (span) => {\n                span.runtime_guid = this._runtimeGUID;\n            });\n\n            let thriftCounters = [];\n            _each(this._counters, (value, key) => {\n                if (value === 0) {\n                    return;\n                }\n                thriftCounters.push(new croutonThrift.MetricsSample({\n                    name         : coerce.toString(key),\n                    double_value : coerce.toNumber(value),\n                }));\n            });\n\n            let thriftSpanRecords = [];\n            _each(this._spanRecords, (spanRecord) => {\n                thriftSpanRecords.push(spanRecord._toThrift());\n            });\n\n            return new croutonThrift.ReportRequest({\n                runtime          : this._runtime.toThrift(),\n                oldest_micros    : this._oldestMicros,\n                youngest_micros  : this._youngestMicros,\n                span_records     : thriftSpanRecords,\n                internal_logs    : this._internalLogs,\n                internal_metrics : new croutonThrift.Metrics({\n                    counts : thriftCounters,\n                }),\n                timestamp_offset_micros : this._timestampOffsetMicros,\n            });\n        }\n    }\n\n    toProto(auth) {\n        if ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n            let spansList = [];\n            _each(this._spanRecords, (spanRecord) => {\n                spansList.push(spanRecord._toProto());\n            });\n\n            let countsList = [];\n            _each(this._counters, (count) => {\n                let metricSample = new proto.MetricsSample();\n                metricSample.setName(count.name);\n                metricSample.setIntValue(count.int64_value);\n                metricSample.setDoubleValue(count.double_value);\n                countsList.push(metricSample);\n            });\n\n            let internalMetrics = new proto.InternalMetrics();\n            internalMetrics.setCountsList(countsList);\n\n            let reportProto = new proto.ReportRequest();\n            reportProto.setAuth(auth.toProto());\n            reportProto.setReporter(this._runtime.toProto());\n            reportProto.setSpansList(spansList);\n            reportProto.setTimestampOffsetMicros(this._timestampOffsetMicros);\n            reportProto.setInternalMetrics(internalMetrics);\n            return reportProto;\n        }\n    }\n}\n","/* global TRANSPORT_PROTO */\n\nimport _each from '../_each';\nimport * as coerce from './coerce.js';\nconst packageObject = require('../../package.json');\n\nlet croutonThrift = null;\nlet proto = null;\nlet converter = null;\nif ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n    proto = require('./generated_proto/collector_pb.js'); // eslint-disable-line global-require\n    converter = require('hex2dec'); // eslint-disable-line global-require\n}\nif ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n    croutonThrift = require('../platform_abstraction_layer').crouton_thrift; // eslint-disable-line global-require\n}\n\nexport default class RuntimeImp {\n    constructor(runtimeGUID, startMicros, componentName, attributes) {\n        this._runtimeGUID = runtimeGUID;\n        this._startMicros = startMicros;\n        this._componentName = componentName;\n        this._attributes = attributes;\n    }\n\n    toThrift() {\n        if ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n            let thriftAttrs = [];\n            _each(this._attributes, (val, key) => {\n                thriftAttrs.push(new croutonThrift.KeyValue({\n                    Key   : coerce.toString(key),\n                    Value : coerce.toString(val),\n                }));\n            });\n\n            // NOTE: for legacy reasons, the Thrift field is called \"group_name\"\n            // but is semantically equivalent to the \"component_name\"\n            return new croutonThrift.Runtime({\n                guid         : this._runtimeGUID,\n                start_micros : this._startMicros,\n                group_name   : this._componentName,\n                attrs        : thriftAttrs,\n            });\n        }\n    }\n\n    toProto() {\n        if ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n            let tracerVersion = new proto.KeyValue();\n            tracerVersion.setKey('lightstep.tracer_version');\n            tracerVersion.setStringValue(packageObject.version);\n\n            let tracerPlatform = new proto.KeyValue();\n            tracerPlatform.setKey('lightstep.tracer_platform');\n            tracerPlatform.setStringValue('browser');\n\n            let componentName = new proto.KeyValue();\n            componentName.setKey('lightstep.component_name');\n            componentName.setStringValue(this._componentName);\n\n            let reporterId = converter.hexToDec(this._runtimeGUID);\n\n            let reporterProto = new proto.Reporter();\n            reporterProto.setReporterId(reporterId);\n            reporterProto.setTagsList([tracerVersion, tracerPlatform, componentName]);\n            return reporterProto;\n        }\n    }\n}\n","import _each from '../_each';\n\nexport default class SpanContextImp {\n\n    // ---------------------------------------------------------------------- //\n    // OpenTracing Implementation\n    // ---------------------------------------------------------------------- //\n\n    setBaggageItem(key, value) {\n        this._baggage[key] = value;\n    }\n\n    getBaggageItem(key) {\n        return this._baggage[key];\n    }\n\n    // ---------------------------------------------------------------------- //\n    // LightStep Extensions\n    // ---------------------------------------------------------------------- //\n\n    // This is part of the formal OT API in Go; and will likely be supported\n    // across platforms.\n    //\n    // https://github.com/opentracing/opentracing.github.io/issues/103\n    forEachBaggageItem(f) {\n        _each(this._baggage, (val, key) => {\n            f(key, val);\n        });\n    }\n\n    // ---------------------------------------------------------------------- //\n    // Private methods\n    // ---------------------------------------------------------------------- //\n\n    constructor(spanGUID, traceGUID) {\n        this._baggage = {};\n        this._guid        = spanGUID;\n        this._traceGUID   = traceGUID;\n    }\n}\n","/* global TRANSPORT_PROTO */\n\nimport * as coerce from './coerce.js';\nimport * as constants from '../constants';\nimport _each from '../_each';\nimport * as opentracing from 'opentracing';\nimport LogRecordImp from './log_record_imp';\n\nlet croutonThrift = null;\nlet googleProtobufTimestampPB = null;\nlet proto = null;\nlet converter = null;\nif ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n    googleProtobufTimestampPB = require('google-protobuf/google/protobuf/timestamp_pb.js');\n    proto = require('./generated_proto/collector_pb.js');\n    converter = require('hex2dec');\n}\nif ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n    croutonThrift = require('../platform_abstraction_layer').crouton_thrift;\n}\n\nexport default class SpanImp extends opentracing.Span {\n\n    // ---------------------------------------------------------------------- //\n    // opentracing.Span SPI\n    // ---------------------------------------------------------------------- //\n\n    _tracer() {\n        return this._tracerImp;\n    }\n\n    _context() {\n        return this._ctx;\n    }\n\n    _setOperationName(name) {\n        this._operationName = `${name}`;\n    }\n\n    _addTags(keyValuePairs) {\n        let self = this;\n        _each(keyValuePairs, (value, key) => {\n            self._tags[key] = value;\n        });\n    }\n\n    _log(keyValuePairs, timestamp) {\n        let self = this;\n        const argumentType = typeof keyValuePairs;\n        if (argumentType !== 'object') {\n            self._tracerImp._error('Span.log() expects an object as its first argument');\n            return;\n        }\n\n        let tsMicros = timestamp ?\n            (timestamp * 1000) :\n            self._tracerImp._platform.nowMicros();\n\n        let record = new LogRecordImp(\n            self._tracerImp.getLogFieldKeyHardLimit(),\n            self._tracerImp.getLogFieldValueHardLimit(),\n            tsMicros,\n            keyValuePairs);\n        self._log_records = self._log_records || [];\n        self._log_records.push(record);\n        self._tracerImp.emit('log_added', record);\n    }\n\n    _finish(finishTime) {\n        return this.end(finishTime);\n    }\n\n    // ---------------------------------------------------------------------- //\n    // Private methods\n    // ---------------------------------------------------------------------- //\n\n    constructor(tracer, name, spanContext) {\n        super();\n\n        console.assert(typeof tracer === 'object', 'Invalid runtime');  // eslint-disable-line no-console\n\n        this._tracerImp = tracer;\n        this._ctx = spanContext;\n        this._ended  = false;\n\n        this._operationName = name;\n        this._tags          = {};\n        this._beginMicros   = tracer._platform.nowMicros();\n        this._endMicros     = 0;\n        this._errorFlag     = false;\n        this._log_records   = null;\n    }\n\n    // ---------------------------------------------------------------------- //\n    // LightStep Extensions\n    // ---------------------------------------------------------------------- //\n\n    getOperationName() {\n        return this._operationName;\n    }\n\n    // Getter only. The GUID is immutable once set internally.\n    guid() {\n        return this._ctx._guid;\n    }\n\n    traceGUID() {\n        return this._ctx._traceGUID;\n    }\n\n    parentGUID() {\n        return this._tags.parent_span_guid;\n    }\n\n    setParentGUID(guid) {\n        this._tags.parent_span_guid = coerce.toString(guid);\n        return this;\n    }\n\n    beginMicros() {\n        return this._beginMicros;\n    }\n\n    setBeginMicros(micros) {\n        this._beginMicros = micros;\n        return this;\n    }\n\n    endMicros() {\n        return this._endMicros;\n    }\n\n    setEndMicros(micros) {\n        this._endMicros = micros;\n        return this;\n    }\n\n    /**\n     * Returns a URL to the trace containing this span.\n     *\n     * Unlike most methods, it *is* safe to call this method after `finish()`.\n     *\n     * @return {string} the absolute URL for the span\n     */\n    generateTraceURL() {\n        let micros;\n        if (this._beginMicros > 0 && this._endMicros > 0) {\n            micros = Math.floor((this._beginMicros + this._endMicros) / 2);\n        } else {\n            micros = this._tracerImp._platform.nowMicros();\n        }\n\n        let urlPrefix = constants.LIGHTSTEP_APP_URL_PREFIX;\n        let accessToken = encodeURIComponent(this._tracerImp.options().access_token);\n        let guid = encodeURIComponent(this.guid());\n        return `${urlPrefix}/${accessToken}/trace?span_guid=${guid}&at_micros=${micros}`;\n    }\n\n    getTags() {\n        return this._tags;\n    }\n\n    /**\n     * Finishes the span.\n     *\n     * @param  {Number} finishTime\n     *         \tOptional Unix timestamp in milliseconds setting an explicit\n     *         \tfinish time for the span.\n     */\n    end(finishTime) {\n        // Ensure a single span is not recorded multiple times\n        if (this._ended) {\n            return;\n        }\n        this._ended = true;\n\n        if (finishTime !== undefined) {\n            this._endMicros = finishTime * 1000;\n        }\n\n        // Do not set endMicros if it has already been set. This accounts for\n        // the case of a span that has had it's times set manually (i.e. allows\n        // for retroactively created spans that might not be possible to create\n        // in real-time).\n        if (this._endMicros === 0) {\n            this._endMicros = this._tracerImp._platform.nowMicros();\n        }\n        this._tracerImp._addSpanRecord(this);\n    }\n\n    _toThrift() {\n        if ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n            let attributes = [];\n            _each(this._tags, (value, key) => {\n                attributes.push(new croutonThrift.KeyValue({\n                    Key   : coerce.toString(key),\n                    Value : coerce.toString(value),\n                }));\n            });\n\n            let logs = [];\n            _each(this._log_records, (logRecord) => {\n                let logThrift = logRecord.toThrift();\n                this._tracerImp._counters['logs.keys.over_limit'] += logRecord.getNumKeysOverLimit();\n                this._tracerImp._counters['logs.values.over_limit'] += logRecord.getNumValuesOverLimit();\n                logs.push(logThrift);\n            });\n\n            return new croutonThrift.SpanRecord({\n                span_guid       : this.guid(),\n                trace_guid      : this.traceGUID(),\n                runtime_guid    : this._tracerImp.guid(),\n                span_name       : this._operationName,\n                oldest_micros   : this._beginMicros,\n                youngest_micros : this._endMicros,\n                attributes      : attributes,\n                error_flag      : this._errorFlag,\n                log_records     : logs,\n            });\n        }\n    }\n\n    _toProto() {\n        if ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n            let spanContextProto = new proto.SpanContext();\n\n            spanContextProto.setTraceId(converter.hexToDec(this.traceGUID()));\n            spanContextProto.setSpanId(converter.hexToDec(this.guid()));\n\n            let spanProto = new proto.Span();\n            spanProto.setSpanContext(spanContextProto);\n            spanProto.setOperationName(this._operationName);\n\n            let startTimestamp = new googleProtobufTimestampPB.Timestamp();\n            let startMillis = Math.floor(this._beginMicros / 1000);\n            let startSeconds = Math.floor(startMillis / 1000);\n            let startNanos = (startMillis % 1000) * 1000000;\n            startTimestamp.setSeconds(startSeconds);\n            startTimestamp.setNanos(startNanos);\n            spanProto.setStartTimestamp(startTimestamp);\n            spanProto.setDurationMicros(this._endMicros - this._beginMicros);\n\n            let logs = [];\n            _each(this._log_records, (logRecord) => {\n                let logProto = logRecord.toProto();\n                this._tracerImp._counters['logs.keys.over_limit'] += logRecord.getNumKeysOverLimit();\n                this._tracerImp._counters['logs.values.over_limit'] += logRecord.getNumValuesOverLimit();\n                logs.push(logProto);\n            });\n            spanProto.setLogsList(logs);\n\n            let parentSpanGUID = undefined;\n            let tags = [];\n            _each(this._tags, (value, key) => {\n                let strValue = coerce.toString(value);\n                let strKey = coerce.toString(key);\n                let tag = new proto.KeyValue();\n                if (strKey === 'parent_span_guid') {\n                    parentSpanGUID = strValue;\n                }\n                tag.setKey(strKey);\n                tag.setStringValue(strValue);\n                tags.push(tag);\n            });\n            spanProto.setTagsList(tags);\n\n            if (parentSpanGUID !== undefined) {\n                let ref = new proto.Reference();\n                ref.setRelationship(proto.Reference.Relationship.CHILD_OF);\n                let parentSpanContext = new proto.SpanContext();\n                parentSpanContext.setSpanId(converter.hexToDec(parentSpanGUID));\n                ref.setSpanContext(parentSpanContext);\n                spanProto.setReferencesList([ref]);\n            }\n            return spanProto;\n        }\n    }\n}\n","//============================================================================//\n// Imports\n//============================================================================//\n/* global TRANSPORT_PROTO */\n\nimport EventEmitter from 'eventemitter3';\nimport * as opentracing from 'opentracing';\n\nimport SpanContextImp from './span_context_imp';\nimport SpanImp from './span_imp';\nimport _each from '../_each';\nimport AuthImp from './auth_imp';\nimport RuntimeImp from './runtime_imp';\nimport ReportImp from './report_imp';\n\nlet Platform = require('../platform_abstraction_layer').Platform;\nlet ProtoTransport = null;\nlet ThriftTransport = null;\nif ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n    ProtoTransport = require('../platform_abstraction_layer').ProtoTransport;\n}\nif ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n    ThriftTransport = require('../platform_abstraction_layer').ThriftTransport;\n}\n\nconst ClockState    = require('./util/clock_state');\nconst LogBuilder    = require('./log_builder');\nconst coerce        = require('./coerce');\nconst constants     = require('../constants');\nconst globals       = require('./globals');\nconst packageObject = require('../../package.json');\nconst util          = require('./util/util');\n\nconst CARRIER_TRACER_STATE_PREFIX = 'ot-tracer-';\nconst CARRIER_BAGGAGE_PREFIX = 'ot-baggage-';\n\nconst DEFAULT_COLLECTOR_HOSTNAME   = 'collector.lightstep.com';\nconst DEFAULT_COLLECTOR_PORT_TLS   = 443;\nconst DEFAULT_COLLECTOR_PORT_PLAIN = 80;\nconst DEFAULT_COLLECTOR_PATH       = '';\n\n// Internal errors should be rare. Set a low limit to ensure a cascading failure\n// does not compound an existing problem by trying to send a great deal of\n// internal error data.\nconst MAX_INTERNAL_LOGS = 20;\n\nlet _singleton = null;\n\nexport default class Tracer extends opentracing.Tracer {\n\n    constructor(opts) {\n        super();\n\n        this._delegateEventEmitterMethods();\n\n        opts = opts || {};\n\n        if (!_singleton) {\n            globals.setOptions(opts);\n            _singleton = this;\n        }\n\n        // Platform abstraction layer\n        this._platform = new Platform(this);\n        this._runtimeGUID = opts.guid || this.override_runtime_guid || null;  // Set once the group name is set\n        this._plugins = {};\n        this._options = {};\n        this._optionDescs = [];\n        this._makeOptionsTable();\n\n        this._opentracing = opentracing;\n        if (opts.opentracing_module) {\n            this._opentracing = opts.opentracing_module;\n        }\n\n        let now = this._platform.nowMicros();\n\n        // The thrift authentication and runtime struct are created as soon as\n        // the necessary initialization options are available.\n        this._startMicros = now;\n        this._auth = null;\n        this._runtime = null;\n\n        let logger = {\n            warn  : (msg, payload) => { this._warn(msg, payload); },\n            error : (err, payload) => { this._error(err, payload); },\n        };\n\n        if (opts) {\n            this._transport = opts.override_transport;\n        }\n\n        if (!this._transport) {\n            if (opts.transport && opts.transport === 'proto') {\n                if ((typeof TRANSPORT_PROTO === 'undefined') || TRANSPORT_PROTO) {\n                    this._transport = new ProtoTransport(logger);\n                }\n            } else {\n                if ((typeof TRANSPORT_PROTO === 'undefined') || !TRANSPORT_PROTO) {\n                    this._transport = new ThriftTransport(logger);\n                }\n            }\n        }\n\n        this._reportingLoopActive = false;\n        this._reportYoungestMicros = now;\n        this._reportTimer = null;\n        this._reportErrorStreak = 0;    // Number of consecutive errors\n        this._lastVisibleErrorMillis = 0;\n        this._skippedVisibleErrors = 0;\n\n        // Set addActiveRootSpan() for detail\n        this._activeRootSpanSet = {};\n        this._activeRootSpan = null;\n\n        // For clock skew adjustment.\n        this._useClockState = true;\n        this._clockState = new ClockState({\n            nowMicros     : () => this._platform.nowMicros(),\n            localStoreGet : () => {\n                let key = `clock_state/${this._options.collector_host}`;\n                return this._platform.localStoreGet(key);\n            },\n            localStoreSet : (value) => {\n                let key = `clock_state/${this._options.collector_host}`;\n                return this._platform.localStoreSet(key, value);\n            },\n        });\n\n        // Span reporting buffer and per-report data\n        // These data are reset on every successful report.\n        this._spanRecords = [];\n\n        // The counter names need to match those accepted by the collector.\n        // These are internal counters only.\n        this._counters = {\n            'internal.errors'        : 0,\n            'internal.warnings'      : 0,\n            'spans.dropped'          : 0,\n            'logs.dropped'           : 0,\n            'logs.keys.over_limit'   : 0,\n            'logs.values.over_limit' : 0,\n            'reports.errors.send'    : 0,\n        };\n\n        // For internal (not client) logs reported to the collector\n        this._internalLogs = [];\n\n        // Current runtime state / status\n        this._flushIsActive = false;\n\n        // Built-in plugins\n        this.addPlugin(require('../plugins/log_to_console'));\n\n        // Initialize the platform options after the built-in plugins in\n        // case any of those options affect the built-ins.\n        this.addPlatformPlugins(opts);\n        this.setPlatformOptions(opts);\n\n        // Set constructor arguments\n        if (opts) {\n            this.options(opts);\n        }\n\n        // This relies on the options being set: call this last.\n        this._setupReportOnExit();\n\n        this._info(`Tracer created with guid ${this._runtimeGUID}`);\n\n        this.startPlugins();\n    }\n\n    // Morally speaking, Tracer also inherits from EventEmmiter, but we must\n    // fake it via composition.\n    //\n    // If not obvious on inspection: a hack.\n    _delegateEventEmitterMethods() {\n        let self = this;\n        this._ee = new EventEmitter();\n        // The list of methods at https://nodejs.org/api/events.html\n        _each([\n            'addListener',\n            'emit',\n            'eventNames',\n            'getMaxListeners',\n            'listenerCount',\n            'listeners',\n            'on',\n            'once',\n            'prependListener',\n            'prependOnceListener',\n            'removeAllListeners',\n            'removeListener',\n            'setMaxListeners',\n        ], (methodName) => {\n            self[methodName] = function () {\n                if (self._ee[methodName]) {\n                    self._ee[methodName].apply(self._ee, arguments);\n                }\n            };\n        });\n    }\n\n    _makeOptionsTable() {\n        /* eslint-disable key-spacing, no-multi-spaces */\n\n        // NOTE: make 'verbosity' the first option so it is processed first on\n        // options changes and takes effect as soon as possible.\n        this.addOption('verbosity',             { type : 'int', min: 0, max: 9, defaultValue: 1 });\n\n        // Core options\n        this.addOption('access_token',          { type: 'string',  defaultValue: '' });\n        this.addOption('component_name',        { type: 'string',  defaultValue: '' });\n        this.addOption('collector_host',        { type: 'string',  defaultValue: DEFAULT_COLLECTOR_HOSTNAME });\n        this.addOption('collector_port',        { type: 'int',     defaultValue: DEFAULT_COLLECTOR_PORT_TLS });\n        this.addOption('collector_path',        { type: 'string',  defaultValue: DEFAULT_COLLECTOR_PATH });\n        this.addOption('collector_encryption',  { type: 'string',  defaultValue: 'tls' });\n        this.addOption('tags',                  { type: 'any',     defaultValue: {} });\n        this.addOption('max_reporting_interval_millis',  { type: 'int',     defaultValue: 2500 });\n\n        // Non-standard, may be deprecated\n        this.addOption('disabled',              { type: 'bool',    defaultValue: false });\n        this.addOption('max_span_records',      { type: 'int',     defaultValue: 4096 });\n        this.addOption('default_span_tags',     { type: 'any',     defaultValue: {} });\n        this.addOption('report_timeout_millis', { type: 'int',     defaultValue: 30000 });\n        this.addOption('gzip_json_requests',    { type: 'bool',    defaultValue: true });\n        this.addOption('disable_reporting_loop', { type: 'bool',    defaultValue: false });\n        this.addOption('disable_report_on_exit', { type: 'bool',    defaultValue: false });\n        this.addOption('delay_initial_report_millis', { type: 'int', defaultValue: 1000 });\n        this.addOption('error_throttle_millis', { type: 'int',     defaultValue: 60000 });\n\n        // Debugging options\n        //\n        // These are not part of the supported public API.\n        //\n        // If false, SSL certificate verification is skipped. Useful for testing.\n        this.addOption('certificate_verification',      { type: 'bool',    defaultValue: true });\n        // I.e. report only on explicit calls to flush()\n\n        // Unit testing options\n        this.addOption('override_transport',            { type : 'any',    defaultValue: null });\n        this.addOption('silent',                        { type : 'bool',   defaultValue: false });\n\n        // Hard upper limits to protect against worst-case scenarios for log field sizes.\n        this.addOption('log_field_key_hard_limit',   { type: 'int',     defaultValue: 256 });\n        this.addOption('log_field_value_hard_limit', { type: 'int',     defaultValue: 1024 });\n\n        /* eslint-disable key-spacing, no-multi-spaces */\n    }\n\n    // ---------------------------------------------------------------------- //\n    // opentracing.Tracer SPI\n    // ---------------------------------------------------------------------- //\n\n    _startSpan(name, fields) {\n        // First, assemble the SpanContextImp for our SpanImp.\n        let parentCtxImp = null;\n        fields = fields || {};\n        if (fields.references) {\n            for (let i = 0; i < fields.references.length; i++) {\n                let ref = fields.references[i];\n                let type = ref.type();\n                if (type === this._opentracing.REFERENCE_CHILD_OF ||\n                    type === this._opentracing.REFERENCE_FOLLOWS_FROM) {\n                    let context = ref.referencedContext();\n                    if (!context) {\n                        this._error('Span reference has an invalid context', context);\n                        continue;\n                    }\n                    parentCtxImp = context;\n                    break;\n                }\n            }\n        }\n\n        let traceGUID = parentCtxImp ? parentCtxImp._traceGUID : this.generateTraceGUIDForRootSpan();\n        let spanImp = new SpanImp(this, name, new SpanContextImp(this._platform.generateUUID(), traceGUID));\n        spanImp.addTags(this._options.default_span_tags);\n\n        _each(fields, (value, key) => {\n            switch (key) {\n            case 'references':\n                // Ignore: handled before constructing the span\n                break;\n            case 'startTime':\n                // startTime is in milliseconds\n                spanImp.setBeginMicros(value * 1000);\n                break;\n            case 'tags':\n                spanImp.addTags(value);\n                break;\n            default:\n                this._warn(`Ignoring unknown field '${key}'`);\n                break;\n            }\n        });\n\n        if (parentCtxImp !== null) {\n            spanImp.setParentGUID(parentCtxImp._guid);\n        }\n\n        this.emit('start_span', spanImp);\n        return spanImp;\n    }\n\n    _inject(spanContext, format, carrier) {\n        switch (format) {\n        case this._opentracing.FORMAT_HTTP_HEADERS:\n        case this._opentracing.FORMAT_TEXT_MAP:\n            this._injectToTextMap(spanContext, carrier);\n            break;\n\n        case this._opentracing.FORMAT_BINARY:\n            this._error(`Unsupported format: ${format}`);\n            break;\n\n        default:\n            this._error(`Unknown format: ${format}`);\n            break;\n        }\n    }\n\n    _injectToTextMap(spanContext, carrier) {\n        if (!carrier) {\n            this._error('Unexpected null FORMAT_TEXT_MAP carrier in call to inject');\n            return;\n        }\n        if (typeof carrier !== 'object') {\n            this._error(`Unexpected '${typeof carrier}' FORMAT_TEXT_MAP carrier in call to inject`);\n            return;\n        }\n\n        carrier[`${CARRIER_TRACER_STATE_PREFIX}spanid`] = spanContext._guid;\n        carrier[`${CARRIER_TRACER_STATE_PREFIX}traceid`] = spanContext._traceGUID;\n        spanContext.forEachBaggageItem((key, value) => {\n            carrier[`${CARRIER_BAGGAGE_PREFIX}${key}`] = value;\n        });\n        carrier[`${CARRIER_TRACER_STATE_PREFIX}sampled`] = 'true';\n        return carrier;\n    }\n\n    _extract(format, carrier) {\n        switch (format) {\n        case this._opentracing.FORMAT_HTTP_HEADERS:\n        case this._opentracing.FORMAT_TEXT_MAP:\n            return this._extractTextMap(format, carrier);\n\n        case this._opentracing.FORMAT_BINARY:\n            this._error(`Unsupported format: ${format}`);\n            return null;\n\n        default:\n            this._error(`Unsupported format: ${format}`);\n            return null;\n        }\n    }\n\n    _extractTextMap(format, carrier) {\n        // Begin with the empty SpanContextImp\n        let spanContext = new SpanContextImp(null, null);\n\n        // Iterate over the contents of the carrier and set the properties\n        // accordingly.\n        let foundFields = 0;\n        _each(carrier, (value, key) => {\n            key = key.toLowerCase();\n            if (key.substr(0, CARRIER_TRACER_STATE_PREFIX.length) !== CARRIER_TRACER_STATE_PREFIX) {\n                return;\n            }\n            let suffix = key.substr(CARRIER_TRACER_STATE_PREFIX.length);\n\n            switch (suffix) {\n            case 'traceid':\n                foundFields++;\n                spanContext._traceGUID = value;\n                break;\n            case 'spanid':\n                foundFields++;\n                spanContext._guid = value;\n                break;\n            case 'sampled':\n                // Ignored. The carrier may be coming from a different client\n                // library that sends this (even though it's not used).\n                break;\n            default:\n                this._error(`Unrecognized carrier key '${key}' with recognized prefix. Ignoring.`);\n                break;\n            }\n        });\n\n        if (foundFields === 0) {\n            // This is not an error per se, there was simply no SpanContext\n            // in the carrier.\n            return null;\n        }\n        if (foundFields < 2) {\n            // A partial SpanContext suggests some sort of data corruption.\n            this._error(`Only found a partial SpanContext: ${format}, ${carrier}`);\n            return null;\n        }\n\n        _each(carrier, (value, key) => {\n            key = key.toLowerCase();\n            if (key.substr(0, CARRIER_BAGGAGE_PREFIX.length) !== CARRIER_BAGGAGE_PREFIX) {\n                return;\n            }\n            let suffix = key.substr(CARRIER_BAGGAGE_PREFIX.length);\n            spanContext.setBaggageItem(suffix, value);\n        });\n        return spanContext;\n    }\n\n\n    // ---------------------------------------------------------------------- //\n    // LightStep extensions\n    // ---------------------------------------------------------------------- //\n\n    /**\n     * Manually sends a report of all buffered data.\n     *\n     * @param  {Function} done - callback function invoked when the report\n     *         either succeeds or fails.\n     */\n    flush(done) {\n        if (!done) {\n            done = function () {};\n        }\n        if (this._options.disabled) {\n            this._warn('Manual flush() called in disabled state.');\n            return done(null);\n        }\n        this._flushReport(true, false, done);\n    }\n\n    //-----------------------------------------------------------------------//\n    // Options\n    //-----------------------------------------------------------------------//\n\n    guid() {\n        return this._runtimeGUID;\n    }\n\n    verbosity() {\n        // The 'undefined' handling below is for logs that may occur before the\n        // options are initialized.\n        let v = this._options.verbosity;\n        return (v === undefined) ? 1 : v;\n    }\n\n    // Call to generate a new Trace GUID\n    generateTraceGUIDForRootSpan() {\n        let guid = this._platform.generateUUID();\n        if (this._activeRootSpan) {\n            guid = this._activeRootSpan.traceGUID();\n        }\n        return guid;\n    }\n\n    setPlatformOptions(userOptions) {\n        let opts = this._platform.options(this) || {};\n        _each(userOptions, (val, key) => {\n            opts[key] = val;\n        });\n        this.options(opts);\n    }\n\n    // Register a new option.  Used by plug-ins.\n    addOption(name, desc) {\n        desc.name = name;\n        this._optionDescs.push(desc);\n        this._options[desc.name] = desc.defaultValue;\n    }\n\n    options(opts) {\n        if (arguments.length === 0) {\n            console.assert(typeof this._options === 'object',   // eslint-disable-line\n                'Internal error: _options field incorrect');\n            return this._options;\n        }\n        if (typeof opts !== 'object') {\n            throw new Error(`options() must be called with an object: type was ${typeof opts}`);\n        }\n\n        // \"collector_port\" 0 acts as an alias for \"use the default\".\n        if (opts.collector_port === 0) {\n            delete opts.collector_port;\n        }\n\n        // \"collector_encryption\" acts an alias for the common cases of 'collector_port'\n        if (opts.collector_encryption !== undefined && opts.collector_port === undefined) {\n            opts.collector_port = opts.collector_encryption !== 'none' ?\n                DEFAULT_COLLECTOR_PORT_TLS :\n                DEFAULT_COLLECTOR_PORT_PLAIN;\n        }\n\n        // Track what options have been modified\n        let modified = {};\n        let unchanged = {};\n        _each(this._optionDescs, (desc) => {\n            this._setOptionInternal(modified, unchanged, opts, desc);\n        });\n\n        // Check for any invalid options: is there a key in the specified operation\n        // that didn't result either in a change or a reset to the existing value?\n        for (let key in opts) {\n            if (modified[key] === undefined && unchanged[key] === undefined) {\n                this._warn(`Invalid option ${key} with value ${opts[key]}`);\n            }\n        }\n\n        //\n        // Update the state information based on the changes\n        //\n        this._initReportingDataIfNeeded(modified);\n\n        if (!this._reportingLoopActive) {\n            this._startReportingLoop();\n        }\n\n        if (this.verbosity() >= 3) {\n            let optionsString = '';\n            let count = 0;\n            _each(modified, (val, key) => {\n                optionsString += `\\t${JSON.stringify(key)}: ${JSON.stringify(val.newValue)}\\n`;\n                count++;\n            });\n            if (count > 0) {\n                this._debug(`Options modified:\\n${optionsString}`);\n            }\n        }\n        this.emit('options', modified, this._options, this);\n    }\n\n    _setOptionInternal(modified, unchanged, opts, desc) {\n        let name = desc.name;\n        let value = opts[name];\n        let valueType = typeof value;\n        if (value === undefined) {\n            return;\n        }\n\n        // Parse the option (and check constraints)\n        switch (desc.type) {\n\n        case 'any':\n            break;\n\n        case 'bool':\n            if (value !== true && value !== false) {\n                this._error(`Invalid boolean option '${name}' '${value}'`);\n                return;\n            }\n            break;\n\n        case 'int':\n            if (valueType !== 'number' || Math.floor(value) !== value) {\n                this._error(`Invalid int option '${name}' '${value}'`);\n                return;\n            }\n            if (desc.min !== undefined && desc.max !== undefined) {\n                if (!(value >= desc.min && value <= desc.max)) {\n                    this._error(`Option '${name}' out of range '${value}' is not between ${desc.min} and ${desc.max}`);  // eslint-disable-line max-len\n                    return;\n                }\n            }\n            break;\n\n        case 'string':\n            switch (valueType) {\n            case 'string':\n                break;\n            case 'number':\n                value = coerce.toString(value);\n                break;\n            default:\n                this._error(`Invalid string option ${name} ${value}`);\n                return;\n            }\n            break;\n\n        case 'array':\n            // Per http://stackoverflow.com/questions/4775722/check-if-object-is-array\n            if (Object.prototype.toString.call(value) !== '[object Array]') {\n                this._error(`Invalid type for array option ${name}: found '${valueType}'`);\n                return;\n            }\n            break;\n\n        default:\n            this._error(`Unknown option type '${desc.type}'`);\n            return;\n        }\n\n        // Set the new value, recording any modifications\n        let oldValue = this._options[name];\n        if (oldValue === undefined) {\n            throw new Error(`Attempt to set unknown option ${name}`);\n        }\n\n        // Ignore no-op changes for types that can be checked quickly\n        if (valueType !== 'object' && oldValue === value) {\n            unchanged[name] = true;\n            return;\n        }\n\n        modified[name] = {\n            oldValue : oldValue,\n            newValue : value,\n        };\n        this._options[name] = value;\n    }\n\n    // The authorization and runtime information is initialized as soon\n    // as it is available.  This allows logs and spans to be buffered before\n    // the library is initialized, which can be helpul in a complex setup with\n    // many subsystems.\n    //\n    _initReportingDataIfNeeded(modified) {\n        // Ignore redundant initialization; complaint on inconsistencies\n        if (this._auth !== null) {\n            if (!this._runtime) {\n                return this._error('Inconsistent state: auth initialized without runtime.');\n            }\n            if (modified.access_token) {\n                throw new Error('Cannot change access_token after it has been set.');\n            }\n            if (modified.component_name) {\n                throw new Error('Cannot change component_name after it has been set.');\n            }\n            if (modified.collector_host) {\n                throw new Error('Cannot change collector_host after the connection is established');\n            }\n            if (modified.collector_port) {\n                throw new Error('Cannot change collector_port after the connection is established');\n            }\n            if (modified.collector_path) {\n                throw new Error('Cannot change collector_path after the connection is established');\n            }\n            if (modified.collector_encryption) {\n                throw new Error('Cannot change collector_encryption after the connection is established');\n            }\n            return;\n        }\n\n        // See if the Thrift data can be initialized\n        if (this._options.access_token.length > 0 && this._options.component_name.length > 0) {\n            this._runtimeGUID = this._platform.runtimeGUID(this._options.component_name);\n\n            this._auth = new AuthImp(this._options.access_token);\n\n            //\n            // Assemble the tracer tags from the user-specified and automatic,\n            // internal tags.\n            //\n            let tags = {};\n            _each(this._options.tags, (value, key) => {\n                if (typeof value !== 'string') {\n                    this._error(`Tracer tag value is not a string: key=${key}`);\n                    return;\n                }\n                tags[key] = value;\n            });\n            tags['lightstep.tracer_version'] = packageObject.version;\n            let platformTags = this._platform.tracerTags();\n            _each(platformTags, (val, key) => {\n                tags[key] = val;\n            });\n\n            this._runtime = new RuntimeImp(this._runtimeGUID, this._startMicros, this._options.component_name, tags);\n\n            this._info('Initializing thrift reporting data', {\n                component_name : this._options.component_name,\n                access_token   : this._auth.getAccessToken(),\n            });\n            this.emit('reporting_initialized');\n        }\n    }\n\n    getLogFieldKeyHardLimit() {\n        return this._options.log_field_key_hard_limit;\n    }\n\n    getLogFieldValueHardLimit() {\n        return this._options.log_field_value_hard_limit;\n    }\n\n    //-----------------------------------------------------------------------//\n    // Plugins\n    //-----------------------------------------------------------------------//\n\n    addPlatformPlugins(opts) {\n        let pluginSet = this._platform.plugins(opts);\n        _each(pluginSet, (val) => {\n            this.addPlugin(val);\n        });\n    }\n\n    addPlugin(plugin) {\n        // Don't add plug-ins twice\n        let name = plugin.name();\n        if (this._plugins[name]) {\n            return;\n        }\n\n        this._plugins[name] = plugin;\n        plugin.addOptions(this);\n    }\n\n    startPlugins() {\n        _each(this._plugins, (val, key) => {\n            this._plugins[key].start(this);\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Spans\n    //-----------------------------------------------------------------------//\n\n    // This is a LightStep-specific feature that should be used sparingly. It\n    // sets a \"global\" root span such that spans that would *otherwise* be root\n    // span instead inherit the trace GUID of the active root span. This is\n    // best clarified by example:\n    //\n    // On document load in the browser, an \"active root span\" is created for\n    // the page load process. Any spans started without an explicit parent\n    // will the document load trace GUID instead of starting a trace GUID.\n    // This implicit root remains active only until the page is done loading.\n    //\n    // Any span adding itself as a root span *must* remove itself along with\n    // calling finish(). This will *not* be done automatically.\n    //\n    // NOTE: currently, only the trace GUID is transferred; it may or may not\n    // make sure to make this a proper parent.\n    //\n    // NOTE: the root span tracking is handled as a set rather than a single\n    // global to avoid conflicts between libraries.\n    addActiveRootSpan(span) {\n        this._activeRootSpanSet[span._guid] = span;\n        this._setActiveRootSpanToYoungest();\n    }\n\n    removeActiveRootSpan(span) {\n        delete this._activeRootSpanSet[span._guid];\n        this._setActiveRootSpanToYoungest();\n    }\n\n    _setActiveRootSpanToYoungest() {\n        // Set the _activeRootSpan to the youngest of the roots in case of\n        // multiple.\n        this._activeRootSpan = null;\n        _each(this._activeRootSpanSet, (span) => {\n            if (!this._activeRootSpan ||\n                span._beginMicros > this._activeRootSpan._beginMicros) {\n                this._activeRootSpan = span;\n            }\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Encoding / decoding\n    //-----------------------------------------------------------------------//\n\n    _objectToUint8Array(obj) {\n        let jsonString;\n        try {\n            // encodeURIComponent() is a *very* inefficient, but simple and\n            // well-supported way to avoid having to think about Unicode in\n            // in the conversion to a UInt8Array.\n            //\n            // Writing multiple bytes for String.charCodeAt and\n            // String.codePointAt would be an alternate approach; again,\n            // simplicitly is being preferred over efficiency for the moment.\n            jsonString = encodeURIComponent(JSON.stringify(obj));\n        } catch (e) {\n            this._error('Could not binary encode carrier data.');\n            return null;\n        }\n\n        let buffer = new ArrayBuffer(jsonString.length);\n        let view = new Uint8Array(buffer);\n        for (let i = 0; i < jsonString.length; i++) {\n            let code = jsonString.charCodeAt(i);\n            if (!(code >= 0 && code <= 255)) {\n                this._error('Unexpected character code');\n                return null;\n            }\n            view[i] = code;\n        }\n        return view;\n    }\n\n    _uint8ArrayToObject(arr) {\n        if (!arr) {\n            this._error('Array is null');\n            return null;\n        }\n\n        let jsonString = '';\n        for (let i = 0; i < arr.length; i++) {\n            jsonString += String.fromCharCode(arr[i]);\n        }\n        try {\n            return JSON.parse(decodeURIComponent(jsonString));\n        } catch (e) {\n            this._error('Could not decode binary data.');\n            return null;\n        }\n    }\n\n    //-----------------------------------------------------------------------//\n    // Logging\n    //-----------------------------------------------------------------------//\n\n    log() {\n        let b = new LogBuilder(this);\n        return b;\n    }\n\n    //-----------------------------------------------------------------------//\n    // Buffers\n    //-----------------------------------------------------------------------//\n\n    _clearBuffers() {\n        this._spanRecords = [];\n        this._internalLogs = [];\n\n        // Create a new object to avoid overwriting the values in any references\n        // to the old object\n        let counters = {};\n        _each(this._counters, (unused, key) => {\n            counters[key] = 0;\n        });\n        this._counters = counters;\n    }\n\n    _buffersAreEmpty() {\n        if (this._spanRecords.length > 0) {\n            return false;\n        }\n        if (this._internalLogs.length > 0) {\n            return false;\n        }\n\n        let countersAllZero = true;\n        _each(this._counters, (val) => {\n            if (val > 0) {\n                countersAllZero = false;\n            }\n        });\n        return countersAllZero;\n    }\n\n    _addSpanRecord(record) {\n        this._internalAddSpanRecord(record);\n        this.emit('span_added', record);\n    }\n\n    _internalAddSpanRecord(record) {\n        if (!record) {\n            this._error('Attempt to add null record to buffer');\n            return;\n        }\n\n        if (this._spanRecords.length >= this._options.max_span_records) {\n            let index = Math.floor(this._spanRecords.length * Math.random());\n            this._spanRecords[index] = record;\n            this._counters['spans.dropped']++;\n        } else {\n            this._spanRecords.push(record);\n        }\n    }\n\n    _restoreRecords(spans, internalLogs, counters) {\n        _each(spans, (span) => {\n            this._internalAddSpanRecord(span);\n        });\n\n        let currentInternalLogs = this._internalLogs;\n        this._internalLogs = [];\n        let toAdd = internalLogs.concat(currentInternalLogs);\n        _each(toAdd, (log) => {\n            this._pushInternalLog(log);\n        });\n\n        _each(counters, (value, key) => {\n            if (key in this._counters) {\n                this._counters[key] += value;\n            } else {\n                this._error(`Bad counter name: ${key}`);\n            }\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Reporting loop\n    //-----------------------------------------------------------------------//\n\n    _setupReportOnExit() {\n        if (this._options.disable_report_on_exit) {\n            this._debug('report-on-exit is disabled.');\n            return;\n        }\n\n        // Do a final explicit flush. Note that the final flush may enqueue\n        // asynchronous callbacks that cause the 'beforeExit' event to be\n        // re-emitted when those callbacks finish.\n        let finalFlushOnce = 0;\n        let finalFlush = () => {\n            if (finalFlushOnce++ > 0) { return; }\n            this._info('Final flush before exit.');\n            this._flushReport(false, true, (err) => {\n                if (err) {\n                    this._warn('Final report before exit failed', {\n                        error                  : err,\n                        unflushed_spans        : this._spanRecords.length,\n                        buffer_youngest_micros : this._reportYoungestMicros,\n                    });\n                }\n            });\n        };\n        this._platform.onBeforeExit(finalFlush);\n    }\n\n    _startReportingLoop() {\n        if (this._options.disabled) {\n            this._info('Not starting reporting loop: instrumentation is disabled.');\n            return;\n        }\n        if (this._options.disable_reporting_loop) {\n            this._info('Not starting reporting loop: reporting loop is disabled.');\n            return;\n        }\n        if (this._auth === null) {\n            // Don't start the loop until the thrift data necessary to do the\n            // report is set up.\n            return;\n        }\n        if (this._reportingLoopActive) {\n            this._info('Reporting loop already started!');\n            return;\n        }\n\n        this._info('Starting reporting loop:', this._runtime);\n        this._reportingLoopActive = true;\n\n        // Stop the reporting loop so the Node.js process does not become a\n        // zombie waiting for the timers.\n        let stopReportingOnce = 0;\n        let stopReporting = () => {\n            if (stopReportingOnce++ > 0) { return; }\n            this._stopReportingLoop();\n        };\n        this._platform.onBeforeExit(stopReporting);\n\n        // Begin the asynchronous reporting loop\n        let loop = () => {\n            this._enqueueNextReport((err) => {\n                if (this._reportingLoopActive) {\n                    loop();\n                }\n            });\n        };\n\n        const delay = Math.floor(Math.random() * this._options.delay_initial_report_millis);\n        util.detachedTimeout(() => {\n            loop();\n        }, delay);\n    }\n\n    _stopReportingLoop() {\n        this._debug('Stopping reporting loop');\n\n        this._reportingLoopActive = false;\n        clearTimeout(this._reportTimer);\n        this._reportTimer = null;\n    }\n\n    _enqueueNextReport(done) {\n        // If there's already a report request enqueued, ignore this new\n        // request.\n        if (this._reportTimer) {\n            return;\n        }\n\n        // If the clock state is still being primed, potentially use the\n        // shorted report interval.\n        //\n        // However, do not use the shorter interval in the case of an error.\n        // That does not provide sufficient backoff.\n        let reportInterval = this._options.max_reporting_interval_millis;\n        if (this._reportErrorStreak === 0 &&\n            this._useClockState &&\n            !this._clockState.isReady()) {\n            reportInterval = Math.min(constants.CLOCK_STATE_REFRESH_INTERVAL_MS, reportInterval);\n        }\n\n        // After 3 consecutive errors, expand the retry delay up to 8x the\n        // normal interval, jitter the delay by +/- 25%, and be sure to back off\n        // *at least* the standard reporting interval in the case of an error.\n        let backOff = 1 + Math.min(7, Math.max(0, this._reportErrorStreak));\n        let basis = backOff * reportInterval;\n        let jitter = 1.0 + (Math.random() * 0.5 - 0.25);\n        let delay = Math.floor(Math.max(0, jitter * basis));\n\n        this._debug(`Delaying next flush for ${delay}ms`);\n        this._reportTimer = util.detachedTimeout(() => {\n            this._reportTimer = null;\n            this._flushReport(false, false, done);\n        }, delay);\n    }\n\n    /**\n     * Internal worker for a flush of buffered data into a report.\n     *\n     * @param  {bool} manual - this is a manually invoked flush request. Don't\n     *         override this call with a clock state syncing flush, for example.\n     * @param  {bool} detached - this is an \"at exit\" flush that should not block\n     *         the calling process in any manner. This is specifically called\n     *         \"detached\" due to the browser use case where the report is done,\n     *         not just asynchronously, but as a script request that continues\n     *         to run even if the page is navigated away from mid-request.\n     * @param  {function} done - standard callback function called on success\n     *         or error.\n     */\n    _flushReport(manual, detached, done) {\n        done = done || function (err) {};\n\n        let clockReady = this._clockState.isReady();\n        let clockOffsetMicros = this._clockState.offsetMicros();\n\n        // Diagnostic information on the clock correction\n        this._debug('time correction state', {\n            offset_micros  : clockOffsetMicros,\n            active_samples : this._clockState.activeSampleCount(),\n            ready          : clockReady,\n        });\n\n        let spanRecords = this._spanRecords;\n        let counters = this._counters;\n        let internalLogs = this._internalLogs;\n\n        // If the clock is not ready, do an \"empty\" flush to build more clock\n        // samples before the real data is reported.\n        // A detached flush (i.e. one intended to fire at exit or other \"last\n        // ditch effort\" event) should always use the real data.\n        if (this._useClockState && !manual && !clockReady && !detached) {\n            this._debug('Flushing empty report to prime clock state');\n            spanRecords = [];\n            counters    = {};\n            internalLogs = [];\n        } else {\n            // Early out if we can.\n            if (this._buffersAreEmpty()) {\n                this._debug('Skipping empty report');\n                return done(null);\n            }\n\n            // Clear the object buffers as the data is now in the local\n            // variables\n            this._clearBuffers();\n            this._debug(`Flushing report (${spanRecords.length} spans)`);\n        }\n\n        this._transport.ensureConnection(this._options);\n\n        // Ensure the runtime GUID is set as it is possible buffer logs and\n        // spans before the GUID is necessarily set.\n        console.assert(this._runtimeGUID !== null, 'No runtime GUID for Tracer'); // eslint-disable-line no-console\n\n        let timestampOffset = this._useClockState ? clockOffsetMicros : 0;\n        let now = this._platform.nowMicros();\n        let report = new ReportImp(this._runtime, this._reportYoungestMicros, now,\n            spanRecords, internalLogs, counters, timestampOffset);\n\n        this.emit('prereport', report);\n        let originMicros = this._platform.nowMicros();\n\n        this._transport.report(detached, this._auth, report, (err, res) => {\n            let destinationMicros = this._platform.nowMicros();\n            let reportWindowSeconds = (now - report.oldest_micros) / 1e6;\n\n            if (err) {\n                // How many errors in a row? Influences the report backoff.\n                this._reportErrorStreak++;\n\n                // On a failed report, re-enqueue the data that was going to be\n                // sent.\n                let errString;\n                if (err.message) {\n                    errString = `${err.message}`;\n                } else {\n                    errString = `${err}`;\n                }\n                this._warn(`Error in report: ${errString}`, {\n                    last_report_seconds_ago : reportWindowSeconds,\n                });\n\n                this._restoreRecords(\n                    report.getSpanRecords(),\n                    report.getInternalLogs(),\n                    report.getCounters());\n\n                // Increment the counter *after* the counters are restored\n                this._counters['reports.errors.send']++;\n\n                this.emit('report_error', err, {\n                    error    : err,\n                    streak   : this._reportErrorStreak,\n                    detached : detached,\n                });\n            } else {\n                if (this.verbosity() >= 4) {\n                    this._debug(`Report flushed for last ${reportWindowSeconds} seconds`, {\n                        spans_reported : report.getSpanRecords().length,\n                    });\n                }\n\n                // Update internal data after the successful report\n                this._reportErrorStreak = 0;\n                this._reportYoungestMicros = now;\n\n                // Update the clock state if there's info from the report\n                if (res) {\n                    if (res.timing && res.timing.receive_micros && res.timing.transmit_micros) {\n                        this._clockState.addSample(\n                            originMicros,\n                            res.timing.receive_micros,\n                            res.timing.transmit_micros,\n                            destinationMicros);\n                    } else {\n                        // The response does not have timing information. Disable\n                        // the clock state assuming there'll never be timing data\n                        // to use.\n                        this._useClockState = false;\n                    }\n\n                    if (res.errors && res.errors.length > 0) {\n                        this._warn('Errors in report', res.errors);\n                    }\n                } else {\n                    this._useClockState = false;\n                }\n\n                this.emit('report', report, res);\n            }\n            return done(err);\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Stats and metrics\n    //-----------------------------------------------------------------------//\n\n    /**\n     * Internal API that returns some internal metrics.\n     */\n    stats() {\n        return {\n            counters : this._counters,\n        };\n    }\n\n    //-----------------------------------------------------------------------//\n    // Internal logging & errors\n    //-----------------------------------------------------------------------//\n    // The rules for how internal logs are processed:\n    //\n    // * Internal logs that are included in the Collector report:\n    //      - Always send errors logs along with the reports\n    //      - Never include any other logs\n    // * Internal logs that are echoed to the host application:\n    //      - See the README.md :)\n    //\n    _debug(msg, payload) {\n        if (this.verbosity() < 4) {\n            return;\n        }\n        this._printToConsole('log', `[LightStep:DEBUG] ${msg}`, payload);\n    }\n\n    _info(msg, payload) {\n        if (this.verbosity() < 3) {\n            return;\n        }\n        this._printToConsole('log', `[LightStep:INFO] ${msg}`, payload);\n    }\n\n    _warn(msg, payload) {\n        this._counters['internal.warnings']++;\n\n        if (this.verbosity() < 3) {\n            return;\n        }\n        this._printToConsole('warn', `[LightStep:WARN] ${msg}`, payload);\n    }\n\n    _error(msg, payload) {\n        this._counters['internal.errors']++;\n\n        // Internal errors are always reported to the collector\n        let record = this.log()\n            .level(constants.LOG_ERROR)\n            .message(msg)\n            .payload(payload)\n            .record();\n        this._pushInternalLog(record);\n\n        // Internal errors are reported to the host console conditionally based\n        // on the verbosity level.\n        let verbosity = this.verbosity();\n        if (verbosity === 0) {\n            return;\n        }\n\n        // Error messages are throttled in verbosity === 1 mode\n        const now = Date.now();\n        if (verbosity === 1) {\n            const nextVisible = this._lastVisibleErrorMillis + this._options.error_throttle_millis;\n            if (now < nextVisible) {\n                this._skippedVisibleErrors++;\n                return;\n            }\n            if (this._skippedVisibleErrors > 0) {\n                /* eslint-disable max-len */\n                const s = `${this._skippedVisibleErrors} errors masked since last logged error. Increase 'verbosity' option to see all errors.`;\n                /* eslint-enable max-len */\n                this._printToConsole('error', `[LightStep:ERROR] ${s}`, payload);\n            }\n        }\n\n        this._printToConsole('error', `[LightStep:ERROR] ${msg}`, payload);\n        this._lastVisibleErrorMillis = now;\n        this._skippedVisibleErrors = 0;\n    }\n\n    _printToConsole(type, msg, payload) {\n        // Internal option to silence intentional errors generated by the unit\n        // tests.\n        if (this._options.silent) {\n            return;\n        }\n\n        if (payload !== undefined) {\n            console[type](msg, payload); // eslint-disable-line no-console\n        }  else {\n            console[type](msg); // eslint-disable-line no-console\n        }\n    }\n\n    _pushInternalLog(record) {\n        if (!record) {\n            return;\n        }\n        if (this._internalLogs.length >= MAX_INTERNAL_LOGS) {\n            record.message = `MAX_INTERNAL_LOGS limit hit. Last error: ${record.message}`;\n            this._internalLogs[this._internalLogs.length - 1] = record;\n        } else {\n            this._internalLogs.push(record);\n        }\n    }\n}\n","import _each from '../../_each';\n\n// How many updates before a sample is considered old. This happens to\n// be one less than the number of samples in our buffer but that's\n// somewhat arbitrary.\nconst kMaxOffsetAge = 7;\n\nconst kStoredSamplesTTLMicros = 60 * 60 * 1000 * 1000; // 1 hour\n\nclass ClockState {\n\n    constructor(opts) {\n        this._nowMicros     = opts.nowMicros;\n        this._localStoreGet = opts.localStoreGet;\n        this._localStoreSet = opts.localStoreSet;\n\n        // The last eight samples, computed from timing information in\n        // RPCs.\n        this._samples = [];\n        this._currentOffsetMicros = 0;\n\n        // How many updates since we've updated currentOffsetMicros.\n        this._currentOffsetAge = kMaxOffsetAge + 1;\n\n        // Try to load samples from the local store.\n        // Only use the data if it's recent.\n        let storedData = this._localStoreGet();\n        if (storedData &&\n            storedData.timestamp_micros &&\n            storedData.timestamp_micros > this._nowMicros() - kStoredSamplesTTLMicros) {\n            // Make sure there are no more than (kMaxOffsetAge+1) elements\n            this._samples = storedData.samples.slice(-(kMaxOffsetAge + 1));\n        }\n        // Update the current offset based on these data.\n        this.update();\n    }\n\n    // Add a new timing sample and update the offset.\n    addSample(originMicros,\n              receiveMicros,\n              transmitMicros,\n              destinationMicros\n    ) {\n        let latestDelayMicros = Number.MAX_VALUE;\n        let latestOffsetMicros = 0;\n        // Ensure that all of the data are valid before using them. If\n        // not, we'll push a {0, MAX} record into the queue.\n        if (originMicros > 0 && receiveMicros > 0 &&\n            transmitMicros > 0 && destinationMicros > 0) {\n            latestDelayMicros = (destinationMicros - originMicros) -\n                (transmitMicros - receiveMicros);\n            latestOffsetMicros = ((receiveMicros - originMicros) +\n                           (transmitMicros - destinationMicros)) / 2;\n        }\n\n        // Discard the oldest sample and push the new one.\n        if (this._samples.length === kMaxOffsetAge + 1) {\n            this._samples.shift();\n        }\n        this._samples.push({\n            delayMicros  : latestDelayMicros,\n            offsetMicros : latestOffsetMicros,\n        });\n        this._currentOffsetAge++;\n\n        // Update the local store with this new sample.\n        this._localStoreSet({\n            timestamp_micros : this._nowMicros(),\n            samples          : this._samples,\n        });\n        this.update();\n    }\n\n    // Update the time offset based on the current samples.\n    update() {\n        // This is simplified version of the clock filtering in Simple\n        // NTP. It ignores precision and dispersion (frequency error). In\n        // brief, it keeps the 8 (kMaxOffsetAge+1) most recent\n        // delay-offset pairs, and considers the offset with the smallest\n        // delay to be the best one. However, it only uses this new offset\n        // if the change (relative to the last offset) is small compared\n        // to the estimated error.\n        //\n        // See:\n        // https://tools.ietf.org/html/rfc5905#appendix-A.5.2\n        // http://books.google.com/books?id=pdTcJBfnbq8C\n        //   esp. section 3.5\n        // http://www.eecis.udel.edu/~mills/ntp/html/filter.html\n        // http://www.eecis.udel.edu/~mills/database/brief/algor/algor.pdf\n        // http://www.eecis.udel.edu/~mills/ntp/html/stats.html\n\n        // TODO: Consider huff-n'-puff if the delays are highly asymmetric.\n        // http://www.eecis.udel.edu/~mills/ntp/html/huffpuff.html\n\n        // Find the sample with the smallest delay; the corresponding\n        // offset is the \"best\" one.\n        let minDelayMicros = Number.MAX_VALUE;\n        let bestOffsetMicros = 0;\n        _each(this._samples, (sample) => {\n            if (sample.delayMicros < minDelayMicros) {\n                minDelayMicros = sample.delayMicros;\n                bestOffsetMicros = sample.offsetMicros;\n            }\n        });\n\n        // No update.\n        if (bestOffsetMicros === this._currentOffsetMicros) {\n            return;\n        }\n\n        // Now compute the jitter, i.e. the error relative to the new\n        // offset were we to use it.\n        let jitter = 0;\n        _each(this._samples, (sample) => {\n            jitter += Math.pow(bestOffsetMicros - sample.offsetMicros, 2);\n        });\n        jitter = Math.sqrt(jitter / this._samples.length);\n\n        // Ignore spikes: only use the new offset if the change is not too\n        // large... unless the current offset is too old. The \"too old\"\n        // condition is also triggered when update() is called from the\n        // constructor.\n        const kSGATE = 3; // See RFC 5905\n        if (this._currentOffsetAge > kMaxOffsetAge ||\n            Math.abs(this._currentOffsetMicros - bestOffsetMicros) < kSGATE * jitter) {\n            this._currentOffsetMicros = bestOffsetMicros;\n            this._currentOffsetAge = 0;\n        }\n    }\n\n    // Returns the difference in microseconds between the server's clock\n    // and our clock. This should be added to any local timestamps before\n    // sending them to the server. Note that a negative offset means that\n    // the local clock is ahead of the server's.\n    offsetMicros() {\n        return Math.floor(this._currentOffsetMicros);\n    }\n\n    // Returns true if we've performed enough measurements to be confident\n    // in the current offset.\n    isReady() {\n        return this._samples.length > 3;\n    }\n\n    activeSampleCount() {\n        return this._samples.length;\n    }\n}\n\nmodule.exports = ClockState;\n","class Util {\n\n    // Similar to a regular setTimeout() call, but dereferences the timer so the\n    // program execution will not be held up by this timer.\n    detachedTimeout(callback, delay) {\n        let timer = setTimeout(callback, delay);\n        if (timer.unref) {\n            timer.unref();\n        }\n        return timer;\n    }\n}\n\nexport default new Util();\n","import Tracer from './imp/tracer_imp';\nimport { Platform } from './platform_abstraction_layer';\n\nconst library = {\n    Tracer : Tracer,\n};\n\nPlatform.initLibrary(library);\nmodule.exports = library;\n","/* global PLATFORM_BROWSER */\n/* global TRANSPORT_PROTO */\n\n// Hide the differences in how the Thrift compiler generates code for the\n// different platforms as well as expose a Platform class to abstract a few\n// general differences in the platforms.\nif ((typeof PLATFORM_BROWSER !== 'undefined') && PLATFORM_BROWSER && TRANSPORT_PROTO) {\n    module.exports = {\n        Platform       : require('./imp/platform/browser/platform_browser.js'),\n        ProtoTransport : require('./imp/platform/browser/transport_httpproto.js'),\n        proto          : require('./imp/generated_proto/collector_pb.js'),\n    };\n} else if ((typeof PLATFORM_BROWSER !== 'undefined') && PLATFORM_BROWSER) {\n    module.exports = {\n        Platform        : require('./imp/platform/browser/platform_browser.js'),\n        ThriftTransport : require('./imp/platform/browser/transport_httpthrift.js'),\n        thrift          : require('./imp/platform/browser/thrift.js'),\n        crouton_thrift  : require('./imp/platform/browser/crouton_thrift.js'),\n    };\n} else {\n    module.exports = {\n        Platform        : require('./imp/platform/node/platform_node.js'),\n        ThriftTransport : require('./imp/platform/node/transport_httpthrift.js'),\n        ProtoTransport  : require('./imp/platform/node/transport_httpproto.js'),\n        thrift          : require('thrift'),\n        crouton_thrift  : require('./imp/platform/node/crouton_thrift.js'),\n        proto           : require('./imp/generated_proto/collector_pb.js'),\n    };\n}\n","import _each from '../_each';\n\nclass InstrumentPageLoad {\n    constructor() {\n        this._inited = false;\n        this._span = null;\n    }\n\n    name() {\n        return 'instrument_page_load';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('instrument_page_load', { type : 'bool', defaultValue : false });\n    }\n\n    start(tracerImp) {\n        if (this._inited) {\n            return;\n        }\n        this._inited = true;\n\n        if (typeof window !== 'object' || typeof document !== 'object') {\n            return;\n        }\n\n        const currentOptions = tracerImp.options();\n        if (currentOptions.instrument_page_load) {\n            this._ensureSpanStarted(tracerImp);\n            document.addEventListener('readystatechange', this._handleReadyStateChange.bind(this));\n        }\n    }\n\n    stop() {\n    }\n\n    _ensureSpanStarted(tracerImp) {\n        if (!this._span) {\n            this._span = tracerImp.startSpan('document/load');\n            tracerImp.addActiveRootSpan(this._span);\n        }\n    }\n\n    _handleReadyStateChange() {\n        if (!this._span) {\n            return;\n        }\n\n        let span = this._span;\n        let state = document.readyState;\n        let payload = undefined;\n        if (state === 'complete') {\n            payload = {};\n            if (window.performance && performance.timing) {\n                this._addTimingSpans(span, performance.timing);\n                payload['window.performance.timing'] = performance.timing;\n            }\n        }\n\n        span.logEvent(`document.readystatechange ${state}`, payload);\n\n        if (state === 'complete') {\n            if (span.tracer()) {\n                span.tracer().removeActiveRootSpan(span.tracer());\n            }\n            span.finish();\n        }\n    }\n\n    _copyNavigatorProperties(nav) {\n        let dst = {};\n        for (let key in nav) { // eslint-disable-line guard-for-in\n            try {\n                let value = nav[key];\n                switch (key) {\n\n                case 'plugins': {\n                    let p = [];\n                    for (let i = 0; i < value.length; i++) {\n                        let item = value.item(i);\n                        p.push({\n                            name        : item.name,\n                            description : item.description,\n                        });\n                    }\n                    dst[key] = p;\n                } break;\n\n                case 'mimeTypes': {\n                    let p = [];\n                    for (let i = 0; i < value.length; i++) {\n                        let item = value.item(i);\n                        p.push({\n                            type        : item.type,\n                            description : item.description,\n                            suffixes    : item.suffixes,\n                        });\n                    }\n                    dst[key] = p;\n                } break;\n\n                default:\n                    dst[key] = value;\n                    break;\n                }\n            } catch (e) {\n                // Skip, just in case\n            }\n        }\n        return dst;\n    }\n\n    // Retroactively create the appropriate spans and logs\n    _addTimingSpans(parentImp, timing) {\n        // NOTE: this currently relies on LightStep-specific APIs\n        if (!parentImp) {\n            return;\n        }\n\n        parentImp.setTag('user_agent', navigator.userAgent);\n\n        _each(timing, (value, key) => {\n            // e.g. secureConnectionStart is not always set\n            if (typeof value !== 'number' || value === 0) {\n                return;\n            }\n\n            let payload = undefined;\n\n            if (key === 'navigationStart' && typeof navigator === 'object') {\n                payload = {\n                    navigator : this._copyNavigatorProperties(navigator),\n                };\n            }\n            parentImp.log({\n                message : `document ${key}`,\n                payload : payload,\n            }, value);\n        });\n\n        if (window.chrome && window.chrome.loadTimes) {\n            let chromeTimes = window.chrome.loadTimes();\n            if (chromeTimes) {\n                parentImp.log({\n                    message : 'window.chrome.loadTimes()',\n                    payload : chromeTimes,\n                }, timing.domComplete);\n            }\n        }\n\n        parentImp.setBeginMicros(timing.navigationStart * 1000.0);\n\n        parentImp.tracer().startSpan('document/time_to_first_byte', { childOf : parentImp })\n            .setBeginMicros(timing.requestStart * 1000.0)\n            .setEndMicros(timing.responseStart * 1000.0)\n            .finish();\n        parentImp.tracer()\n            .startSpan('document/response_transfer', { childOf : parentImp })\n            .setBeginMicros(timing.responseStart * 1000.0)\n            .setEndMicros(timing.responseEnd * 1000.0)\n            .finish();\n        parentImp.tracer().startSpan('document/dom_load', { childOf : parentImp })\n            .setBeginMicros(timing.domLoading * 1000.0)\n            .setEndMicros(timing.domInteractive * 1000.0)\n            .finish();\n    }\n}\n\nmodule.exports = new InstrumentPageLoad();\n","import _each from '../_each';\nimport * as opentracing from 'opentracing';\n\n// Capture the proxied values on script load (i.e. ASAP) in case there are\n// multiple layers of instrumentation.\nlet proxied = {};\nif (typeof window === 'object' && typeof window.XMLHttpRequest !== 'undefined') {\n    proxied = {\n        XMLHttpRequest   : XMLHttpRequest,\n        open             : XMLHttpRequest.prototype.open,\n        send             : XMLHttpRequest.prototype.send,\n        setRequestHeader : XMLHttpRequest.prototype.setRequestHeader,\n    };\n}\n\nfunction getCookies() {\n    if (typeof document === 'undefined' || !document.cookie) {\n        return null;\n    }\n    let cookies = document.cookie.split(';');\n    let data = {};\n    let count = 0;\n    for (let i = 0; i < cookies.length; i++) {\n        let parts = cookies[i].split('=', 2);\n        if (parts.length === 2) {\n            let key = parts[0].replace(/^\\s+/, '').replace(/\\s+$/, '');\n            data[key] = decodeURIComponent(parts[1]);\n            try {\n                data[key] = JSON.parse(data[key]);\n            } catch (_ignored) { /* Ignored */ }\n            count++;\n        }\n    }\n    if (count > 0) {\n        return data;\n    }\n    return null;\n}\n\n// Normalize the getAllResponseHeaders output\nfunction getResponseHeaders(xhr) {\n    let raw = xhr.getAllResponseHeaders();\n    let parts = raw.replace(/\\s+$/, '').split(/\\n/);\n    for (let i = 0; i < parts.length; i++) {\n        parts[i] = parts[i].replace(/\\r/g, '').replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n    return parts;\n}\n\n// Automatically create spans for all XMLHttpRequest objects.\n//\n// NOTE: this code currently works only with a single Tracer.\n//\nclass InstrumentXHR {\n    constructor() {\n        this._enabled = this._isValidContext();\n        this._proxyInited = false;\n        this._internalExclusions = [];\n        this._tracer = null;\n        this._handleOptions = this._handleOptions.bind(this);\n\n        if (!this._enabled) {\n            return;\n        }\n    }\n\n    name() {\n        return 'instrument_xhr';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('xhr_instrumentation', { type : 'bool', defaultValue : false });\n        tracerImp.addOption('xhr_url_inclusion_patterns', { type : 'array', defaultValue : [/.*/] });\n        tracerImp.addOption('xhr_url_exclusion_patterns', { type : 'array', defaultValue : [] });\n    }\n\n    start(tracerImp) {\n        if (!this._enabled) {\n            return;\n        }\n        this._tracer = tracerImp;\n\n        let currentOptions = tracerImp.options();\n        this._addServiceHostToExclusions(currentOptions);\n        this._handleOptions({}, currentOptions);\n        tracerImp.on('options', this._handleOptions);\n    }\n\n    stop() {\n        if (!this._enabled) {\n            return;\n        }\n        let proto = proxied.XMLHttpRequest.prototype;\n        proto.open = proxied.open;\n        proto.send = proxied.send;\n    }\n\n    /**\n     * Respond to options changes on the Tracer.\n     *\n     * Note that `modified` is the options that have changed in this call,\n     * along with their previous and new values. `current` is the full set of\n     * current options *including* the newly modified values.\n     */\n    _handleOptions(modified, current) {\n        // Automatically add the service host itself to the list of exclusions\n        // to avoid reporting on the reports themselves\n        let serviceHost = modified.collector_host;\n        if (serviceHost) {\n            this._addServiceHostToExclusions(current);\n        }\n\n        // Set up the proxied XHR calls unless disabled\n        if (!this._proxyInited && current.xhr_instrumentation) {\n            this._proxyInited = true;\n            let proto = proxied.XMLHttpRequest.prototype;\n            proto.setRequestHeader = this._instrumentSetRequestHeader();\n            proto.open = this._instrumentOpen();\n            proto.send = this._instrumentSend();\n        }\n    }\n\n    /**\n     * Ensure that the reports to the collector don't get instrumented as well,\n     * as that recursive instrumentation is more confusing than valuable!\n     */\n    _addServiceHostToExclusions(opts) {\n        if (opts.collector_host.length === 0) {\n            return;\n        }\n\n        // http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n        function escapeRegExp(str) {\n            return (`${str}`).replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n        }\n\n        // Check against the hostname without the port as well as the canonicalized\n        // URL may drop the standard port.\n        let host = escapeRegExp(opts.collector_host);\n        let port = escapeRegExp(opts.collector_port);\n        let set = [new RegExp(`^https?://${host}:${port}`)];\n        if (port === '80') {\n            set.push(new RegExp(`^http://${host}`));\n        } else if (port === '443') {\n            set.push(new RegExp(`^https://${host}`));\n        }\n        this._internalExclusions = set;\n    }\n\n    /**\n     * Check preconditions for the auto-instrumentation of XHRs to work properly.\n     * There are a lot of potential JavaScript platforms.\n     */\n    _isValidContext() {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (!window.XMLHttpRequest) {\n            return false;\n        }\n        if (!window.XMLHttpRequest.prototype) {\n            return false;\n        }\n        return true;\n    }\n\n    _instrumentSetRequestHeader() {\n        return function (header, value) {\n            this.__requestHeaders = this.__requestHeaders || {};\n            this.__requestHeaders[header] = value;\n            return proxied.setRequestHeader.apply(this, arguments);\n        };\n    }\n\n    _instrumentOpen() {\n        let self = this;\n        let tracer = this._tracer;\n\n        return function (method, url, asyncArg, user, password) {\n            if (!self._shouldTrace(tracer, this, url)) {\n                return proxied.open.apply(this, arguments);\n            }\n\n            let span = tracer.startSpan('XMLHttpRequest');\n            tracer.addActiveRootSpan(span);\n            this.__tracer_span = span;\n            this.__tracer_url = url;\n\n            let tags = {\n                method : method,\n                url    : url,\n                async  : asyncArg,\n                user   : user,\n            };\n            if (url) {\n                tags.url_pathname = url.split('?')[0];\n            }\n\n            let openPayload = {};\n            _each(tags, (val, key) => {\n                openPayload[key] = val;\n            });\n            openPayload.cookies = getCookies();\n\n            // Note: async defaults to true\n            let async = (asyncArg === undefined ? true : asyncArg);\n            if (async) {\n                this.addEventListener('readystatechange', function () {\n                    if (this.readyState === 0) {\n                        span.log({\n                            readyState : 0,\n                            event      : 'unsent',\n                        });\n                    } else if (this.readyState === 1) {\n                        span.log({\n                            readyState : 1,\n                            event      : 'sending',\n                        });\n                    } else if (this.readyState === 2) {\n                        span.log({\n                            readyState  : 2,\n                            event       : 'headers received',\n                            method      : method,\n                            url         : url,\n                            openPayload : openPayload,\n                            headers     : getResponseHeaders(this),\n                        });\n                        span.addTags(tags);\n                    } else if (this.readyState === 3) {\n                        span.log({\n                            readyState : 3,\n                            event      : 'loading',\n                        });\n                    } else if (this.readyState === 4) {\n                        let responseType = this.responseType;\n                        span.log({\n                            readyState   : 4,\n                            url          : url,\n                            method       : method,\n                            headers      : getResponseHeaders(this),\n                            status       : this.status,\n                            statusText   : this.statusText,\n                            responseType : responseType,\n                        });\n                        tracer.removeActiveRootSpan(span);\n                        span.finish();\n                    } else {\n                        span.log({\n                            readyState : this.readyState,\n                        });\n                    }\n                });\n            }\n\n            let result = proxied.open.apply(this, arguments);\n            if (!async) {\n                tracer.removeActiveRootSpan(span);\n                span.finish();\n            }\n            return result;\n        };\n    }\n\n    _instrumentSend() {\n        let self = this;\n        let tracer = this._tracer;\n        return function () {\n            if (!self._shouldTrace(tracer, this, this.__tracer_url)) {\n                return proxied.send.apply(this, arguments);\n            }\n\n            let span = this.__tracer_span;\n            if (!span) {\n                return proxied.send.apply(this, arguments);\n            }\n\n            let data = Array.prototype.slice.call(arguments);\n            let len = undefined;\n            if (data.length === 1) {\n                if (data[0] && data[0].length) {\n                    len = data[0].length;\n                }\n                try {\n                    data = JSON.parse(data[0]);\n                } catch (e) {\n                    // Ignore the error\n                }\n            }\n            let lenStr = (len === undefined) ? '' : `, data length=${len}`;\n            span.log({\n                event       : 'send',\n                data_length : lenStr,\n            });\n\n            // Add Open-Tracing headers\n            const headersCarrier = {};\n            tracer.inject(span.context(), opentracing.FORMAT_HTTP_HEADERS, headersCarrier);\n            const keys = Object.keys(headersCarrier);\n            keys.forEach((key) => {\n                proxied.setRequestHeader.call(this, key, headersCarrier[key]);\n            });\n\n            return proxied.send.apply(this, arguments);\n        };\n    }\n\n    _shouldTrace(tracer, xhr, url) {\n        // This shouldn't be possible, but let's be paranoid\n        if (!tracer) {\n            return false;\n        }\n\n        let opts = tracer.options();\n        if (opts.disabled) {\n            return false;\n        }\n        if (!url) {\n            return false;\n        }\n        for (let key in this._internalExclusions) {\n            if (!this._internalExclusions.hasOwnProperty(key)) {\n                continue;\n            }\n            const ex = this._internalExclusions[key];\n            if (ex.test(url)) {\n                return false;\n            }\n        }\n        let include = false;\n        for (let key in opts.xhr_url_inclusion_patterns) {\n            if (!opts.xhr_url_inclusion_patterns.hasOwnProperty(key)) {\n                continue;\n            }\n            const inc = opts.xhr_url_inclusion_patterns[key];\n            if (inc.test(url)) {\n                include = true;\n                break;\n            }\n        }\n        if (!include) {\n            return false;\n        }\n        for (let key in opts.xhr_url_exclusion_patterns) {\n            if (!opts.xhr_url_exclusion_patterns.hasOwnProperty(key)) {\n                continue;\n            }\n            const ex = opts.xhr_url_exclusion_patterns[key];\n            if (ex.test(url)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nmodule.exports = new InstrumentXHR();\n","const constants = require('../constants');\n\nclass LogToConsole {\n    constructor() {\n        this._enabled = false;\n        this._tracer = null;\n        this._optionsCb = this._handleOptions.bind(this);\n        this._logAddedCb = this._handleLogAdded.bind(this);\n    }\n\n    name() {\n        return 'log_to_console';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('log_to_console', {\n            type         : 'bool',\n            defaultValue : false,\n        });\n        tracerImp.on('options', this._optionsCb);\n    }\n\n    start(tracer, tracerImp) {\n        this._tracer = tracer;\n    }\n\n    stop() {\n        this._tracer.removeListener('options', this._optionsCb);\n    }\n\n    _handleOptions(modified, current, tracerImp) {\n        let enabled = current.log_to_console;\n        if (this._enabled === enabled) {\n            return;\n        }\n        this._enabled = enabled;\n        if (this._enabled) {\n            tracerImp.on('log_added', this._logAddedCb);\n        } else {\n            tracerImp.removeListener('log_added', this._logAddedCb);\n        }\n    }\n\n    _handleLogAdded(record) {\n        let level = constants.LOG_STRING_TO_LEVEL[record.level];\n        let message = record.message;\n\n        // Ignore records without a message (e.g. a stable_name log record)\n        if (!message) {\n            return;\n        }\n\n        let payload = record.payload_json;\n        if (payload) {\n            try {\n                payload = JSON.parse(payload);\n            } catch (_ignored) { /* ignored */ }\n        }\n\n        switch (level) {\n        case constants.LOG_ERROR:\n        case constants.LOG_FATAL:\n            if (payload !== undefined) {\n                console.error(message, payload); // eslint-disable-line no-console\n            } else {\n                console.error(message); // eslint-disable-line no-console\n            }\n            break;\n        case constants.LOG_WARN:\n            if (payload !== undefined) {\n                console.warn(message, payload); // eslint-disable-line no-console\n            } else {\n                console.warn(message); // eslint-disable-line no-console\n            }\n            break;\n        case constants.LOG_INFO:\n        default:\n            if (payload !== undefined) {\n                console.log(message, payload); // eslint-disable-line no-console\n            } else {\n                console.log(message); // eslint-disable-line no-console\n            }\n            break;\n        }\n    }\n}\n\nmodule.exports = new LogToConsole();\n"],"sourceRoot":""}